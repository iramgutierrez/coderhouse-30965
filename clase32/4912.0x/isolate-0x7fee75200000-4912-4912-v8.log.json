{
  "code": [
  {
    "name": "/Users/iramgutierrez/.nvm/versions/node/v16.13.2/bin/node",
    "type": "SHARED_LIB"
  },
  {
    "name": "T node::AsyncResource::AsyncResource(v8::Isolate*, v8::Local<v8::Object>, char const*, double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::AsyncResource(v8::Isolate*, v8::Local<v8::Object>, char const*, double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::~AsyncResource()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::~AsyncResource()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::~AsyncResource()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::MakeCallback(v8::Local<v8::Function>, int, v8::Local<v8::Value>*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::get_resource()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::MakeCallback(char const*, int, v8::Local<v8::Value>*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::MakeCallback(v8::Local<v8::String>, int, v8::Local<v8::Value>*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::get_async_id() const",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::get_trigger_async_id() const",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::CallbackScope::CallbackScope(node::AsyncResource*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::CallbackScope::CallbackScope(node::AsyncResource*)",
    "type": "CPP"
  },
  {
    "name": "T node::CallbackScope::CallbackScope(v8::Isolate*, v8::Local<v8::Object>, node::async_context)",
    "type": "CPP"
  },
  {
    "name": "T node::CallbackScope::CallbackScope(node::Environment*, v8::Local<v8::Object>, node::async_context)",
    "type": "CPP"
  },
  {
    "name": "T node::CallbackScope::CallbackScope(v8::Isolate*, v8::Local<v8::Object>, node::async_context)",
    "type": "CPP"
  },
  {
    "name": "T node::CallbackScope::CallbackScope(node::Environment*, v8::Local<v8::Object>, node::async_context)",
    "type": "CPP"
  },
  {
    "name": "T node::InternalCallbackScope::InternalCallbackScope(node::Environment*, v8::Local<v8::Object>, node::async_context const&, int)",
    "type": "CPP"
  },
  {
    "name": "T node::CallbackScope::~CallbackScope()",
    "type": "CPP"
  },
  {
    "name": "T node::InternalCallbackScope::~InternalCallbackScope()",
    "type": "CPP"
  },
  {
    "name": "T node::CallbackScope::~CallbackScope()",
    "type": "CPP"
  },
  {
    "name": "T node::InternalCallbackScope::InternalCallbackScope(node::AsyncWrap*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::InternalCallbackScope::InternalCallbackScope(node::Environment*, v8::Local<v8::Object>, node::async_context const&, int)",
    "type": "CPP"
  },
  {
    "name": "T node::InternalCallbackScope::InternalCallbackScope(node::AsyncWrap*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::AsyncHooks::push_async_context(double, double, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::InternalCallbackScope::~InternalCallbackScope()",
    "type": "CPP"
  },
  {
    "name": "T node::InternalCallbackScope::Close()",
    "type": "CPP"
  },
  {
    "name": "t node::AsyncHooks::pop_async_context(double)",
    "type": "CPP"
  },
  {
    "name": "T node::InternalMakeCallback(node::Environment*, v8::Local<v8::Object>, v8::Local<v8::Object>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*, node::async_context)",
    "type": "CPP"
  },
  {
    "name": "T node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, char const*, int, v8::Local<v8::Value>*, node::async_context)",
    "type": "CPP"
  },
  {
    "name": "T node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::String>, int, v8::Local<v8::Value>*, node::async_context)",
    "type": "CPP"
  },
  {
    "name": "T node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*, node::async_context)",
    "type": "CPP"
  },
  {
    "name": "T node::MakeSyncCallback(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*)",
    "type": "CPP"
  },
  {
    "name": "T node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, char const*, int, v8::Local<v8::Value>*)",
    "type": "CPP"
  },
  {
    "name": "T node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::String>, int, v8::Local<v8::Value>*)",
    "type": "CPP"
  },
  {
    "name": "T node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::vector<v8::Global<v8::Context>, std::__1::allocator<v8::Global<v8::Context> > >::__append(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::AsyncHooks::clear_async_id_stack()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::vector<v8::Global<v8::Object>, std::__1::allocator<v8::Global<v8::Object> > >::shrink_to_fit()",
    "type": "CPP"
  },
  {
    "name": "T node::SpinEventLoop(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::CommonEnvironmentSetup::CommonEnvironmentSetup(node::MultiIsolatePlatform*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::function<node::Environment* (node::CommonEnvironmentSetup const*)>)",
    "type": "CPP"
  },
  {
    "name": "T node::CommonEnvironmentSetup::CommonEnvironmentSetup(node::MultiIsolatePlatform*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::function<node::Environment* (node::CommonEnvironmentSetup const*)>)",
    "type": "CPP"
  },
  {
    "name": "T node::CommonEnvironmentSetup::~CommonEnvironmentSetup()",
    "type": "CPP"
  },
  {
    "name": "T node::CommonEnvironmentSetup::~CommonEnvironmentSetup()",
    "type": "CPP"
  },
  {
    "name": "T node::CommonEnvironmentSetup::event_loop() const",
    "type": "CPP"
  },
  {
    "name": "T node::CommonEnvironmentSetup::array_buffer_allocator() const",
    "type": "CPP"
  },
  {
    "name": "T node::CommonEnvironmentSetup::isolate() const",
    "type": "CPP"
  },
  {
    "name": "T node::CommonEnvironmentSetup::isolate_data() const",
    "type": "CPP"
  },
  {
    "name": "T node::CommonEnvironmentSetup::env() const",
    "type": "CPP"
  },
  {
    "name": "T node::CommonEnvironmentSetup::context() const",
    "type": "CPP"
  },
  {
    "name": "t node::CommonEnvironmentSetup::~CommonEnvironmentSetup()::$_0::__invoke(void*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char)",
    "type": "CPP"
  },
  {
    "name": "t node::ToUpper(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::SPrintFImpl(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<3u, char const*, 0>(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<4u, char const*, 0>(char const*)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__emplace_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_pointer<char*, std::__1::default_delete<char []>, std::__1::allocator<char> >::~__shared_ptr_pointer()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_pointer<char*, std::__1::default_delete<char []>, std::__1::allocator<char> >::~__shared_ptr_pointer()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_pointer<auto node::options_parser::OptionsParser<node::EnvironmentOptions>::Convert<node::options_parser::OptionsParser<node::DebugOptions>::BaseOptionField, node::DebugOptions>(std::__1::shared_ptr<node::options_parser::OptionsParser<node::DebugOptions>::BaseOptionField>, node::DebugOptions* (node::EnvironmentOptions::*)())::AdaptedField*, std::__1::default_delete<auto node::options_parser::OptionsParser<node::EnvironmentOptions>::Convert<node::options_parser::OptionsParser<node::DebugOptions>::BaseOptionField, node::DebugOptions>(std::__1::shared_ptr<node::options_parser::OptionsParser<node::DebugOptions>::BaseOptionField>, node::DebugOptions* (node::EnvironmentOptions::*)())::AdaptedField*>, std::__1::allocator<auto node::options_parser::OptionsParser<node::EnvironmentOptions>::Convert<node::options_parser::OptionsParser<node::DebugOptions>::BaseOptionField, node::DebugOptions>(std::__1::shared_ptr<node::options_parser::OptionsParser<node::DebugOptions>::BaseOptionField>, node::DebugOptions* (node::EnvironmentOptions::*)())::AdaptedField*> >::__on_zero_shared()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_pointer<char*, std::__1::default_delete<char []>, std::__1::allocator<char> >::__on_zero_shared_weak()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_bad_function_call()",
    "type": "CPP"
  },
  {
    "name": "T node::ParseEncoding(char const*, node::encoding)",
    "type": "CPP"
  },
  {
    "name": "T node::ParseEncoding(v8::Isolate*, v8::Local<v8::Value>, node::encoding)",
    "type": "CPP"
  },
  {
    "name": "T node::Encode(v8::Isolate*, char const*, unsigned long, node::encoding)",
    "type": "CPP"
  },
  {
    "name": "T node::Encode(v8::Isolate*, unsigned short const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::DecodeBytes(v8::Isolate*, v8::Local<v8::Value>, node::encoding)",
    "type": "CPP"
  },
  {
    "name": "T node::DecodeWrite(v8::Isolate*, char*, unsigned long, v8::Local<v8::Value>, node::encoding)",
    "type": "CPP"
  },
  {
    "name": "T node::AllowWasmCodeGenerationCallback(v8::Local<v8::Context>, v8::Local<v8::String>)",
    "type": "CPP"
  },
  {
    "name": "T node::ShouldAbortOnUncaughtException(v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "T node::PrepareStackTraceCallback(v8::Local<v8::Context>, v8::Local<v8::Value>, v8::Local<v8::Array>)",
    "type": "CPP"
  },
  {
    "name": "T node::NodeArrayBufferAllocator::Allocate(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::NodeArrayBufferAllocator::AllocateUninitialized(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::NodeArrayBufferAllocator::Reallocate(void*, unsigned long, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::NodeArrayBufferAllocator::Free(void*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::DebuggingArrayBufferAllocator::~DebuggingArrayBufferAllocator()",
    "type": "CPP"
  },
  {
    "name": "T node::DebuggingArrayBufferAllocator::~DebuggingArrayBufferAllocator()",
    "type": "CPP"
  },
  {
    "name": "T node::DebuggingArrayBufferAllocator::~DebuggingArrayBufferAllocator()",
    "type": "CPP"
  },
  {
    "name": "T node::DebuggingArrayBufferAllocator::Allocate(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::DebuggingArrayBufferAllocator::RegisterPointerInternal(void*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::DebuggingArrayBufferAllocator::AllocateUninitialized(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::DebuggingArrayBufferAllocator::Free(void*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::DebuggingArrayBufferAllocator::UnregisterPointerInternal(void*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::DebuggingArrayBufferAllocator::Reallocate(void*, unsigned long, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::DebuggingArrayBufferAllocator::RegisterPointer(void*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::NodeArrayBufferAllocator::RegisterPointer(void*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::DebuggingArrayBufferAllocator::UnregisterPointer(void*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::NodeArrayBufferAllocator::UnregisterPointer(void*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<void*, unsigned long, std::__1::hash<void*>, std::__1::equal_to<void*>, std::__1::allocator<std::__1::pair<void* const, unsigned long> > >::operator[](void* const&)",
    "type": "CPP"
  },
  {
    "name": "T node::ArrayBufferAllocator::Create(bool)",
    "type": "CPP"
  },
  {
    "name": "T node::CreateArrayBufferAllocator()",
    "type": "CPP"
  },
  {
    "name": "T node::FreeArrayBufferAllocator(node::ArrayBufferAllocator*)",
    "type": "CPP"
  },
  {
    "name": "T node::SetIsolateCreateParamsForNode(v8::Isolate::CreateParams*)",
    "type": "CPP"
  },
  {
    "name": "T node::SetIsolateErrorHandlers(v8::Isolate*, node::IsolateSettings const&)",
    "type": "CPP"
  },
  {
    "name": "T node::SetIsolateMiscHandlers(v8::Isolate*, node::IsolateSettings const&)",
    "type": "CPP"
  },
  {
    "name": "T node::SetIsolateUpForNode(v8::Isolate*, node::IsolateSettings const&)",
    "type": "CPP"
  },
  {
    "name": "T node::SetIsolateUpForNode(v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "T node::NewIsolate(v8::Isolate::CreateParams*, uv_loop_s*, node::MultiIsolatePlatform*)",
    "type": "CPP"
  },
  {
    "name": "T node::NewIsolate(node::ArrayBufferAllocator*, uv_loop_s*, node::MultiIsolatePlatform*)",
    "type": "CPP"
  },
  {
    "name": "T node::NewIsolate(std::__1::shared_ptr<node::ArrayBufferAllocator>, uv_loop_s*, node::MultiIsolatePlatform*)",
    "type": "CPP"
  },
  {
    "name": "T node::CreateIsolateData(v8::Isolate*, uv_loop_s*, node::MultiIsolatePlatform*, node::ArrayBufferAllocator*)",
    "type": "CPP"
  },
  {
    "name": "T node::FreeIsolateData(node::IsolateData*)",
    "type": "CPP"
  },
  {
    "name": "T node::InspectorParentHandle::~InspectorParentHandle()",
    "type": "CPP"
  },
  {
    "name": "T node::InspectorParentHandle::~InspectorParentHandle()",
    "type": "CPP"
  },
  {
    "name": "T node::InspectorParentHandle::~InspectorParentHandle()",
    "type": "CPP"
  },
  {
    "name": "T node::CreateEnvironment(node::IsolateData*, v8::Local<v8::Context>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, node::EnvironmentFlags::Flags, node::ThreadId, std::__1::unique_ptr<node::InspectorParentHandle, std::__1::default_delete<node::InspectorParentHandle> >)",
    "type": "CPP"
  },
  {
    "name": "T node::FreeEnvironment(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::GetInspectorParentHandle(node::Environment*, node::ThreadId, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::LoadEnvironment(node::Environment*, std::__1::function<v8::MaybeLocal<v8::Value> (node::StartExecutionCallbackInfo const&)>)",
    "type": "CPP"
  },
  {
    "name": "T node::LoadEnvironment(node::Environment*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::GetCurrentEnvironment(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::GetEnvironmentIsolateData(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::GetArrayBufferAllocator(node::IsolateData*)",
    "type": "CPP"
  },
  {
    "name": "T node::GetMultiIsolatePlatform(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::GetMultiIsolatePlatform(node::IsolateData*)",
    "type": "CPP"
  },
  {
    "name": "T node::CreatePlatform(int, node::tracing::TracingController*)",
    "type": "CPP"
  },
  {
    "name": "T node::CreatePlatform(int, v8::TracingController*)",
    "type": "CPP"
  },
  {
    "name": "T node::MultiIsolatePlatform::Create(int, v8::TracingController*)",
    "type": "CPP"
  },
  {
    "name": "T node::FreePlatform(node::MultiIsolatePlatform*)",
    "type": "CPP"
  },
  {
    "name": "T node::GetPerContextExports(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::InitializePrimordials(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::NewContext(v8::Isolate*, v8::Local<v8::ObjectTemplate>)",
    "type": "CPP"
  },
  {
    "name": "T node::InitializeContext(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::ProtoThrower(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::InitializeContextRuntime(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::InitializeContextForSnapshot(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::GetCurrentEventLoop(v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "T node::AddLinkedBinding(node::Environment*, node::node_module const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AddLinkedBinding(node::Environment*, napi_module const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AddLinkedBinding(node::Environment*, char const*, void (*)(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*), void*)",
    "type": "CPP"
  },
  {
    "name": "T node::AllocateEnvironmentThreadId()",
    "type": "CPP"
  },
  {
    "name": "T node::DefaultProcessExitHandler(node::Environment*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::DisposePlatform()",
    "type": "CPP"
  },
  {
    "name": "T node::SetProcessExitHandler(node::Environment*, std::__1::function<void (node::Environment*, int)>&&)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to v8::internal::PointersUpdatingVisitor::~PointersUpdatingVisitor()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::SimpleWriteWrap<node::ReqWrap<uv_write_s> >::GetAsyncWrap()",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_PROTO_ACCESS<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_iterator<std::__1::__hash_node<void*, void*>*> std::__1::__hash_table<void*, std::__1::hash<void*>, std::__1::equal_to<void*>, std::__1::allocator<void*> >::find<void*>(void* const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_const_iterator<std::__1::__hash_node<v8::internal::compiler::Node*, void*>*> std::__1::__hash_table<v8::internal::compiler::Node*, std::__1::hash<v8::internal::compiler::Node*>, std::__1::equal_to<v8::internal::compiler::Node*>, std::__1::allocator<v8::internal::compiler::Node*> >::find<v8::internal::compiler::Node*>(v8::internal::compiler::Node* const&) const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<void*, unsigned long>, std::__1::__unordered_map_hasher<void*, std::__1::__hash_value_type<void*, unsigned long>, std::__1::hash<void*>, true>, std::__1::__unordered_map_equal<void*, std::__1::__hash_value_type<void*, unsigned long>, std::__1::equal_to<void*>, true>, std::__1::allocator<std::__1::__hash_value_type<void*, unsigned long> > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> >::__rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::InspectorParentHandleImpl::~InspectorParentHandleImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::InspectorParentHandleImpl::~InspectorParentHandleImpl()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::LoadEnvironment(node::Environment*, char const*)::$_0, std::__1::allocator<node::LoadEnvironment(node::Environment*, char const*)::$_0>, v8::MaybeLocal<v8::Value> (node::StartExecutionCallbackInfo const&)>::~__func()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::LoadEnvironment(node::Environment*, char const*)::$_0, std::__1::allocator<node::LoadEnvironment(node::Environment*, char const*)::$_0>, v8::MaybeLocal<v8::Value> (node::StartExecutionCallbackInfo const&)>::~__func()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::LoadEnvironment(node::Environment*, char const*)::$_0, std::__1::allocator<node::LoadEnvironment(node::Environment*, char const*)::$_0>, v8::MaybeLocal<v8::Value> (node::StartExecutionCallbackInfo const&)>::__clone() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::LoadEnvironment(node::Environment*, char const*)::$_0, std::__1::allocator<node::LoadEnvironment(node::Environment*, char const*)::$_0>, v8::MaybeLocal<v8::Value> (node::StartExecutionCallbackInfo const&)>::__clone(std::__1::__function::__base<v8::MaybeLocal<v8::Value> (node::StartExecutionCallbackInfo const&)>*) const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::LoadEnvironment(node::Environment*, char const*)::$_0, std::__1::allocator<node::LoadEnvironment(node::Environment*, char const*)::$_0>, v8::MaybeLocal<v8::Value> (node::StartExecutionCallbackInfo const&)>::destroy()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::LoadEnvironment(node::Environment*, char const*)::$_0, std::__1::allocator<node::LoadEnvironment(node::Environment*, char const*)::$_0>, v8::MaybeLocal<v8::Value> (node::StartExecutionCallbackInfo const&)>::destroy_deallocate()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::LoadEnvironment(node::Environment*, char const*)::$_0, std::__1::allocator<node::LoadEnvironment(node::Environment*, char const*)::$_0>, v8::MaybeLocal<v8::Value> (node::StartExecutionCallbackInfo const&)>::operator()(node::StartExecutionCallbackInfo const&)",
    "type": "CPP"
  },
  {
    "name": "T node::ErrnoException(v8::Isolate*, int, char const*, char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::UVException(v8::Isolate*, int, char const*, char const*, char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::FatalException(v8::Isolate*, v8::TryCatch const&)",
    "type": "CPP"
  },
  {
    "name": "T node::RunAtExit(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::AtExit(node::Environment*, void (*)(void*), void*)",
    "type": "CPP"
  },
  {
    "name": "T node::EmitBeforeExit(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::EmitProcessBeforeExit(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::EmitExit(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::EmitProcessExit(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::DeleteACHHandle::operator()(node::ACHHandle*) const",
    "type": "CPP"
  },
  {
    "name": "T node::AddEnvironmentCleanupHook(v8::Isolate*, void (*)(void*), void*)",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::AddCleanupHook(void (*)(void*), void*)",
    "type": "CPP"
  },
  {
    "name": "T node::RemoveEnvironmentCleanupHook(v8::Isolate*, void (*)(void*), void*)",
    "type": "CPP"
  },
  {
    "name": "T node::AddEnvironmentCleanupHookInternal(v8::Isolate*, void (*)(void*, void (*)(void*), void*), void*)",
    "type": "CPP"
  },
  {
    "name": "t node::RunAsyncCleanupHook(void*)",
    "type": "CPP"
  },
  {
    "name": "T node::RemoveEnvironmentCleanupHookInternal(node::ACHHandle*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooksGetExecutionAsyncId(v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooksGetTriggerAsyncId(v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "T node::EmitAsyncInit(v8::Isolate*, v8::Local<v8::Object>, char const*, double)",
    "type": "CPP"
  },
  {
    "name": "T node::EmitAsyncInit(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::String>, double)",
    "type": "CPP"
  },
  {
    "name": "T node::EmitAsyncDestroy(v8::Isolate*, node::async_context)",
    "type": "CPP"
  },
  {
    "name": "T node::EmitAsyncDestroy(node::Environment*, node::async_context)",
    "type": "CPP"
  },
  {
    "name": "t node::TraceEventScope::TraceEventScope(char const*, char const*, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::TraceEventScope::~TraceEventScope()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<node::CleanupHookCallback, node::CleanupHookCallback::Hash, node::CleanupHookCallback::Equal, std::__1::allocator<node::CleanupHookCallback> >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<node::CleanupHookCallback, node::CleanupHookCallback::Hash, node::CleanupHookCallback::Equal, std::__1::allocator<node::CleanupHookCallback> >::__rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t unsigned long std::__1::__hash_table<node::CleanupHookCallback, node::CleanupHookCallback::Hash, node::CleanupHookCallback::Equal, std::__1::allocator<node::CleanupHookCallback> >::__erase_unique<node::CleanupHookCallback>(node::CleanupHookCallback const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_iterator<std::__1::__hash_node<node::CleanupHookCallback, void*>*> std::__1::__hash_table<node::CleanupHookCallback, node::CleanupHookCallback::Hash, node::CleanupHookCallback::Equal, std::__1::allocator<node::CleanupHookCallback> >::find<node::CleanupHookCallback>(node::CleanupHookCallback const&)",
    "type": "CPP"
  },
  {
    "name": "t node::FinishAsyncCleanupHook(void*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::AsyncCleanupHookInfo, std::__1::allocator<node::AsyncCleanupHookInfo> >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::AsyncCleanupHookInfo, std::__1::allocator<node::AsyncCleanupHookInfo> >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::AsyncCleanupHookInfo, std::__1::allocator<node::AsyncCleanupHookInfo> >::__on_zero_shared()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_pointer<node::inspector::protocol::NodeRuntime::Frontend*, std::__1::default_delete<node::inspector::protocol::NodeRuntime::Frontend>, std::__1::allocator<node::inspector::protocol::NodeRuntime::Frontend> >::__on_zero_shared_weak()",
    "type": "CPP"
  },
  {
    "name": "T node::signo_string(int)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::DestroyAsyncIdsCallback(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::Emit(node::Environment*, double, node::AsyncHooks::Fields, v8::Local<v8::Function>)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::EmitPromiseResolve(node::Environment*, double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::EmitTraceEventBefore()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::EmitBefore(node::Environment*, double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::EmitTraceEventAfter(node::AsyncWrap::ProviderType, double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::EmitAfter(node::Environment*, double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::WeakCallback(v8::WeakCallbackInfo<node::DestroyParam> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::DestroyParamCleanupHook(void*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::EmitDestroy(node::Environment*, double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::GetAsyncId(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::PushAsyncContext(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::PopAsyncContext(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::ExecutionAsyncResource(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::ClearAsyncIdStack(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::AsyncReset(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::AsyncReset(v8::Local<v8::Object>, double, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::GetProviderType(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::EmitDestroy(bool)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::QueueDestroyAsyncId(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::SetCallbackTrampoline(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::GetConstructorTemplate(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::SetMethod(v8::Local<v8::Object>, char const*, void (*)(v8::FunctionCallbackInfo<v8::Value> const&))",
    "type": "CPP"
  },
  {
    "name": "t node::SetupHooks(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::SetPromiseHooks(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::RegisterDestroyHook(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::AsyncWrap(node::Environment*, v8::Local<v8::Object>, node::AsyncWrap::ProviderType, double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::AsyncWrap(node::Environment*, v8::Local<v8::Object>, node::AsyncWrap::ProviderType, double, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::AsyncWrap(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::AsyncWrap(node::Environment*, v8::Local<v8::Object>, node::AsyncWrap::ProviderType, double, double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::IsDoneInitializing() const",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::~AsyncWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::EmitTraceEventDestroy()",
    "type": "CPP"
  },
  {
    "name": "t node::BaseObject::~BaseObject()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::~AsyncWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::~AsyncWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::EmitAsyncInit(node::Environment*, v8::Local<v8::Object>, v8::Local<v8::String>, double, double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::MakeCallback(v8::Local<v8::Function>, int, v8::Local<v8::Value>*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::diagnostic_name() const",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::GetOwner()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::GetOwner(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T _register_async_wrap()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_async_wrap(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::CustomBufferJSListener::OnStreamDestroy()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::PerIsolatePlatformData::IdleTasksEnabled()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::AsyncHooks::SetJSPromiseHooks(v8::Local<v8::Function>, v8::Local<v8::Function>, v8::Local<v8::Function>, v8::Local<v8::Function>)",
    "type": "CPP"
  },
  {
    "name": "t void node::ExternalReferenceRegistry::RegisterT<void (v8::PropertyCallbackInfo<v8::Array> const&)>(void (*)(v8::PropertyCallbackInfo<v8::Array> const&))",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::fs_dir::DirHandle::GCClose()::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::fs_dir::DirHandle::GCClose()::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<void (*)(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::LibuvStreamWrap::~LibuvStreamWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::AsyncWrap::EmitDestroy(node::Environment*, double)::$_0>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::AsyncWrap::EmitDestroy(node::Environment*, double)::$_0>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::AsyncWrap::EmitDestroy(node::Environment*, double)::$_0>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::AsyncWrap::EmitDestroy(node::Environment*, double)::$_0::operator()(node::Environment*) const::'lambda'(void*)::__invoke(void*)",
    "type": "CPP"
  },
  {
    "name": "t node::MutexBase<node::LibuvMutexTraits>::~MutexBase()",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::ChannelWrap(node::Environment*, v8::Local<v8::Object>, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::Setup()",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::ChannelWrap(node::Environment*, v8::Local<v8::Object>, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::unordered_set<node::cares_wrap::NodeAresTask*, node::cares_wrap::NodeAresTask::Hash, node::cares_wrap::NodeAresTask::Equal, std::__1::allocator<node::cares_wrap::NodeAresTask*> >, std::__1::__hash_const_iterator<std::__1::__hash_node<node::cares_wrap::NodeAresTask*, void*>*> >(char const*, std::__1::unordered_set<node::cares_wrap::NodeAresTask*, node::cares_wrap::NodeAresTask::Hash, node::cares_wrap::NodeAresTask::Equal, std::__1::allocator<node::cares_wrap::NodeAresTask*> > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::GetAddrInfoReqWrap::GetAddrInfoReqWrap(node::Environment*, v8::Local<v8::Object>, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::GetAddrInfoReqWrap::GetAddrInfoReqWrap(node::Environment*, v8::Local<v8::Object>, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::GetNameInfoReqWrap::GetNameInfoReqWrap(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::GetNameInfoReqWrap::GetNameInfoReqWrap(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::AresTimeout(uv_timer_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::NodeAresTask::Create(node::cares_wrap::ChannelWrap*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::ares_sockstate_cb(void*, int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::StartTimer()",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::CloseTimer()",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::~ChannelWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::~ChannelWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::~ChannelWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::ModifyActivityQueryCount(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::EnsureServers()",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::AnyTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ATraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::AaaaTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::CaaTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::CnameTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::MxTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::NsTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::TxtTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::SrvTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::PtrTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::NaptrTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::SoaTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::AnyTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::ParseGeneralReply(node::Environment*, unsigned char const*, int, int*, v8::Local<v8::Array>, void*, int*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::ParseMxReply(node::Environment*, unsigned char const*, int, v8::Local<v8::Array>, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::ParseTxtReply(node::Environment*, unsigned char const*, int, v8::Local<v8::Array>, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::ParseSrvReply(node::Environment*, unsigned char const*, int, v8::Local<v8::Array>, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::ParseNaptrReply(node::Environment*, unsigned char const*, int, v8::Local<v8::Array>, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::ParseCaaReply(node::Environment*, unsigned char const*, int, v8::Local<v8::Array>, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ATraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::AaaaTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::CaaTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::CnameTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::MxTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::NsTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::TxtTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::SrvTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::PtrTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::NaptrTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::SoaTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ReverseTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::Callback(void*, int, int, hostent*)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ReverseTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::GetAddrInfo(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::GetNameInfo(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::SetMethodNoSideEffect(v8::Local<v8::Object>, char const*, void (*)(v8::FunctionCallbackInfo<v8::Value> const&))",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::CanonicalizeIP(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::StrError(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::ATraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::GetServers(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::SetServers(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::SetLocalAddress(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::Cancel(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T _register_cares_wrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::ChannelWrap::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::crypto::KeyPairGenConfig<node::crypto::NidKeyPairParams>::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::GetAddrInfoReqWrap::~GetAddrInfoReqWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::GetAddrInfoReqWrap::~GetAddrInfoReqWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::GetAddrInfoReqWrap::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::FixedSizeBlobCopyJob::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::ReqWrap<uv_fs_s>::Cancel()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::cares_wrap::GetAddrInfoReqWrap::~GetAddrInfoReqWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::cares_wrap::GetAddrInfoReqWrap::~GetAddrInfoReqWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::ReqWrap<uv_fs_s>::Cancel()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::SimpleWriteWrap<node::ReqWrap<uv_write_s> >::GetAsyncWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::GetNameInfoReqWrap::~GetNameInfoReqWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::GetNameInfoReqWrap::~GetNameInfoReqWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::GetNameInfoReqWrap::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::GetNameInfoReqWrap::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::cares_wrap::GetNameInfoReqWrap::~GetNameInfoReqWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::cares_wrap::GetNameInfoReqWrap::~GetNameInfoReqWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::MakeWeak()::'lambda'(v8::WeakCallbackInfo<node::BaseObject> const&)::__invoke(v8::WeakCallbackInfo<node::BaseObject> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::MemoryRetainerNode::~MemoryRetainerNode()",
    "type": "CPP"
  },
  {
    "name": "t node::MemoryRetainerNode::~MemoryRetainerNode()",
    "type": "CPP"
  },
  {
    "name": "t node::MemoryRetainerNode::Name()",
    "type": "CPP"
  },
  {
    "name": "t node::MemoryRetainerNode::SizeInBytes()",
    "type": "CPP"
  },
  {
    "name": "t node::MemoryRetainerNode::IsRootNode()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::PerIsolatePlatformData::NonNestableDelayedTasksEnabled() const",
    "type": "CPP"
  },
  {
    "name": "t node::MemoryRetainerNode::NamePrefix()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::NodeAresTask::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::NodeAresTask::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::NodeAresTask::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::MemoryTracker::Track(node::MemoryRetainer const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::MemoryTracker::AddNode(node::MemoryRetainer const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<node::MemoryRetainer const*, node::MemoryRetainerNode*, std::__1::hash<node::MemoryRetainer const*>, std::__1::equal_to<node::MemoryRetainer const*>, std::__1::allocator<std::__1::pair<node::MemoryRetainer const* const, node::MemoryRetainerNode*> > >::operator[](node::MemoryRetainer const* const&)",
    "type": "CPP"
  },
  {
    "name": "t node::MemoryRetainerNode::MemoryRetainerNode(node::MemoryTracker*, node::MemoryRetainer const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<node::MemoryRetainer const*, node::MemoryRetainerNode*>, std::__1::__unordered_map_hasher<node::MemoryRetainer const*, std::__1::__hash_value_type<node::MemoryRetainer const*, node::MemoryRetainerNode*>, std::__1::hash<node::MemoryRetainer const*>, true>, std::__1::__unordered_map_equal<node::MemoryRetainer const*, std::__1::__hash_value_type<node::MemoryRetainer const*, node::MemoryRetainerNode*>, std::__1::equal_to<node::MemoryRetainer const*>, true>, std::__1::allocator<std::__1::__hash_value_type<node::MemoryRetainer const*, node::MemoryRetainerNode*> > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::deque<unsigned long, std::__1::allocator<unsigned long> >::__add_back_capacity()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__split_buffer<unsigned long*, std::__1::allocator<unsigned long*> >::push_back(unsigned long*&&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__split_buffer<unsigned long*, std::__1::allocator<unsigned long*> >::push_front(unsigned long*&&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::ares_poll_cb(uv_poll_s*, int, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::ares_poll_close_cb(uv_poll_s*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<node::cares_wrap::NodeAresTask*, node::cares_wrap::NodeAresTask::Hash, node::cares_wrap::NodeAresTask::Equal, std::__1::allocator<node::cares_wrap::NodeAresTask*> >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<node::cares_wrap::NodeAresTask*, node::cares_wrap::NodeAresTask::Hash, node::cares_wrap::NodeAresTask::Equal, std::__1::allocator<node::cares_wrap::NodeAresTask*> >::__rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T void node::Environment::CloseHandle<uv_poll_s, void (*)(uv_poll_s*)>(uv_poll_s*, void (*)(uv_poll_s*))::'lambda'(uv_handle_s*)::__invoke(uv_handle_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::AfterGetAddrInfo(uv_getaddrinfo_s*, int, addrinfo*)",
    "type": "CPP"
  },
  {
    "name": "T node::MakeLibuvRequestCallback<uv_getaddrinfo_s, void (*)(uv_getaddrinfo_s*, int, addrinfo*)>::Wrapper(uv_getaddrinfo_s*, int, addrinfo*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::AfterGetNameInfo(uv_getnameinfo_s*, int, char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::MakeLibuvRequestCallback<uv_getnameinfo_s, void (*)(uv_getnameinfo_s*, int, char const*, char const*)>::Wrapper(uv_getnameinfo_s*, int, char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::LazilyInitializedJSTemplateConstructor(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_INVALID_ARG_VALUE<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::MemoryTracker::PushNode(char const*, unsigned long, char const*)",
    "type": "CPP"
  },
  {
    "name": "t void node::Environment::CloseHandle<uv_timer_s, node::cares_wrap::ChannelWrap::CloseTimer()::$_0>(uv_timer_s*, node::cares_wrap::ChannelWrap::CloseTimer()::$_0)::'lambda'(uv_handle_s*)::__invoke(uv_handle_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::FunctionDeleter<hostent, &(node::cares_wrap::safe_free_hostent(hostent*))>::operator()(hostent*) const",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "t node::BaseObject::decrease_refcount()",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::cares_wrap_hostent_cpy(hostent*, hostent const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::QueryWrap(node::cares_wrap::ChannelWrap*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::crypto::HmacConfig::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::QueryWrap(node::cares_wrap::ChannelWrap*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::QueryWrap(node::cares_wrap::ChannelWrap*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::QueryWrap(node::cares_wrap::ChannelWrap*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::QueryWrap(node::cares_wrap::ChannelWrap*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::QueryWrap(node::cares_wrap::ChannelWrap*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::QueryWrap(node::cares_wrap::ChannelWrap*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::QueryWrap(node::cares_wrap::ChannelWrap*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::QueryWrap(node::cares_wrap::ChannelWrap*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::QueryWrap(node::cares_wrap::ChannelWrap*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::QueryWrap(node::cares_wrap::ChannelWrap*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::QueryWrap(node::cares_wrap::ChannelWrap*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::QueryWrap(node::cares_wrap::ChannelWrap*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t __GLOBAL__sub_I_cares_wrap.cc",
    "type": "CPP"
  },
  {
    "name": "T node::ConnectWrap::ConnectWrap(node::Environment*, v8::Local<v8::Object>, node::AsyncWrap::ProviderType)",
    "type": "CPP"
  },
  {
    "name": "T node::ConnectWrap::ConnectWrap(node::Environment*, v8::Local<v8::Object>, node::AsyncWrap::ProviderType)",
    "type": "CPP"
  },
  {
    "name": "t node::ConnectWrap::~ConnectWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::ConnectWrap::~ConnectWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::ConnectWrap::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::SimpleShutdownWrap<node::ReqWrap<uv_shutdown_s> >::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::ConnectWrap::~ConnectWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::ConnectWrap::~ConnectWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::ConnectionWrap<node::PipeWrap, uv_pipe_s>::ConnectionWrap(node::Environment*, v8::Local<v8::Object>, node::AsyncWrap::ProviderType)",
    "type": "CPP"
  },
  {
    "name": "T node::ConnectionWrap<node::TCPWrap, uv_tcp_s>::ConnectionWrap(node::Environment*, v8::Local<v8::Object>, node::AsyncWrap::ProviderType)",
    "type": "CPP"
  },
  {
    "name": "T node::ConnectionWrap<node::PipeWrap, uv_pipe_s>::OnConnection(uv_stream_s*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::ConnectionWrap<node::TCPWrap, uv_tcp_s>::OnConnection(uv_stream_s*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::ConnectionWrap<node::PipeWrap, uv_pipe_s>::AfterConnect(uv_connect_s*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::ConnectionWrap<node::TCPWrap, uv_tcp_s>::AfterConnect(uv_connect_s*, int)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::ConnectionWrap<node::TCPWrap, uv_tcp_s>::~ConnectionWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::EnabledDebugList::Parse(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::EnabledDebugList::Parse(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::ToLower(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::NativeSymbolDebuggingContext::New()",
    "type": "CPP"
  },
  {
    "name": "T node::NativeSymbolDebuggingContext::SymbolInfo::Display() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream()",
    "type": "CPP"
  },
  {
    "name": "T node::DumpBacktrace(__sFILE*)",
    "type": "CPP"
  },
  {
    "name": "T node::CheckedUvLoopClose(uv_loop_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::PrintLibuvHandleInformation(uv_loop_s*, __sFILE*)",
    "type": "CPP"
  },
  {
    "name": "T node::NativeSymbolDebuggingContext::GetLoadedLibraries()",
    "type": "CPP"
  },
  {
    "name": "T node::FWrite(__sFILE*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T ___DumpBacktrace",
    "type": "CPP"
  },
  {
    "name": "t virtual thunk to std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream()",
    "type": "CPP"
  },
  {
    "name": "t virtual thunk to std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringbuf()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringbuf()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekoff(long long, std::__1::ios_base::seekdir, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos(std::__1::fpos<__mbstate_t>, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::underflow()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::pbackfail(int)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::overflow(int)",
    "type": "CPP"
  },
  {
    "name": "t node::PrintLibuvHandleInformation(uv_loop_s*, __sFILE*)::$_0::__invoke(uv_handle_s*, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::PosixSymbolDebuggingContext::LookupSymbol(void*)",
    "type": "CPP"
  },
  {
    "name": "t node::PosixSymbolDebuggingContext::IsMapped(void*)",
    "type": "CPP"
  },
  {
    "name": "t node::PosixSymbolDebuggingContext::GetStackTrace(void**, int)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str() const",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__emplace_back_slow_path<char const*&>(char const*&)",
    "type": "CPP"
  },
  {
    "name": "T node::IsolateData::Serialize(v8::SnapshotCreator*)",
    "type": "CPP"
  },
  {
    "name": "T node::IsolateData::DeserializeProperties(std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const*)",
    "type": "CPP"
  },
  {
    "name": "T node::IsolateData::CreateProperties()",
    "type": "CPP"
  },
  {
    "name": "T node::IsolateData::IsolateData(v8::Isolate*, uv_loop_s*, node::MultiIsolatePlatform*, node::ArrayBufferAllocator*, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const*)",
    "type": "CPP"
  },
  {
    "name": "T node::IsolateData::IsolateData(v8::Isolate*, uv_loop_s*, node::MultiIsolatePlatform*, node::ArrayBufferAllocator*, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const*)",
    "type": "CPP"
  },
  {
    "name": "T node::IsolateData::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::array<v8::Eternal<v8::String>, 58ul>, v8::Eternal<v8::String> const*>(char const*, std::__1::array<v8::Eternal<v8::String>, 58ul> const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::TrackingTraceStateObserver::UpdateTraceCategoryState()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::CreateProperties()",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::GetConstructorTemplate(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::GetExecPath(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::Environment(node::IsolateData*, v8::Isolate*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, node::EnvSerializeInfo const*, node::EnvironmentFlags::Flags, node::ThreadId)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::AsyncHooks(v8::Isolate*, node::AsyncHooks::SerializeInfo const*)",
    "type": "CPP"
  },
  {
    "name": "T node::ImmediateInfo::ImmediateInfo(v8::Isolate*, node::ImmediateInfo::SerializeInfo const*)",
    "type": "CPP"
  },
  {
    "name": "T node::TickInfo::TickInfo(v8::Isolate*, node::TickInfo::SerializeInfo const*)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::Environment(node::IsolateData*, v8::Isolate*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, node::EnvSerializeInfo const*, node::EnvironmentFlags::Flags, node::ThreadId)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::Environment(node::IsolateData*, v8::Local<v8::Context>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, node::EnvSerializeInfo const*, node::EnvironmentFlags::Flags, node::ThreadId)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::InitializeMainContext(v8::Local<v8::Context>, node::EnvSerializeInfo const*)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::Environment(node::IsolateData*, v8::Local<v8::Context>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, node::EnvSerializeInfo const*, node::EnvironmentFlags::Flags, node::ThreadId)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::DeserializeProperties(node::EnvSerializeInfo const*)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::~Environment()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::NearHeapLimitCallback(void*, unsigned long, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::BuildEmbedderGraph(v8::Isolate*, v8::EmbedderGraph*, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::TickInfo::~TickInfo()",
    "type": "CPP"
  },
  {
    "name": "t node::ImmediateInfo::~ImmediateInfo()",
    "type": "CPP"
  },
  {
    "name": "t node::AsyncHooks::~AsyncHooks()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::~Environment()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::~Environment()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::InitializeLibuv()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::CheckImmediate(uv_check_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RegisterHandleCleanups()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::StartProfilerIdleNotifier()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::ExitEnv()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::CleanupHandles()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RunAndClearNativeImmediates(bool)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::PrintSyncTrace() const",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RunCleanup()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RunAtExitCallbacks()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::AtExit(void (*)(void*), void*)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RunAndClearInterrupts()",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::RunAndClearNativeImmediates(bool)::$_7::operator()(node::CallbackQueue<void, node::Environment*>*) const",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::ToggleImmediateRef(bool)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RequestInterruptFromV8()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::ScheduleTimer(long long)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RunTimers(uv_timer_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::ToggleTimerRef(bool)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::GetNow()",
    "type": "CPP"
  },
  {
    "name": "T node::CollectExceptionInfo(node::Environment*, v8::Local<v8::Object>, int, char const*, char const*, char const*, char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::CollectUVExceptionInfo(v8::Local<v8::Value>, int, char const*, char const*, char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::ImmediateInfo::ImmediateInfo(v8::Isolate*, node::ImmediateInfo::SerializeInfo const*)",
    "type": "CPP"
  },
  {
    "name": "T node::ImmediateInfo::Serialize(v8::Local<v8::Context>, v8::SnapshotCreator*)",
    "type": "CPP"
  },
  {
    "name": "T node::ImmediateInfo::Deserialize(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "t node::AliasedBufferBase<unsigned int, v8::Uint32Array, void>::Deserialize(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, node::ImmediateInfo::SerializeInfo const&)",
    "type": "CPP"
  },
  {
    "name": "T node::ImmediateInfo::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::TickInfo::Serialize(v8::Local<v8::Context>, v8::SnapshotCreator*)",
    "type": "CPP"
  },
  {
    "name": "T node::TickInfo::Deserialize(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, node::TickInfo::SerializeInfo const&)",
    "type": "CPP"
  },
  {
    "name": "T node::TickInfo::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::TickInfo::TickInfo(v8::Isolate*, node::TickInfo::SerializeInfo const*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::AsyncHooks(v8::Isolate*, node::AsyncHooks::SerializeInfo const*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::Deserialize(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, node::AsyncHooks::SerializeInfo const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::Serialize(v8::Local<v8::Context>, v8::SnapshotCreator*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::array<v8::Global<v8::Function>, 4ul>, v8::Global<v8::Function> const*>(char const*, std::__1::array<v8::Global<v8::Function>, 4ul> const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::grow_async_ids_stack()",
    "type": "CPP"
  },
  {
    "name": "t node::AliasedBufferBase<double, v8::Float64Array, void>::reserve(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::Exit(int)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::stop_sub_worker_contexts()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::worker_parent_env() const",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::AddUnmanagedFd(int)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RemoveUnmanagedFd(int)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::PrintInfoForSnapshotIfDebug()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::PrintAllBaseObjects()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::VerifyNoStrongBaseObjects()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::Serialize(v8::SnapshotCreator*)",
    "type": "CPP"
  },
  {
    "name": "T node::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, std::__1::vector<node::PropInfo, std::__1::allocator<node::PropInfo> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, node::EnvSerializeInfo const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::EnqueueDeserializeRequest(void (*)(v8::Local<v8::Context>, v8::Local<v8::Object>, int, node::InternalFieldInfo*), v8::Local<v8::Object>, int, node::InternalFieldInfo*)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RunDeserializeRequests()",
    "type": "CPP"
  },
  {
    "name": "T node::GuessMemoryAvailableToTheProcess()",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::GetCwd()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long> >(char const*, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__wrap_iter<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const*> >(char const*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RunWeakRefCleanup()",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::DeleteMe(void*)",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::IsDoneInitializing() const",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::WrappedObject() const",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::IsRootNode() const",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::IsNotIndicativeOfMemoryLeakAtExit() const",
    "type": "CPP"
  },
  {
    "name": "t node::IsolateData::~IsolateData()",
    "type": "CPP"
  },
  {
    "name": "t node::IsolateData::~IsolateData()",
    "type": "CPP"
  },
  {
    "name": "t node::IsolateData::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::IsolateData::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::AsyncHooks::~AsyncHooks()",
    "type": "CPP"
  },
  {
    "name": "t node::AsyncHooks::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::AsyncHooks::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::ImmediateInfo::~ImmediateInfo()",
    "type": "CPP"
  },
  {
    "name": "t node::ImmediateInfo::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::TickInfo::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::TickInfo::~TickInfo()",
    "type": "CPP"
  },
  {
    "name": "t node::TickInfo::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::AsyncHooks::AddContext(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::AsyncHooks::~AsyncHooks()",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::InitializeLibuv()::$_0::__invoke(uv_async_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::RegisterHandleCleanups()::$_2::__invoke(node::Environment*, uv_handle_s*, void*)",
    "type": "CPP"
  },
  {
    "name": "t void node::Environment::CloseHandle<uv_handle_s, node::Environment::RegisterHandleCleanups()::$_2::operator()(node::Environment*, uv_handle_s*, void*) const::'lambda'(uv_handle_s*)>(uv_handle_s*, node::Environment::RegisterHandleCleanups()::$_2::operator()(node::Environment*, uv_handle_s*, void*) const::'lambda'(uv_handle_s*))::'lambda'(uv_handle_s*)::__invoke(uv_handle_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::StartProfilerIdleNotifier()::$_4::__invoke(uv_prepare_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::StartProfilerIdleNotifier()::$_5::__invoke(uv_check_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::RequestInterruptFromV8()::$_8::__invoke(v8::Isolate*, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::ToggleImmediateRef(bool)::$_9::__invoke(uv_idle_s*)",
    "type": "CPP"
  },
  {
    "name": "t unsigned long std::__1::__hash_table<void*, std::__1::hash<void*>, std::__1::equal_to<void*>, std::__1::allocator<void*> >::__erase_unique<void*>(void* const&)",
    "type": "CPP"
  },
  {
    "name": "t node::MemoryTracker::~MemoryTracker()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<void (*)(node::Environment*, int), std::__1::allocator<void (*)(node::Environment*, int)>, void (node::Environment*, int)>::__clone() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<void (*)(node::Environment*, int), std::__1::allocator<void (*)(node::Environment*, int)>, void (node::Environment*, int)>::__clone(std::__1::__function::__base<void (node::Environment*, int)>*) const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<void (*)(node::Environment*, int), std::__1::allocator<void (*)(node::Environment*, int)>, void (node::Environment*, int)>::operator()(node::Environment*&&, int&&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::destroy(std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_pointer<node::EnvironmentOptions*, std::__1::default_delete<node::EnvironmentOptions>, std::__1::allocator<node::EnvironmentOptions> >::__on_zero_shared()",
    "type": "CPP"
  },
  {
    "name": "t node::AliasedBufferBase<unsigned int, v8::Uint32Array, void>::AliasedBufferBase(v8::Isolate*, unsigned long, unsigned long const*)",
    "type": "CPP"
  },
  {
    "name": "t node::AliasedBufferBase<int, v8::Int32Array, void>::AliasedBufferBase(v8::Isolate*, unsigned long, unsigned long const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__tree<int, std::__1::less<int>, std::__1::allocator<int> >::destroy(std::__1::__tree_node<int, void*>*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::EnvironmentOptions, std::__1::allocator<node::EnvironmentOptions> >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::EnvironmentOptions, std::__1::allocator<node::EnvironmentOptions> >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::EnvironmentOptions, std::__1::allocator<node::EnvironmentOptions> >::__on_zero_shared()",
    "type": "CPP"
  },
  {
    "name": "t node::EnvironmentOptions::EnvironmentOptions(node::EnvironmentOptions const&)",
    "type": "CPP"
  },
  {
    "name": "t node::EnvironmentOptions::~EnvironmentOptions()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::ExclusiveAccess<node::HostPort, node::MutexBase<node::LibuvMutexTraits> >, std::__1::allocator<node::ExclusiveAccess<node::HostPort, node::MutexBase<node::LibuvMutexTraits> > > >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::ExclusiveAccess<node::HostPort, node::MutexBase<node::LibuvMutexTraits> >, std::__1::allocator<node::ExclusiveAccess<node::HostPort, node::MutexBase<node::LibuvMutexTraits> > > >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::ExclusiveAccess<node::HostPort, node::MutexBase<node::LibuvMutexTraits> >, std::__1::allocator<node::ExclusiveAccess<node::HostPort, node::MutexBase<node::LibuvMutexTraits> > > >::__on_zero_shared()",
    "type": "CPP"
  },
  {
    "name": "t node::TrackingTraceStateObserver::OnTraceDisabled()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::Environment::ExitEnv()::$_1>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::Environment::ExitEnv()::$_1>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::Environment::ExitEnv()::$_1>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::__sort<node::Environment::RunCleanup()::$_6&, node::CleanupHookCallback*>(node::CleanupHookCallback*, node::CleanupHookCallback*, node::Environment::RunCleanup()::$_6&)",
    "type": "CPP"
  },
  {
    "name": "t unsigned int std::__1::__sort4<node::Environment::RunCleanup()::$_6&, node::CleanupHookCallback*>(node::CleanupHookCallback*, node::CleanupHookCallback*, node::CleanupHookCallback*, node::CleanupHookCallback*, node::Environment::RunCleanup()::$_6&)",
    "type": "CPP"
  },
  {
    "name": "t bool std::__1::__insertion_sort_incomplete<node::Environment::RunCleanup()::$_6&, node::CleanupHookCallback*>(node::CleanupHookCallback*, node::CleanupHookCallback*, node::Environment::RunCleanup()::$_6&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_const_iterator<std::__1::__hash_node<node::CleanupHookCallback, void*>*> std::__1::__hash_table<node::CleanupHookCallback, node::CleanupHookCallback::Hash, node::CleanupHookCallback::Equal, std::__1::allocator<node::CleanupHookCallback> >::find<node::CleanupHookCallback>(node::CleanupHookCallback const&) const",
    "type": "CPP"
  },
  {
    "name": "t node::AliasedBufferBase<unsigned char, v8::Uint8Array, void>::AliasedBufferBase(v8::Isolate*, unsigned long, unsigned long const*)",
    "type": "CPP"
  },
  {
    "name": "t node::AliasedBufferBase<double, v8::Float64Array, void>::AliasedBufferBase(v8::Isolate*, unsigned long, unsigned long const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::__append(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_bad_function_call()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<int> >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int> >::__rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<3u, int, 0>(int const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<4u, int, 0>(int const&)",
    "type": "CPP"
  },
  {
    "name": "t unsigned long std::__1::__hash_table<int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<int> >::__erase_unique<int>(int const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::vector<std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long> >(std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long>, std::__1::enable_if<(__is_forward_iterator<std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long> >::value) && (is_constructible<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::iterator_traits<std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long> >::reference>::value), std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long> >::type)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<node::PropInfo, std::__1::allocator<node::PropInfo> >::__push_back_slow_path<node::PropInfo>(node::PropInfo&&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::enable_if<(__is_forward_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*>::value) && (is_constructible<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::iterator_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*>::reference>::value), void>::type std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::assign<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<3u, unsigned char, 0>(unsigned char const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<4u, bool, 0>(bool const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<3u, unsigned long long, 0>(unsigned long long const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<4u, unsigned long long, 0>(unsigned long long const&)",
    "type": "CPP"
  },
  {
    "name": "T _register_fs_event_wrap()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_fs_event_wrap(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::FSEventWrap::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::FSEventWrap::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::FSEventWrap::Start(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::FSEventWrap::GetInitialized(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::FSEventWrap::~FSEventWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::FSEventWrap::~FSEventWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::FSEventWrap::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::FSEventWrap::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::FSEventWrap::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::FSEventWrap::OnEvent(uv_fs_event_s*, char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::Ref(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::Unref(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::HasRef(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::Close(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::Close(v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::OnClose(uv_handle_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::OnGCCollect()",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::IsNotIndicativeOfMemoryLeakAtExit() const",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::MarkAsInitialized()",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::MarkAsUninitialized()",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::HandleWrap(node::Environment*, v8::Local<v8::Object>, uv_handle_s*, node::AsyncWrap::ProviderType)",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::GetConstructorTemplate(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_handle_wrap(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::heap::BuildEmbedderGraph(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::heap::JSGraph::CreateObject() const",
    "type": "CPP"
  },
  {
    "name": "t node::heap::JSGraph::~JSGraph()",
    "type": "CPP"
  },
  {
    "name": "T node::heap::WriteSnapshot(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::FileOutputStream::~FileOutputStream()",
    "type": "CPP"
  },
  {
    "name": "T node::heap::DeleteHeapSnapshot(v8::HeapSnapshot const*)",
    "type": "CPP"
  },
  {
    "name": "T node::heap::CreateHeapSnapshotStream(node::Environment*, std::__1::unique_ptr<v8::HeapSnapshot const, node::FunctionDeleter<v8::HeapSnapshot const, &(node::heap::DeleteHeapSnapshot(v8::HeapSnapshot const*))> >&&)",
    "type": "CPP"
  },
  {
    "name": "T node::heap::CreateHeapSnapshotStream(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::heap::TriggerHeapSnapshot(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::heap::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::heap::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T _register_heap_utils()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_heap_utils(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::heap::JSGraph::V8Node(v8::Local<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::heap::JSGraph::AddNode(std::__1::unique_ptr<v8::EmbedderGraph::Node, std::__1::default_delete<v8::EmbedderGraph::Node> >)",
    "type": "CPP"
  },
  {
    "name": "t node::heap::JSGraph::AddEdge(v8::EmbedderGraph::Node*, v8::EmbedderGraph::Node*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::heap::JSGraph::~JSGraph()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::JSGraphJSNode::~JSGraphJSNode()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::JSGraphJSNode::~JSGraphJSNode()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::JSGraphJSNode::Name()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_iterator<std::__1::__hash_node<node::heap::JSGraphJSNode*, void*>*> std::__1::__hash_table<node::heap::JSGraphJSNode*, node::heap::JSGraphJSNode::Hash, node::heap::JSGraphJSNode::Equal, std::__1::allocator<node::heap::JSGraphJSNode*> >::find<node::heap::JSGraphJSNode*>(node::heap::JSGraphJSNode* const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<node::heap::JSGraphJSNode*, node::heap::JSGraphJSNode::Hash, node::heap::JSGraphJSNode::Equal, std::__1::allocator<node::heap::JSGraphJSNode*> >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<node::heap::JSGraphJSNode*, node::heap::JSGraphJSNode::Hash, node::heap::JSGraphJSNode::Equal, std::__1::allocator<node::heap::JSGraphJSNode*> >::__rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::unique_ptr<v8::EmbedderGraph::Node, std::__1::default_delete<v8::EmbedderGraph::Node> >, std::__1::hash<std::__1::unique_ptr<v8::EmbedderGraph::Node, std::__1::default_delete<v8::EmbedderGraph::Node> > >, std::__1::equal_to<std::__1::unique_ptr<v8::EmbedderGraph::Node, std::__1::default_delete<v8::EmbedderGraph::Node> > >, std::__1::allocator<std::__1::unique_ptr<v8::EmbedderGraph::Node, std::__1::default_delete<v8::EmbedderGraph::Node> > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<v8::EmbedderGraph::Node*, std::__1::set<std::__1::pair<char const*, v8::EmbedderGraph::Node*>, std::__1::less<std::__1::pair<char const*, v8::EmbedderGraph::Node*> >, std::__1::allocator<std::__1::pair<char const*, v8::EmbedderGraph::Node*> > >, std::__1::hash<v8::EmbedderGraph::Node*>, std::__1::equal_to<v8::EmbedderGraph::Node*>, std::__1::allocator<std::__1::pair<v8::EmbedderGraph::Node* const, std::__1::set<std::__1::pair<char const*, v8::EmbedderGraph::Node*>, std::__1::less<std::__1::pair<char const*, v8::EmbedderGraph::Node*> >, std::__1::allocator<std::__1::pair<char const*, v8::EmbedderGraph::Node*> > > > > >::operator[](v8::EmbedderGraph::Node* const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<v8::EmbedderGraph::Node*, std::__1::set<std::__1::pair<char const*, v8::EmbedderGraph::Node*>, std::__1::less<std::__1::pair<char const*, v8::EmbedderGraph::Node*> >, std::__1::allocator<std::__1::pair<char const*, v8::EmbedderGraph::Node*> > > >, std::__1::__unordered_map_hasher<v8::EmbedderGraph::Node*, std::__1::__hash_value_type<v8::EmbedderGraph::Node*, std::__1::set<std::__1::pair<char const*, v8::EmbedderGraph::Node*>, std::__1::less<std::__1::pair<char const*, v8::EmbedderGraph::Node*> >, std::__1::allocator<std::__1::pair<char const*, v8::EmbedderGraph::Node*> > > >, std::__1::hash<v8::EmbedderGraph::Node*>, true>, std::__1::__unordered_map_equal<v8::EmbedderGraph::Node*, std::__1::__hash_value_type<v8::EmbedderGraph::Node*, std::__1::set<std::__1::pair<char const*, v8::EmbedderGraph::Node*>, std::__1::less<std::__1::pair<char const*, v8::EmbedderGraph::Node*> >, std::__1::allocator<std::__1::pair<char const*, v8::EmbedderGraph::Node*> > > >, std::__1::equal_to<v8::EmbedderGraph::Node*>, true>, std::__1::allocator<std::__1::__hash_value_type<v8::EmbedderGraph::Node*, std::__1::set<std::__1::pair<char const*, v8::EmbedderGraph::Node*>, std::__1::less<std::__1::pair<char const*, v8::EmbedderGraph::Node*> >, std::__1::allocator<std::__1::pair<char const*, v8::EmbedderGraph::Node*> > > > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<v8::EmbedderGraph::Node*, v8::Local<v8::Object>, std::__1::hash<v8::EmbedderGraph::Node*>, std::__1::equal_to<v8::EmbedderGraph::Node*>, std::__1::allocator<std::__1::pair<v8::EmbedderGraph::Node* const, v8::Local<v8::Object> > > >::operator[](v8::EmbedderGraph::Node*&&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<v8::EmbedderGraph::Node*, v8::Local<v8::Object>, std::__1::hash<v8::EmbedderGraph::Node*>, std::__1::equal_to<v8::EmbedderGraph::Node*>, std::__1::allocator<std::__1::pair<v8::EmbedderGraph::Node* const, v8::Local<v8::Object> > > >::operator[](v8::EmbedderGraph::Node* const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<v8::EmbedderGraph::Node*, v8::Local<v8::Object> >, std::__1::__unordered_map_hasher<v8::EmbedderGraph::Node*, std::__1::__hash_value_type<v8::EmbedderGraph::Node*, v8::Local<v8::Object> >, std::__1::hash<v8::EmbedderGraph::Node*>, true>, std::__1::__unordered_map_equal<v8::EmbedderGraph::Node*, std::__1::__hash_value_type<v8::EmbedderGraph::Node*, v8::Local<v8::Object> >, std::__1::equal_to<v8::EmbedderGraph::Node*>, true>, std::__1::allocator<std::__1::__hash_value_type<v8::EmbedderGraph::Node*, v8::Local<v8::Object> > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::heap::JSGraph::~JSGraph()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::FileOutputStream::~FileOutputStream()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::FileOutputStream::EndOfStream()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::FileOutputStream::GetChunkSize()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::FileOutputStream::WriteAsciiChunk(char*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_69::Normalizer2WithImpl::getQuickCheck(int) const",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::~HeapSnapshotStream()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::~HeapSnapshotStream()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::GetChunkSize()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::EndOfStream()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::WriteAsciiChunk(char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::ReadStart()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::ReadStop()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::DoShutdown(node::ShutdownWrap*)",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::DoWrite(node::WriteWrap*, uv_buf_t*, unsigned long, uv_stream_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::IsAlive()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::IsClosing()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::GetAsyncWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::~HeapSnapshotStream()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::~HeapSnapshotStream()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::ReadStart()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::ReadStop()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::DoShutdown(node::ShutdownWrap*)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::DoWrite(node::WriteWrap*, uv_buf_t*, unsigned long, uv_stream_s*)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::IsAlive()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::IsClosing()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::GetAsyncWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::~HeapSnapshotStream()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::~HeapSnapshotStream()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::EndOfStream()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::GetChunkSize()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::WriteAsciiChunk(char*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::Histogram::Histogram(long long, long long, int)",
    "type": "CPP"
  },
  {
    "name": "T node::Histogram::Histogram(long long, long long, int)",
    "type": "CPP"
  },
  {
    "name": "T node::Histogram::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramImpl::HistogramImpl(long long, long long, int)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramImpl::HistogramImpl(long long, long long, int)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramImpl::HistogramImpl(std::__1::shared_ptr<node::Histogram>)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramImpl::HistogramImpl(std::__1::shared_ptr<node::Histogram>)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::HistogramBase(node::Environment*, v8::Local<v8::Object>, long long, long long, int)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::HistogramBase(node::Environment*, v8::Local<v8::Object>, long long, long long, int)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::HistogramBase(node::Environment*, v8::Local<v8::Object>, std::__1::shared_ptr<node::Histogram>)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::HistogramBase(node::Environment*, v8::Local<v8::Object>, std::__1::shared_ptr<node::Histogram>)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetMin(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetMax(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetMean(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetExceeds(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetStddev(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetPercentile(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetPercentiles(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::DoReset(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::RecordDelta(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::Record(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::Create(node::Environment*, long long, long long, int)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetConstructorTemplate(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::Create(node::Environment*, std::__1::shared_ptr<node::Histogram>)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::Initialize(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::HistogramTransferData::Deserialize(node::Environment*, v8::Local<v8::Context>, std::__1::unique_ptr<node::worker::TransferData, std::__1::default_delete<node::worker::TransferData> >)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::CloneForMessaging() const",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::HistogramTransferData::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetConstructorTemplate(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetExceeds(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetMin(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetMax(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetMean(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetStddev(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetPercentile(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetPercentiles(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::DoReset(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::Start(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::Stop(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::IntervalHistogram(node::Environment*, v8::Local<v8::Object>, node::AsyncWrap::ProviderType, int, long long, long long, int)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::TimerCB(uv_timer_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::OnStart(node::IntervalHistogram::StartFlags)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::OnStop()",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::CloneForMessaging() const",
    "type": "CPP"
  },
  {
    "name": "t node::HistogramBase::HistogramTransferData::~HistogramTransferData()",
    "type": "CPP"
  },
  {
    "name": "t node::HistogramBase::HistogramTransferData::~HistogramTransferData()",
    "type": "CPP"
  },
  {
    "name": "t node::HistogramBase::HistogramTransferData::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::crypto::SecretKeyGenConfig::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::Histogram::~Histogram()",
    "type": "CPP"
  },
  {
    "name": "t node::Histogram::~Histogram()",
    "type": "CPP"
  },
  {
    "name": "t node::Histogram::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::Histogram::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::HistogramBase::~HistogramBase()",
    "type": "CPP"
  },
  {
    "name": "t node::HistogramBase::~HistogramBase()",
    "type": "CPP"
  },
  {
    "name": "t node::HistogramBase::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_69::UCharsTrieBuilder::getMinLinearMatch() const",
    "type": "CPP"
  },
  {
    "name": "t node::SocketAddressBlockListWrap::GetTransferMode() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_OUT_OF_RANGE<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T v8impl::RefBase::RefBase(napi_env__*, unsigned int, bool, void (*)(napi_env__*, void*, void*), void*, void*)",
    "type": "CPP"
  },
  {
    "name": "T v8impl::RefBase::RefBase(napi_env__*, unsigned int, bool, void (*)(napi_env__*, void*, void*), void*, void*)",
    "type": "CPP"
  },
  {
    "name": "T v8impl::RefBase::New(napi_env__*, unsigned int, bool, void (*)(napi_env__*, void*, void*), void*, void*)",
    "type": "CPP"
  },
  {
    "name": "T v8impl::RefBase::~RefBase()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::RefBase::~RefBase()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::RefBase::~RefBase()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::RefBase::Data()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::RefBase::Ref()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::RefBase::Unref()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::RefBase::RefCount()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::RefBase::Finalize(bool)",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::New(napi_env__*, v8::Local<v8::Value>, unsigned int, bool, void (*)(napi_env__*, void*, void*), void*, void*)",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::~Reference()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::~Reference()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::~Reference()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::Ref()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::ClearWeak()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::Unref()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::SetWeak()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::Get()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::Finalize(bool)",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::FinalizeCallback(v8::WeakCallbackInfo<v8impl::Reference*> const&)",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::SecondPassCallback(v8::WeakCallbackInfo<v8impl::Reference*> const&)",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_last_error_info",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_function",
    "type": "CPP"
  },
  {
    "name": "T _napi_define_class",
    "type": "CPP"
  },
  {
    "name": "T _napi_define_properties",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_property_names",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_all_property_names",
    "type": "CPP"
  },
  {
    "name": "T _napi_set_property",
    "type": "CPP"
  },
  {
    "name": "T _napi_has_property",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_property",
    "type": "CPP"
  },
  {
    "name": "T _napi_delete_property",
    "type": "CPP"
  },
  {
    "name": "T _napi_has_own_property",
    "type": "CPP"
  },
  {
    "name": "T _napi_set_named_property",
    "type": "CPP"
  },
  {
    "name": "T _napi_has_named_property",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_named_property",
    "type": "CPP"
  },
  {
    "name": "T _napi_set_element",
    "type": "CPP"
  },
  {
    "name": "T _napi_has_element",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_element",
    "type": "CPP"
  },
  {
    "name": "T _napi_delete_element",
    "type": "CPP"
  },
  {
    "name": "T _napi_object_freeze",
    "type": "CPP"
  },
  {
    "name": "T _napi_object_seal",
    "type": "CPP"
  },
  {
    "name": "T _napi_is_array",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_array_length",
    "type": "CPP"
  },
  {
    "name": "T _napi_strict_equals",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_prototype",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_object",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_array",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_array_with_length",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_string_latin1",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_string_utf8",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_string_utf16",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_double",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_int32",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_uint32",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_int64",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_bigint_int64",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_bigint_uint64",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_bigint_words",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_boolean",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_symbol",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_error",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_type_error",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_range_error",
    "type": "CPP"
  },
  {
    "name": "T _napi_typeof",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_undefined",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_null",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_cb_info",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_new_target",
    "type": "CPP"
  },
  {
    "name": "T _napi_call_function",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_global",
    "type": "CPP"
  },
  {
    "name": "T _napi_throw",
    "type": "CPP"
  },
  {
    "name": "T _napi_throw_error",
    "type": "CPP"
  },
  {
    "name": "T _napi_throw_type_error",
    "type": "CPP"
  },
  {
    "name": "T _napi_throw_range_error",
    "type": "CPP"
  },
  {
    "name": "T _napi_is_error",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_double",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_int32",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_uint32",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_int64",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_bigint_int64",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_bigint_uint64",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_bigint_words",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_bool",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_string_latin1",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_string_utf8",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_string_utf16",
    "type": "CPP"
  },
  {
    "name": "T _napi_coerce_to_bool",
    "type": "CPP"
  },
  {
    "name": "T _napi_coerce_to_number",
    "type": "CPP"
  },
  {
    "name": "T _napi_coerce_to_object",
    "type": "CPP"
  },
  {
    "name": "T _napi_coerce_to_string",
    "type": "CPP"
  },
  {
    "name": "T _napi_wrap",
    "type": "CPP"
  },
  {
    "name": "T _napi_unwrap",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::Unwrap(napi_env__*, napi_value__*, void**, v8impl::(anonymous namespace)::UnwrapAction)",
    "type": "CPP"
  },
  {
    "name": "T _napi_remove_wrap",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_external",
    "type": "CPP"
  },
  {
    "name": "T _napi_type_tag_object",
    "type": "CPP"
  },
  {
    "name": "T _napi_check_object_type_tag",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_external",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_reference",
    "type": "CPP"
  },
  {
    "name": "T _napi_delete_reference",
    "type": "CPP"
  },
  {
    "name": "T _napi_reference_ref",
    "type": "CPP"
  },
  {
    "name": "T _napi_reference_unref",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_reference_value",
    "type": "CPP"
  },
  {
    "name": "T _napi_open_handle_scope",
    "type": "CPP"
  },
  {
    "name": "T _napi_close_handle_scope",
    "type": "CPP"
  },
  {
    "name": "T _napi_open_escapable_handle_scope",
    "type": "CPP"
  },
  {
    "name": "T _napi_close_escapable_handle_scope",
    "type": "CPP"
  },
  {
    "name": "T _napi_escape_handle",
    "type": "CPP"
  },
  {
    "name": "T _napi_new_instance",
    "type": "CPP"
  },
  {
    "name": "T _napi_instanceof",
    "type": "CPP"
  },
  {
    "name": "T _napi_is_exception_pending",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_and_clear_last_exception",
    "type": "CPP"
  },
  {
    "name": "T _napi_is_arraybuffer",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_arraybuffer",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_external_arraybuffer",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_typedarray_info",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_arraybuffer_info",
    "type": "CPP"
  },
  {
    "name": "T _napi_is_typedarray",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_typedarray",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_dataview",
    "type": "CPP"
  },
  {
    "name": "T _napi_is_dataview",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_dataview_info",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_version",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_promise",
    "type": "CPP"
  },
  {
    "name": "T _napi_resolve_deferred",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::ConcludeDeferred(napi_env__*, napi_deferred__*, napi_value__*, bool)",
    "type": "CPP"
  },
  {
    "name": "T _napi_reject_deferred",
    "type": "CPP"
  },
  {
    "name": "T _napi_is_promise",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_date",
    "type": "CPP"
  },
  {
    "name": "T _napi_is_date",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_date_value",
    "type": "CPP"
  },
  {
    "name": "T _napi_run_script",
    "type": "CPP"
  },
  {
    "name": "T _napi_add_finalizer",
    "type": "CPP"
  },
  {
    "name": "T _napi_adjust_external_memory",
    "type": "CPP"
  },
  {
    "name": "T _napi_set_instance_data",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_instance_data",
    "type": "CPP"
  },
  {
    "name": "T _napi_detach_arraybuffer",
    "type": "CPP"
  },
  {
    "name": "T _napi_is_detached_arraybuffer",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::CallbackBundle::New(napi_env__*, napi_value__* (*)(napi_env__*, napi_callback_info__*), void*)",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::FunctionCallbackWrapper::Invoke(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::CallbackBundle::Delete(napi_env__*, void*, void*)",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::FunctionCallbackWrapper::GetNewTarget()",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::FunctionCallbackWrapper::Args(napi_value__**, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::FunctionCallbackWrapper::SetReturnValue(napi_value__*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<napi_property_descriptor, std::__1::allocator<napi_property_descriptor> >::__push_back_slow_path<napi_property_descriptor const&>(napi_property_descriptor const&)",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::JSStream(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::JSStream(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::GetAsyncWrap()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::JSStream::GetAsyncWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::IsAlive()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::JSStream::IsAlive()",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::IsClosing()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::JSStream::IsClosing()",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::ReadStart()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::JSStream::ReadStart()",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::ReadStop()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::JSStream::ReadStop()",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::DoShutdown(node::ShutdownWrap*)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::JSStream::DoShutdown(node::ShutdownWrap*)",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::DoWrite(node::WriteWrap*, uv_buf_t*, unsigned long, uv_stream_s*)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::JSStream::DoWrite(node::WriteWrap*, uv_buf_t*, unsigned long, uv_stream_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::ReadBuffer(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::EmitEOF(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "T void node::JSStream::Finish<node::WriteWrap>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T void node::JSStream::Finish<node::ShutdownWrap>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T _register_js_stream()",
    "type": "CPP"
  },
  {
    "name": "t node::JSStream::~JSStream()",
    "type": "CPP"
  },
  {
    "name": "t node::JSStream::~JSStream()",
    "type": "CPP"
  },
  {
    "name": "t node::JSStream::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::JSStream::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::JSStream::~JSStream()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::JSStream::~JSStream()",
    "type": "CPP"
  },
  {
    "name": "t node::ArrayBufferViewContents<char, 64ul>::Read(v8::Local<v8::ArrayBufferView>)",
    "type": "CPP"
  },
  {
    "name": "T node::EscapeJsonChars(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Reindent(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::JSUDPWrap(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::JSUDPWrap(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::RecvStart()",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::RecvStop()",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::Send(uv_buf_t*, unsigned long, sockaddr const*)",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::GetPeerName()",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::GetSockName()",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::EmitReceived(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::OnSendDone(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::OnAfterBind(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "T _register_js_udp_wrap()",
    "type": "CPP"
  },
  {
    "name": "t node::JSUDPWrap::~JSUDPWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::JSUDPWrap::~JSUDPWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::JSUDPWrap::GetAsyncWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::JSUDPWrap::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::JSUDPWrap::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::JSUDPWrap::~JSUDPWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::JSUDPWrap::~JSUDPWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::SocketAddress::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::crypto::KeyPairGenConfig<node::crypto::DhKeyPairParams>::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::ModuleWrap(node::Environment*, v8::Local<v8::Object>, v8::Local<v8::Module>, v8::Local<v8::String>)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::ModuleWrap(node::Environment*, v8::Local<v8::Object>, v8::Local<v8::Module>, v8::Local<v8::String>)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::~ModuleWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::~ModuleWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::~ModuleWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::context() const",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::GetFromModule(node::Environment*, v8::Local<v8::Module>)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::GetFromID(node::Environment*, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::SyntheticModuleEvaluationStepsCallback(v8::Local<v8::Context>, v8::Local<v8::Module>)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<int, node::loader::ModuleWrap*>, void*>*> > std::__1::unordered_multimap<int, node::loader::ModuleWrap*, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, node::loader::ModuleWrap*> > >::emplace<int, node::loader::ModuleWrap*&>(int&&, node::loader::ModuleWrap*&)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::Link(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::loader::createImportAssertionContainer(node::Environment*, v8::Isolate*, v8::Local<v8::FixedArray>)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, v8::Global<v8::Promise>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, v8::Global<v8::Promise> > > >::operator[](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::Instantiate(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::ResolveModuleCallback(v8::Local<v8::Context>, v8::Local<v8::String>, v8::Local<v8::FixedArray>, v8::Local<v8::Module>)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::Evaluate(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::THROW_ERR_SCRIPT_EXECUTION_TIMEOUT(node::Environment*, long long)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::GetNamespace(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::GetStatus(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::GetStaticDependencySpecifiers(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::GetError(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::SetImportModuleDynamicallyCallback(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::loader::ImportModuleDynamically(v8::Local<v8::Context>, v8::Local<v8::ScriptOrModule>, v8::Local<v8::String>, v8::Local<v8::FixedArray>)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::HostInitializeImportMetaObjectCallback(v8::Local<v8::Context>, v8::Local<v8::Module>, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::SetInitializeImportMetaObjectCallback(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::SetSyntheticExport(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::CreateCachedData(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "T _register_module_wrap()",
    "type": "CPP"
  },
  {
    "name": "t node::loader::ModuleWrap::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::loader::ModuleWrap::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__murmur2_or_cityhash<unsigned long, 64ul>::operator()(void const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos(std::__1::fpos<__mbstate_t>, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_SCRIPT_EXECUTION_TIMEOUT<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_SCRIPT_EXECUTION_INTERRUPTED<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_EXECUTION_ENVIRONMENT_NOT_AVAILABLE<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, v8::Global<v8::Promise> >(char const*, std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, v8::Global<v8::Promise> > const&, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, node::loader::ModuleWrap*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, node::loader::ModuleWrap*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, node::loader::ModuleWrap*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, node::loader::ModuleWrap*> > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, node::loader::ModuleWrap*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, node::loader::ModuleWrap*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, node::loader::ModuleWrap*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, node::loader::ModuleWrap*> > >::__rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t unsigned long std::__1::__hash_table<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int> >::__erase_unique<unsigned int>(unsigned int const&)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_VM_MODULE_CACHED_DATA_REJECTED<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<int, node::loader::ModuleWrap*>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, node::loader::ModuleWrap*>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, node::loader::ModuleWrap*>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, node::loader::ModuleWrap*> > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_VM_MODULE_LINK_FAILURE<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&>(v8::Isolate*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToBaseString<4u, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, v8::Global<v8::Promise> >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, v8::Global<v8::Promise> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, v8::Global<v8::Promise> >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, v8::Global<v8::Promise> > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> > >::__rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, v8::Global<v8::Promise> >, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, v8::Global<v8::Promise> >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, v8::Global<v8::Promise> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, v8::Global<v8::Promise> >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, v8::Global<v8::Promise> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const",
    "type": "CPP"
  },
  {
    "name": "t node::V8Platform::~V8Platform()",
    "type": "CPP"
  },
  {
    "name": "T node::SignalExit(int, __siginfo*, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::ResetStdio()",
    "type": "CPP"
  },
  {
    "name": "T node::ExecuteBootstrapper(node::Environment*, char const*, std::__1::vector<v8::Local<v8::String>, std::__1::allocator<v8::Local<v8::String> > >*, std::__1::vector<v8::Local<v8::Value>, std::__1::allocator<v8::Local<v8::Value> > >*)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::InitializeInspector(std::__1::unique_ptr<node::inspector::ParentInspectorHandle, std::__1::default_delete<node::inspector::ParentInspectorHandle> >)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::InitializeDiagnostics()",
    "type": "CPP"
  },
  {
    "name": "t node::AtomicsWaitCallback(v8::Isolate::AtomicsWaitEvent, v8::Local<v8::SharedArrayBuffer>, unsigned long, long long, double, v8::Isolate::AtomicsWaitWakeHandle*, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::BootstrapInternalLoaders()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::BootstrapNode()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RunBootstrapping()",
    "type": "CPP"
  },
  {
    "name": "T node::MarkBootstrapComplete(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::StartExecution(node::Environment*, std::__1::function<v8::MaybeLocal<v8::Value> (node::StartExecutionCallbackInfo const&)>)",
    "type": "CPP"
  },
  {
    "name": "t node::StartExecution(node::Environment*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::TrapWebAssemblyOrContinue(int, __siginfo*, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::RegisterSignalHandler(int, void (*)(int, __siginfo*, void*), bool)",
    "type": "CPP"
  },
  {
    "name": "T node::ProcessGlobalArgs(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "T node::InitializeNodeWithArgs(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::insert(std::__1::__wrap_iter<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const*>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::InitializeOncePerProcess(int, char**)",
    "type": "CPP"
  },
  {
    "name": "T node::InitializeOncePerProcess(int, char**, node::InitializationSettingsFlags)",
    "type": "CPP"
  },
  {
    "name": "t node::PlatformInit()",
    "type": "CPP"
  },
  {
    "name": "t node::V8Platform::Initialize(int)",
    "type": "CPP"
  },
  {
    "name": "T node::TearDownOncePerProcess()",
    "type": "CPP"
  },
  {
    "name": "T node::Start(int, char**)",
    "type": "CPP"
  },
  {
    "name": "T node::Stop(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::InitializeDiagnostics()::$_0::__invoke(void*)",
    "type": "CPP"
  },
  {
    "name": "t node::V8Platform::StartTracingAgent()",
    "type": "CPP"
  },
  {
    "name": "t node::NodeTraceStateObserver::OnTraceEnabled()",
    "type": "CPP"
  },
  {
    "name": "t node::NodeTraceStateObserver::OnTraceDisabled()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_bad_function_call()",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__emplace_back_slow_path<char const (&) [39]>(char const (&) [39])",
    "type": "CPP"
  },
  {
    "name": "t __GLOBAL__sub_I_node.cc",
    "type": "CPP"
  },
  {
    "name": "T node_napi_env__::node_napi_env__(v8::Local<v8::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node_napi_env__::node_napi_env__(v8::Local<v8::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node_napi_env__::can_call_into_js() const",
    "type": "CPP"
  },
  {
    "name": "T node_napi_env__::mark_arraybuffer_as_untransferable(v8::Local<v8::ArrayBuffer>) const",
    "type": "CPP"
  },
  {
    "name": "T node_napi_env__::CallFinalizer(void (*)(napi_env__*, void*, void*), void*, void*)",
    "type": "CPP"
  },
  {
    "name": "T napi_module_register_by_symbol(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, napi_value__* (*)(napi_env__*, napi_value__*))",
    "type": "CPP"
  },
  {
    "name": "T node::napi_module_to_node_module(napi_module const*)",
    "type": "CPP"
  },
  {
    "name": "t napi_module_register_cb(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "T _napi_module_register",
    "type": "CPP"
  },
  {
    "name": "T _napi_add_env_cleanup_hook",
    "type": "CPP"
  },
  {
    "name": "T _napi_remove_env_cleanup_hook",
    "type": "CPP"
  },
  {
    "name": "T _napi_add_async_cleanup_hook",
    "type": "CPP"
  },
  {
    "name": "T _napi_remove_async_cleanup_hook",
    "type": "CPP"
  },
  {
    "name": "T _napi_fatal_exception",
    "type": "CPP"
  },
  {
    "name": "T _napi_fatal_error",
    "type": "CPP"
  },
  {
    "name": "T _napi_open_callback_scope",
    "type": "CPP"
  },
  {
    "name": "T _napi_close_callback_scope",
    "type": "CPP"
  },
  {
    "name": "T _napi_async_init",
    "type": "CPP"
  },
  {
    "name": "T _napi_async_destroy",
    "type": "CPP"
  },
  {
    "name": "T _napi_make_callback",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_buffer",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_external_buffer",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::BufferFinalizer::FinalizeBufferCallback(char*, void*)",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_buffer_copy",
    "type": "CPP"
  },
  {
    "name": "T _napi_is_buffer",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_buffer_info",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_node_version",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_async_work",
    "type": "CPP"
  },
  {
    "name": "T _napi_delete_async_work",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_uv_event_loop",
    "type": "CPP"
  },
  {
    "name": "T _napi_queue_async_work",
    "type": "CPP"
  },
  {
    "name": "T _napi_cancel_async_work",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_threadsafe_function",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_threadsafe_function_context",
    "type": "CPP"
  },
  {
    "name": "T _napi_call_threadsafe_function",
    "type": "CPP"
  },
  {
    "name": "T _napi_acquire_threadsafe_function",
    "type": "CPP"
  },
  {
    "name": "T _napi_release_threadsafe_function",
    "type": "CPP"
  },
  {
    "name": "T _napi_unref_threadsafe_function",
    "type": "CPP"
  },
  {
    "name": "T _napi_ref_threadsafe_function",
    "type": "CPP"
  },
  {
    "name": "T _node_api_get_module_file_name",
    "type": "CPP"
  },
  {
    "name": "t node_napi_env__::~node_napi_env__()",
    "type": "CPP"
  },
  {
    "name": "t node_napi_env__::~node_napi_env__()",
    "type": "CPP"
  },
  {
    "name": "t napi_env__::~napi_env__()",
    "type": "CPP"
  },
  {
    "name": "t napi_env__::~napi_env__()",
    "type": "CPP"
  },
  {
    "name": "t napi_env__::mark_arraybuffer_as_untransferable(v8::Local<v8::ArrayBuffer>) const",
    "type": "CPP"
  },
  {
    "name": "t napi_env__::CallFinalizer(void (*)(napi_env__*, void*, void*), void*, void*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::NewEnv(v8::Local<v8::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)::'lambda'(void*)::__invoke(void*)",
    "type": "CPP"
  },
  {
    "name": "T napi_async_cleanup_hook_handle__::Hook(void*, void (*)(void*), void*)",
    "type": "CPP"
  },
  {
    "name": "t napi_async_cleanup_hook_handle__::~napi_async_cleanup_hook_handle__()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<napi_async_cleanup_hook_handle__::~napi_async_cleanup_hook_handle__()::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::AsyncContext::EnsureReference()",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::AsyncContext::WeakCallback(v8::WeakCallbackInfo<v8impl::(anonymous namespace)::AsyncContext> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<v8impl::(anonymous namespace)::BufferFinalizer::FinalizeBufferCallback(char*, void*)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<v8impl::(anonymous namespace)::BufferFinalizer::FinalizeBufferCallback(char*, void*)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<v8impl::(anonymous namespace)::BufferFinalizer::FinalizeBufferCallback(char*, void*)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::uvimpl::Work::~Work()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::uvimpl::Work::~Work()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::uvimpl::Work::DoThreadPoolWork()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::uvimpl::Work::AfterThreadPoolWork(int)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to (anonymous namespace)::uvimpl::Work::~Work()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to (anonymous namespace)::uvimpl::Work::~Work()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to (anonymous namespace)::uvimpl::Work::DoThreadPoolWork()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to (anonymous namespace)::uvimpl::Work::AfterThreadPoolWork(int)",
    "type": "CPP"
  },
  {
    "name": "T node::ThreadPoolWork::ScheduleWork()::'lambda'(uv_work_s*)::__invoke(uv_work_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::ThreadPoolWork::ScheduleWork()::'lambda'(uv_work_s*, int)::__invoke(uv_work_s*, int)",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::ThreadSafeFunction::CallJs(napi_env__*, napi_value__*, void*, void*)",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::ThreadSafeFunction::Cleanup(void*)",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::ThreadSafeFunction::~ThreadSafeFunction()",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::ThreadSafeFunction::~ThreadSafeFunction()",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::ThreadSafeFunction::CloseHandlesAndMaybeDelete(bool)",
    "type": "CPP"
  },
  {
    "name": "t void node::Environment::CloseHandle<uv_handle_s, v8impl::(anonymous namespace)::ThreadSafeFunction::CloseHandlesAndMaybeDelete(bool)::'lambda'(uv_handle_s*)>(uv_handle_s*, v8impl::(anonymous namespace)::ThreadSafeFunction::CloseHandlesAndMaybeDelete(bool)::'lambda'(uv_handle_s*))::'lambda'(uv_handle_s*)::__invoke(uv_handle_s*)",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::ThreadSafeFunction::AsyncCb(uv_async_s*)",
    "type": "CPP"
  },
  {
    "name": "t void node::Environment::CloseHandle<uv_handle_s, v8impl::(anonymous namespace)::ThreadSafeFunction::Init()::'lambda'(uv_handle_s*)>(uv_handle_s*, v8impl::(anonymous namespace)::ThreadSafeFunction::Init()::'lambda'(uv_handle_s*))::'lambda'(uv_handle_s*)::__invoke(uv_handle_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node_napi_env__::CallFinalizer(void (*)(napi_env__*, void*, void*), void*, void*)::$_0>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node_napi_env__::CallFinalizer(void (*)(napi_env__*, void*, void*), void*, void*)::$_0>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node_napi_env__::CallFinalizer(void (*)(napi_env__*, void*, void*), void*, void*)::$_0>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T _node_module_register",
    "type": "CPP"
  },
  {
    "name": "t node::binding::global_handle_map_t::~global_handle_map_t()",
    "type": "CPP"
  },
  {
    "name": "T node::binding::DLib::DLib(char const*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::binding::DLib::DLib(char const*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::binding::DLib::Open()",
    "type": "CPP"
  },
  {
    "name": "T node::binding::DLib::Close()",
    "type": "CPP"
  },
  {
    "name": "t node::binding::global_handle_map_t::erase(void*)",
    "type": "CPP"
  },
  {
    "name": "T node::binding::DLib::GetSymbolAddress(char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::binding::DLib::SaveInGlobalHandleMap(node::node_module*)",
    "type": "CPP"
  },
  {
    "name": "T node::binding::DLib::GetSavedModuleFromGlobalHandleMap()",
    "type": "CPP"
  },
  {
    "name": "T node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::TryLoadAddon(char const*, int, std::__1::function<bool (node::binding::DLib*)> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::binding::GetInternalBinding(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::binding::GetLinkedBinding(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::binding::RegisterBuiltinModules()",
    "type": "CPP"
  },
  {
    "name": "T node::binding::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_binding(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<void*, node::binding::global_handle_map_t::Entry, std::__1::hash<void*>, std::__1::equal_to<void*>, std::__1::allocator<std::__1::pair<void* const, node::binding::global_handle_map_t::Entry> > >::operator[](void* const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<void*, node::binding::global_handle_map_t::Entry>, std::__1::__unordered_map_hasher<void*, std::__1::__hash_value_type<void*, node::binding::global_handle_map_t::Entry>, std::__1::hash<void*>, true>, std::__1::__unordered_map_equal<void*, std::__1::__hash_value_type<void*, node::binding::global_handle_map_t::Entry>, std::__1::equal_to<void*>, true>, std::__1::allocator<std::__1::__hash_value_type<void*, node::binding::global_handle_map_t::Entry> > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_bad_function_call()",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_DLOPEN_DISABLED<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_MISSING_ARGS<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_INVALID_ARG_TYPE<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0, std::__1::allocator<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0>, bool (node::binding::DLib*)>::~__func()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0, std::__1::allocator<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0>, bool (node::binding::DLib*)>::~__func()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0, std::__1::allocator<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0>, bool (node::binding::DLib*)>::__clone() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0, std::__1::allocator<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0>, bool (node::binding::DLib*)>::__clone(std::__1::__function::__base<bool (node::binding::DLib*)>*) const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0, std::__1::allocator<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0>, bool (node::binding::DLib*)>::destroy()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0, std::__1::allocator<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0>, bool (node::binding::DLib*)>::destroy_deallocate()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0, std::__1::allocator<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0>, bool (node::binding::DLib*)>::operator()(node::binding::DLib*&&)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_DLOPEN_FAILED<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_NON_CONTEXT_AWARE_DISABLED<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_INVALID_MODULE<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t __GLOBAL__sub_I_node_binding.cc",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::BlobBindingData* node::Environment::AddBindingData<node::BlobBindingData>(v8::Local<v8::Context>, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::StoreDataObject(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::GetDataObject(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::RevokeDataObject(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::FixedSizeBlobCopyJob::Initialize(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::GetConstructorTemplate(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::ToArrayBuffer(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::ToSlice(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::HasInstance(node::Environment*, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::Create(node::Environment*, std::__1::vector<node::BlobEntry, std::__1::allocator<node::BlobEntry> >, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::enable_if<(__is_forward_iterator<std::__1::__wrap_iter<node::BlobEntry*> >::value) && (is_constructible<node::BlobEntry, std::__1::iterator_traits<std::__1::__wrap_iter<node::BlobEntry*> >::reference>::value), std::__1::__wrap_iter<node::BlobEntry*> >::type std::__1::vector<node::BlobEntry, std::__1::allocator<node::BlobEntry> >::insert<std::__1::__wrap_iter<node::BlobEntry*> >(std::__1::__wrap_iter<node::BlobEntry const*>, std::__1::__wrap_iter<node::BlobEntry*>, std::__1::__wrap_iter<node::BlobEntry*>)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::GetArrayBuffer(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::Slice(node::Environment*, unsigned long, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::Blob(node::Environment*, v8::Local<v8::Object>, std::__1::vector<node::BlobEntry, std::__1::allocator<node::BlobEntry> > const&, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::Blob(node::Environment*, v8::Local<v8::Object>, std::__1::vector<node::BlobEntry, std::__1::allocator<node::BlobEntry> > const&, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::BlobTransferData::Deserialize(node::Environment*, v8::Local<v8::Context>, std::__1::unique_ptr<node::worker::TransferData, std::__1::default_delete<node::worker::TransferData> >)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::GetTransferMode() const",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::CloneForMessaging() const",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::store_data_object(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, node::BlobBindingData::StoredDataObject const&)",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::StoredDataObject::StoredDataObject(node::BaseObjectPtrImpl<node::Blob, false> const&, unsigned long, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::BlobBindingData::StoredDataObject::~StoredDataObject()",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::revoke_data_object(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::get_data_object(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::FixedSizeBlobCopyJob::FixedSizeBlobCopyJob(node::Environment*, v8::Local<v8::Object>, node::Blob*, node::FixedSizeBlobCopyJob::Mode)",
    "type": "CPP"
  },
  {
    "name": "T node::FixedSizeBlobCopyJob::FixedSizeBlobCopyJob(node::Environment*, v8::Local<v8::Object>, node::Blob*, node::FixedSizeBlobCopyJob::Mode)",
    "type": "CPP"
  },
  {
    "name": "T node::FixedSizeBlobCopyJob::AfterThreadPoolWork(int)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::FixedSizeBlobCopyJob::AfterThreadPoolWork(int)",
    "type": "CPP"
  },
  {
    "name": "T node::FixedSizeBlobCopyJob::DoThreadPoolWork()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::FixedSizeBlobCopyJob::DoThreadPoolWork()",
    "type": "CPP"
  },
  {
    "name": "T node::FixedSizeBlobCopyJob::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::FixedSizeBlobCopyJob::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::FixedSizeBlobCopyJob::Run(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::FixedSizeBlobCopyJob::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::StoredDataObject::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::StoredDataObject::StoredDataObject(node::BaseObjectPtrImpl<node::Blob, false> const&, unsigned long, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::BlobBindingData(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::BlobBindingData(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::BlobBindingData::StoredDataObject, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, node::BlobBindingData::StoredDataObject> > >::operator[](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::Deserialize(v8::Local<v8::Context>, v8::Local<v8::Object>, int, node::InternalFieldInfo*)",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::PrepareForSerialization(v8::Local<v8::Context>, v8::SnapshotCreator*)",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::Serialize(int)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T _register_blob()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_blob(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::Blob::BlobTransferData::~BlobTransferData()",
    "type": "CPP"
  },
  {
    "name": "t node::Blob::BlobTransferData::~BlobTransferData()",
    "type": "CPP"
  },
  {
    "name": "t node::Blob::BlobTransferData::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::worker::JSTransferable::Data::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::Blob::~Blob()",
    "type": "CPP"
  },
  {
    "name": "t node::Blob::~Blob()",
    "type": "CPP"
  },
  {
    "name": "t node::Blob::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::serdes::DeserializerContext::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::BlobBindingData::StoredDataObject::~StoredDataObject()",
    "type": "CPP"
  },
  {
    "name": "t node::BlobBindingData::StoredDataObject::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::FixedSizeBlobCopyJob::~FixedSizeBlobCopyJob()",
    "type": "CPP"
  },
  {
    "name": "t node::FixedSizeBlobCopyJob::~FixedSizeBlobCopyJob()",
    "type": "CPP"
  },
  {
    "name": "t node::FixedSizeBlobCopyJob::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::FixedSizeBlobCopyJob::~FixedSizeBlobCopyJob()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::FixedSizeBlobCopyJob::~FixedSizeBlobCopyJob()",
    "type": "CPP"
  },
  {
    "name": "t node::BlobBindingData::~BlobBindingData()",
    "type": "CPP"
  },
  {
    "name": "t node::BlobBindingData::~BlobBindingData()",
    "type": "CPP"
  },
  {
    "name": "t node::BlobBindingData::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::SimpleWriteWrap<node::AsyncWrap>::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_MESSAGE_TARGET_CONTEXT_UNAVAILABLE<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::BlobBindingData::StoredDataObject::StoredDataObject(node::BlobBindingData::StoredDataObject const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_pointer<v8::BackingStore*, std::__1::default_delete<v8::BackingStore>, std::__1::allocator<v8::BackingStore> >::__on_zero_shared()",
    "type": "CPP"
  },
  {
    "name": "t node::BaseObjectPtrImpl<node::BlobBindingData, false> node::MakeBaseObject<node::BlobBindingData, node::Environment*, v8::Local<v8::Object>&>(node::Environment*&&, v8::Local<v8::Object>&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, void*> > > > std::__1::__hash_table<std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, std::__1::__unordered_map_hasher<node::FastStringKey, std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, node::FastStringKey::Hash, true>, std::__1::__unordered_map_equal<node::FastStringKey, std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, std::__1::equal_to<node::FastStringKey>, true>, std::__1::allocator<std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> > > >::__construct_node_hash<node::FastStringKey const&, node::BaseObjectPtrImpl<node::v8_utils::BindingData, false>&>(unsigned long, node::FastStringKey const&, node::BaseObjectPtrImpl<node::v8_utils::BindingData, false>&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, std::__1::__unordered_map_hasher<node::FastStringKey, std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, node::FastStringKey::Hash, true>, std::__1::__unordered_map_equal<node::FastStringKey, std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, std::__1::equal_to<node::FastStringKey>, true>, std::__1::allocator<std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, std::__1::__unordered_map_hasher<node::FastStringKey, std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, node::FastStringKey::Hash, true>, std::__1::__unordered_map_equal<node::FastStringKey, std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, std::__1::equal_to<node::FastStringKey>, true>, std::__1::allocator<std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> > > >::__rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<node::BlobEntry, std::__1::allocator<node::BlobEntry> >::__emplace_back_slow_path<node::BlobEntry>(node::BlobEntry&&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, std::__1::__unordered_map_hasher<node::FastStringKey, std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, node::FastStringKey::Hash, true>, std::__1::__unordered_map_equal<node::FastStringKey, std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, std::__1::equal_to<node::FastStringKey>, true>, std::__1::allocator<std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> > > >::find<node::FastStringKey>(node::FastStringKey const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::enable_if<(__is_forward_iterator<node::BlobEntry*>::value) && (is_constructible<node::BlobEntry, std::__1::iterator_traits<node::BlobEntry*>::reference>::value), void>::type std::__1::vector<node::BlobEntry, std::__1::allocator<node::BlobEntry> >::assign<node::BlobEntry*>(node::BlobEntry*, node::BlobEntry*)",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, node::BlobBindingData::StoredDataObject>(char const*, std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, node::BlobBindingData::StoredDataObject> const&, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::BlobBindingData::StoredDataObject>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::BlobBindingData::StoredDataObject>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::BlobBindingData::StoredDataObject>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::BlobBindingData::StoredDataObject> > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::BlobBindingData::StoredDataObject>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::BlobBindingData::StoredDataObject>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::BlobBindingData::StoredDataObject>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::BlobBindingData::StoredDataObject> > >::erase(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::BlobBindingData::StoredDataObject>, void*>*>)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::HasInstance(v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::HasInstance(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::Data(v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::Data(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::Length(v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::Length(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::New(node::Environment*, v8::Local<v8::ArrayBuffer>, unsigned long, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::New(v8::Isolate*, v8::Local<v8::ArrayBuffer>, unsigned long, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::New(v8::Isolate*, v8::Local<v8::String>, node::encoding)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::New(v8::Isolate*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::New(node::Environment*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::Copy(v8::Isolate*, char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::Copy(node::Environment*, char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::New(v8::Isolate*, char*, unsigned long, void (*)(char*, void*), void*)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::New(node::Environment*, char*, unsigned long, void (*)(char*, void*), void*)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::New(v8::Isolate*, char*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::New(node::Environment*, char*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::SetBufferPrototype(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::CreateFromString(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::ByteLengthUtf8(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::Copy(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::Compare(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::CompareOffset(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::Fill(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::IndexOfBuffer(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::IndexOfNumber(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::IndexOfString(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::Swap16(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::Swap32(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::Swap64(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::EncodeInto(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::EncodeUtf8String(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringSlice<(node::encoding)0>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringSlice<(node::encoding)2>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringSlice<(node::encoding)7>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringSlice<(node::encoding)4>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringSlice<(node::encoding)5>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringSlice<(node::encoding)3>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringSlice<(node::encoding)1>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringWrite<(node::encoding)0>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringWrite<(node::encoding)2>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringWrite<(node::encoding)7>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringWrite<(node::encoding)4>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringWrite<(node::encoding)5>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringWrite<(node::encoding)3>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringWrite<(node::encoding)1>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::GetZeroFillToggle(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::DetachArrayBuffer(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::CopyArrayBuffer(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T _register_buffer()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_buffer(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_BUFFER_CONTEXT_NOT_AVAILABLE<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_MEMORY_ALLOCATION_FAILED<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_BUFFER_TOO_LARGE<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::CallbackInfo::OnBackingStoreFree()",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::CallbackInfo::CleanupHook(void*)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::CallbackInfo::CreateTrackedArrayBuffer(node::Environment*, char*, unsigned long, void (*)(char*, void*), void*)::'lambda'(void*, unsigned long, void*)::__invoke(void*, unsigned long, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::Buffer::(anonymous namespace)::CallbackInfo::OnBackingStoreFree()::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::Buffer::(anonymous namespace)::CallbackInfo::OnBackingStoreFree()::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::Buffer::(anonymous namespace)::CallbackInfo::OnBackingStoreFree()::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::New(node::Environment*, char*, unsigned long)::$_0::__invoke(char*, void*)",
    "type": "CPP"
  },
  {
    "name": "t unsigned long node::SearchString<unsigned short>(unsigned short const*, unsigned long, unsigned short const*, unsigned long, unsigned long, bool)",
    "type": "CPP"
  },
  {
    "name": "t unsigned long node::SearchString<unsigned char>(unsigned char const*, unsigned long, unsigned char const*, unsigned long, unsigned long, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned short>::Search(node::stringsearch::Vector<unsigned short const>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned short>::BoyerMooreHorspoolSearch(node::stringsearch::Vector<unsigned short const>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned short>::BoyerMooreSearch(node::stringsearch::Vector<unsigned short const>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned short>::InitialSearch(node::stringsearch::Vector<unsigned short const>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned short>::LinearSearch(node::stringsearch::Vector<unsigned short const>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned short>::PopulateBoyerMooreTable()",
    "type": "CPP"
  },
  {
    "name": "t unsigned long node::stringsearch::FindFirstCharacter<unsigned short>(node::stringsearch::Vector<unsigned short const>, node::stringsearch::Vector<unsigned short const>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned char>::Search(node::stringsearch::Vector<unsigned char const>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned char>::BoyerMooreHorspoolSearch(node::stringsearch::Vector<unsigned char const>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned char>::BoyerMooreSearch(node::stringsearch::Vector<unsigned char const>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned char>::InitialSearch(node::stringsearch::Vector<unsigned char const>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned char>::LinearSearch(node::stringsearch::Vector<unsigned char const>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned char>::PopulateBoyerMooreTable()",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::GetZeroFillToggle(v8::FunctionCallbackInfo<v8::Value> const&)::$_1::__invoke(void*, unsigned long, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_BUFFER_OUT_OF_BOUNDS<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T _register_config()",
    "type": "CPP"
  },
  {
    "name": "t node::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::DefineConstants(v8::Isolate*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::DefineErrnoConstants(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::DefineSystemConstants(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::DefineCryptoConstants(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::ContextifyContext(node::Environment*, v8::Local<v8::Object>, node::contextify::ContextOptions const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::CreateV8Context(node::Environment*, v8::Local<v8::Object>, node::contextify::ContextOptions const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::WeakCallback(v8::WeakCallbackInfo<node::contextify::ContextifyContext> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::CleanupHook(void*)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::ContextifyContext(node::Environment*, v8::Local<v8::Object>, node::contextify::ContextOptions const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::~ContextifyContext()",
    "type": "CPP"
  },
  {
    "name": "t node::AsyncHooks::RemoveContext(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::~ContextifyContext()",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::CreateDataWrapper(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::PropertyGetterCallback(v8::Local<v8::Name>, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::PropertySetterCallback(v8::Local<v8::Name>, v8::Local<v8::Value>, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::PropertyDescriptorCallback(v8::Local<v8::Name>, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::PropertyDeleterCallback(v8::Local<v8::Name>, v8::PropertyCallbackInfo<v8::Boolean> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::PropertyEnumeratorCallback(v8::PropertyCallbackInfo<v8::Array> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::PropertyDefinerCallback(v8::Local<v8::Name>, v8::PropertyDescriptor const&, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::IndexedPropertyGetterCallback(unsigned int, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::IndexedPropertySetterCallback(unsigned int, v8::Local<v8::Value>, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::IndexedPropertyDescriptorCallback(unsigned int, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::IndexedPropertyDeleterCallback(unsigned int, v8::PropertyCallbackInfo<v8::Boolean> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::IndexedPropertyDefinerCallback(unsigned int, v8::PropertyDescriptor const&, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::Init(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::MakeContext(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::IsContext(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::CompileFunction(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::ContextFromContextifiedSandbox(node::Environment*, v8::Local<v8::Object> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::Init(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::CreateCachedData(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::RunInContext(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::RunInThisContext(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::ContextifyScript(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::InstanceOf(node::Environment*, v8::Local<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::EvalMachine(node::Environment*, long long, bool, bool, bool, std::__1::shared_ptr<v8::MicrotaskQueue>, v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::ContextifyScript(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::~ContextifyScript()",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::~ContextifyScript()",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::~ContextifyScript()",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::CompiledFnEntry::CompiledFnEntry(node::Environment*, v8::Local<v8::Object>, unsigned int, v8::Local<v8::ScriptOrModule>)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::CompiledFnEntry::WeakCallback(v8::WeakCallbackInfo<node::contextify::CompiledFnEntry> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::CompiledFnEntry::CompiledFnEntry(node::Environment*, v8::Local<v8::Object>, unsigned int, v8::Local<v8::ScriptOrModule>)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::CompiledFnEntry::~CompiledFnEntry()",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::CompiledFnEntry::~CompiledFnEntry()",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::CompiledFnEntry::~CompiledFnEntry()",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::MicrotaskQueueWrap::MicrotaskQueueWrap(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::MicrotaskQueueWrap::MicrotaskQueueWrap(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::MicrotaskQueueWrap::microtask_queue() const",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::MicrotaskQueueWrap::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::MicrotaskQueueWrap::Init(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::MicrotaskQueueWrap::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::contextify::StartSigintWatchdog(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::contextify::StopSigintWatchdog(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::contextify::WatchdogHasPendingSigint(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::contextify::MeasureMemory(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T _register_contextify()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_contextify(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::contextify::ContextifyScript::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::contextify::CompiledFnEntry::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::contextify::MicrotaskQueueWrap::~MicrotaskQueueWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::contextify::MicrotaskQueueWrap::~MicrotaskQueueWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::contextify::MicrotaskQueueWrap::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos(std::__1::fpos<__mbstate_t>, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_INVALID_THIS<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, node::contextify::ContextifyScript*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, node::contextify::ContextifyScript*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, node::contextify::ContextifyScript*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, node::contextify::ContextifyScript*> > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, node::contextify::CompiledFnEntry*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, node::contextify::CompiledFnEntry*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, node::contextify::CompiledFnEntry*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, node::contextify::CompiledFnEntry*> > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::credentials::SafeGetenv(char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::credentials::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::SafeGetenv(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::GetUid(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::GetEUid(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::GetGid(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::GetEGid(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::GetGroups(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::InitGroups(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::SetEGid(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::SetEUid(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::SetGid(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::SetUid(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::SetGroups(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T _register_credentials()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_credentials(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::MaybeLocal<v8::Value> node::ToV8Value<unsigned int>(v8::Local<v8::Context>, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&, v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__append(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::gid_by_name(v8::Isolate*, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::uid_by_name(v8::Isolate*, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::DirHandle::DirHandle(node::Environment*, v8::Local<v8::Object>, uv_dir_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::DirHandle::DirHandle(node::Environment*, v8::Local<v8::Object>, uv_dir_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::DirHandle::New(node::Environment*, uv_dir_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::DirHandle::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::DirHandle::~DirHandle()",
    "type": "CPP"
  },
  {
    "name": "t node::fs_dir::DirHandle::GCClose()",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::DirHandle::~DirHandle()",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::DirHandle::~DirHandle()",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::DirHandle::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::AfterClose(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::DirHandle::Close(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::GetReqWrap(v8::FunctionCallbackInfo<v8::Value> const&, int, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::DirHandle::Read(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs_dir::AfterDirRead(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs_dir::DirentListToArray(node::Environment*, uv_dirent_s*, int, node::encoding, v8::Local<v8::Value>*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::AfterOpenDir(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs_dir::OpenDir(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T _register_fs_dir()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_fs_dir(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs_dir::DirHandle::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::fs_dir::DirHandle::GCClose()::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::fs_dir::DirHandle::GCClose()::'lambda0'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqBase::FSReqBase(node::fs::BindingData*, v8::Local<v8::Object>, node::AsyncWrap::ProviderType, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::~FSReqPromise()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::~FSReqPromise()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::Reject(v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::Resolve(v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::ResolveStat(uv_stat_t const*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::SetReturnValue(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::~FSReqPromise()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::~FSReqPromise()",
    "type": "CPP"
  },
  {
    "name": "t node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void>::AliasedBufferBase(v8::Isolate*, unsigned long, unsigned long const*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<double, v8::Float64Array, void> >::~FSReqPromise()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<double, v8::Float64Array, void> >::~FSReqPromise()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<double, v8::Float64Array, void> >::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<double, v8::Float64Array, void> >::ResolveStat(uv_stat_t const*)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::fs::FSReqPromise<node::AliasedBufferBase<double, v8::Float64Array, void> >::~FSReqPromise()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::fs::FSReqPromise<node::AliasedBufferBase<double, v8::Float64Array, void> >::~FSReqPromise()",
    "type": "CPP"
  },
  {
    "name": "T node::MakeLibuvRequestCallback<uv_fs_s, void (*)(uv_fs_s*)>::Wrapper(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::vector<uv_dirent_s, std::__1::allocator<uv_dirent_s> >::__append(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::shared_ptr<node::KVStore>::~shared_ptr()",
    "type": "CPP"
  },
  {
    "name": "T node::RealEnvStore::Get(char const*) const",
    "type": "CPP"
  },
  {
    "name": "T node::RealEnvStore::Get(v8::Isolate*, v8::Local<v8::String>) const",
    "type": "CPP"
  },
  {
    "name": "T node::RealEnvStore::Set(v8::Isolate*, v8::Local<v8::String>, v8::Local<v8::String>)",
    "type": "CPP"
  },
  {
    "name": "T node::RealEnvStore::Query(char const*) const",
    "type": "CPP"
  },
  {
    "name": "T node::RealEnvStore::Query(v8::Isolate*, v8::Local<v8::String>) const",
    "type": "CPP"
  },
  {
    "name": "T node::RealEnvStore::Delete(v8::Isolate*, v8::Local<v8::String>)",
    "type": "CPP"
  },
  {
    "name": "T node::RealEnvStore::Enumerate(v8::Isolate*) const",
    "type": "CPP"
  },
  {
    "name": "T node::KVStore::Clone(v8::Isolate*) const",
    "type": "CPP"
  },
  {
    "name": "T node::KVStore::CreateMapKVStore()",
    "type": "CPP"
  },
  {
    "name": "T node::MapKVStore::Get(char const*) const",
    "type": "CPP"
  },
  {
    "name": "T node::MapKVStore::Get(v8::Isolate*, v8::Local<v8::String>) const",
    "type": "CPP"
  },
  {
    "name": "T node::MapKVStore::Set(v8::Isolate*, v8::Local<v8::String>, v8::Local<v8::String>)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::operator[](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&)",
    "type": "CPP"
  },
  {
    "name": "T node::MapKVStore::Query(char const*) const",
    "type": "CPP"
  },
  {
    "name": "T node::MapKVStore::Query(v8::Isolate*, v8::Local<v8::String>) const",
    "type": "CPP"
  },
  {
    "name": "T node::MapKVStore::Delete(v8::Isolate*, v8::Local<v8::String>)",
    "type": "CPP"
  },
  {
    "name": "T node::MapKVStore::Enumerate(v8::Isolate*) const",
    "type": "CPP"
  },
  {
    "name": "T node::MapKVStore::Clone(v8::Isolate*) const",
    "type": "CPP"
  },
  {
    "name": "T node::KVStore::AssignFromObject(v8::Local<v8::Context>, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::CreateEnvVarProxy(v8::Local<v8::Context>, v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "t node::EnvGetter(v8::Local<v8::Name>, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::EnvSetter(v8::Local<v8::Name>, v8::Local<v8::Value>, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::EnvQuery(v8::Local<v8::Name>, v8::PropertyCallbackInfo<v8::Integer> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::EnvDeleter(v8::Local<v8::Name>, v8::PropertyCallbackInfo<v8::Boolean> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::EnvEnumerator(v8::PropertyCallbackInfo<v8::Array> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::RegisterEnvVarExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_env_var(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::MapKVStore::~MapKVStore()",
    "type": "CPP"
  },
  {
    "name": "t node::MapKVStore::~MapKVStore()",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_STRING_TOO_LONG<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::MapKVStore, std::__1::allocator<node::MapKVStore> >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::MapKVStore, std::__1::allocator<node::MapKVStore> >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::MapKVStore, std::__1::allocator<node::MapKVStore> >::__on_zero_shared()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::unordered_map(std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)",
    "type": "CPP"
  },
  {
    "name": "t __GLOBAL__sub_I_node_env_var.cc",
    "type": "CPP"
  },
  {
    "name": "T node::IsExceptionDecorated(node::Environment*, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::PrintStackTrace(v8::Isolate*, v8::Local<v8::StackTrace>)",
    "type": "CPP"
  },
  {
    "name": "T node::PrintException(v8::Isolate*, v8::Local<v8::Context>, v8::Local<v8::Value>, v8::Local<v8::Message>)",
    "type": "CPP"
  },
  {
    "name": "t node::GetErrorSource(v8::Isolate*, v8::Local<v8::Context>, v8::Local<v8::Message>, bool*)",
    "type": "CPP"
  },
  {
    "name": "T node::PrintCaughtException(v8::Isolate*, v8::Local<v8::Context>, v8::TryCatch const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Assert(node::AssertionInfo const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AppendExceptionLine(node::Environment*, v8::Local<v8::Value>, v8::Local<v8::Message>, node::ErrorHandlingMode)",
    "type": "CPP"
  },
  {
    "name": "T node::Abort()",
    "type": "CPP"
  },
  {
    "name": "T node::FatalError(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::OnFatalError(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::errors::TryCatchScope::~TryCatchScope()",
    "type": "CPP"
  },
  {
    "name": "t node::ReportFatalException(node::Environment*, v8::Local<v8::Value>, v8::Local<v8::Message>, node::EnhanceFatalException)",
    "type": "CPP"
  },
  {
    "name": "T node::errors::TryCatchScope::~TryCatchScope()",
    "type": "CPP"
  },
  {
    "name": "T node::errors::errno_string(int)",
    "type": "CPP"
  },
  {
    "name": "T node::errors::PerIsolateMessageListener(v8::Local<v8::Message>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()",
    "type": "CPP"
  },
  {
    "name": "T node::errors::TriggerUncaughtException(v8::Isolate*, v8::Local<v8::Value>, v8::Local<v8::Message>, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::errors::SetPrepareStackTraceCallback(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::errors::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::errors::SetSourceMapsEnabled(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::errors::SetEnhanceStackForFatalException(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::errors::NoSideEffectsToString(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::errors::TriggerUncaughtException(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::errors::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::errors::DecorateErrorStack(node::Environment*, node::errors::TryCatchScope const&)",
    "type": "CPP"
  },
  {
    "name": "T node::errors::TriggerUncaughtException(v8::Isolate*, v8::TryCatch const&)",
    "type": "CPP"
  },
  {
    "name": "T _register_errors()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_errors(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToBaseString<3u, node::Utf8Value>(node::Utf8Value const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToBaseString<4u, node::Utf8Value>(node::Utf8Value const&)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()",
    "type": "CPP"
  },
  {
    "name": "t virtual thunk to std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()",
    "type": "CPP"
  },
  {
    "name": "t virtual thunk to std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos(std::__1::fpos<__mbstate_t>, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<3u, char*, 0>(char*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<4u, char*, 0>(char*)",
    "type": "CPP"
  },
  {
    "name": "t __GLOBAL__sub_I_node_errors.cc",
    "type": "CPP"
  },
  {
    "name": "T node::ExternalReferenceRegistry::external_references()",
    "type": "CPP"
  },
  {
    "name": "T node::ExternalReferenceRegistry::ExternalReferenceRegistry()",
    "type": "CPP"
  },
  {
    "name": "T node::ExternalReferenceRegistry::ExternalReferenceRegistry()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::Basename(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSContinuationData::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandleReadWrap::~FileHandleReadWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandleReadWrap::~FileHandleReadWrap()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FileHandleReadWrap::~FileHandleReadWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandleReadWrap::~FileHandleReadWrap()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FileHandleReadWrap::~FileHandleReadWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqBase::~FSReqBase()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqBase::~FSReqBase()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FSReqBase::~FSReqBase()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqBase::~FSReqBase()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FSReqBase::~FSReqBase()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqBase::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::FileHandle(node::fs::BindingData*, v8::Local<v8::Object>, int)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::FileHandle(node::fs::BindingData*, v8::Local<v8::Object>, int)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::New(node::fs::BindingData*, int, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::~FileHandle()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandle::Close()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::~FileHandle()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FileHandle::~FileHandle()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::~FileHandle()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FileHandle::~FileHandle()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::DoWrite(node::WriteWrap*, uv_buf_t*, unsigned long, uv_stream_s*)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FileHandle::DoWrite(node::WriteWrap*, uv_buf_t*, unsigned long, uv_stream_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::GetTransferMode() const",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::TransferForMessaging()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::TransferData::TransferData(int)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::TransferData::TransferData(int)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::TransferData::~TransferData()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::TransferData::~TransferData()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::TransferData::~TransferData()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::TransferData::Deserialize(node::Environment*, v8::Local<v8::Context>, std::__1::unique_ptr<node::worker::TransferData, std::__1::default_delete<node::worker::TransferData> >)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::CloseReq::Resolve()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::CloseReq::Reject(v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::CloseReq::file_handle()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::CloseReq::CloseReq(node::Environment*, v8::Local<v8::Object>, v8::Local<v8::Promise>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::CloseReq::CloseReq(node::Environment*, v8::Local<v8::Object>, v8::Local<v8::Promise>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::CloseReq::~CloseReq()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::CloseReq::~CloseReq()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FileHandle::CloseReq::~CloseReq()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::CloseReq::~CloseReq()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FileHandle::CloseReq::~CloseReq()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::CloseReq::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::ClosePromise()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::Close(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::ReleaseFD(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::AfterClose()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandleReadWrap::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandleReadWrap::FileHandleReadWrap(node::fs::FileHandle*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandleReadWrap::FileHandleReadWrap(node::fs::FileHandle*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::ReadStart()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandle::IsAlive()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandle::IsClosing()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FileHandle::ReadStart()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::ReadStop()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FileHandle::ReadStop()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::CreateShutdownWrap(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FileHandle::CreateShutdownWrap(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::DoShutdown(node::ShutdownWrap*)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FileHandle::DoShutdown(node::ShutdownWrap*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqCallback::Reject(v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqCallback::ResolveStat(uv_stat_t const*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqCallback::Resolve(v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FillGlobalStatsArray(node::fs::BindingData*, bool, uv_stat_t const*, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqBase::binding_data()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqCallback::SetReturnValue(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::NewFSReqCallback(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqAfterScope::FSReqAfterScope(node::fs::FSReqBase*, uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqAfterScope::FSReqAfterScope(node::fs::FSReqBase*, uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqAfterScope::~FSReqAfterScope()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqAfterScope::Clear()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqAfterScope::~FSReqAfterScope()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqAfterScope::Reject(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqAfterScope::Proceed()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::AfterNoArgs(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::AfterStat(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::AfterInteger(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::AfterOpenFileHandle(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FromNamespacedPath(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::AfterMkdirp(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::AfterStringPath(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::AfterStringPtr(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::AfterScanDir(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::AfterScanDirWithTypes(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::Access(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::Close(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::MKDirpSync(uv_loop_s*, uv_fs_s*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, void (*)(uv_fs_s*))",
    "type": "CPP"
  },
  {
    "name": "T node::fs::MKDirpAsync(uv_loop_s*, uv_fs_s*, char const*, int, void (*)(uv_fs_s*))",
    "type": "CPP"
  },
  {
    "name": "T node::fs::CallMKDirpSync(node::Environment*, v8::FunctionCallbackInfo<v8::Value> const&, node::fs::FSReqWrapSync*, char const*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::BindingData::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::vector<node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false> > >, std::__1::__wrap_iter<node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false> const*> >(char const*, std::__1::vector<node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false> > > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::BindingData::BindingData(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::BindingData::BindingData(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::BindingData::Deserialize(v8::Local<v8::Context>, v8::Local<v8::Object>, int, node::InternalFieldInfo*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::BindingData* node::Environment::AddBindingData<node::fs::BindingData>(v8::Local<v8::Context>, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::BindingData::PrepareForSerialization(v8::Local<v8::Context>, v8::SnapshotCreator*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::BindingData::Serialize(int)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Open(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::OpenFileHandle(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Read(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::ReadBuffers(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Fdatasync(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Fsync(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Rename(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FTruncate(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::RMDir(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::MKDir(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::ReadDir(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::InternalModuleReadJSON(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::InternalModuleStat(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Stat(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::LStat(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FStat(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Link(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Symlink(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::ReadLink(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Unlink(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::WriteBuffer(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::WriteBuffers(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::WriteString(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::RealPath(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::CopyFile(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Chmod(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FChmod(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Chown(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FChown(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::LChown(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::UTimes(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FUTimes(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::LUTimes(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Mkdtemp(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T _register_fs()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_fs(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSContinuationData::~FSContinuationData()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSContinuationData::~FSContinuationData()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSContinuationData::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqCallback::~FSReqCallback()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqCallback::~FSReqCallback()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqCallback::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqCallback::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::fs::FSReqCallback::~FSReqCallback()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::fs::FSReqCallback::~FSReqCallback()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandleReadWrap::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandleReadWrap::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandle::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::crypto::KeyPairGenConfig<node::crypto::RsaKeyPairParams>::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandle::GetFD()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::fs::FileHandle::IsAlive()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::fs::FileHandle::IsClosing()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::fs::FileHandle::GetFD()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandle::TransferData::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_69::UCharsTrieBuilder::getMaxLinearMatchLength() const",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandle::CloseReq::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::SimpleShutdownWrap<node::ReqWrap<uv_fs_s> >::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::fs::BindingData::~BindingData()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::BindingData::~BindingData()",
    "type": "CPP"
  },
  {
    "name": "t node::v8_utils::BindingData::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::fs::FileHandle::Close()::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::fs::FileHandle::Close()::'lambda0'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandle::ClosePromise()::$_0::__invoke(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandle::ReadStart()::$_1::__invoke(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false> > >::__emplace_back_slow_path<node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false> >(node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false>&&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::vector<node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false> > >::__swap_out_circular_buffer(std::__1::__split_buffer<node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false> >&>&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandle::DoShutdown(node::ShutdownWrap*)::$_2::__invoke(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "t void node::fs::FillStatsArray<double, v8::Float64Array>(node::AliasedBufferBase<double, v8::Float64Array, std::__1::enable_if<std::is_scalar<double>::value, void>::type>*, uv_stat_t const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__emplace_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::MKDirpAsync(uv_loop_s*, uv_fs_s*, char const*, int, void (*)(uv_fs_s*))::$_3::__invoke(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::MKDirpAsync(uv_loop_s*, uv_fs_s*, char const*, int, void (*)(uv_fs_s*))::$_3::operator()(uv_fs_s*) const::'lambda'(uv_fs_s*)::__invoke(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqBase::Init(char const*, char const*, unsigned long, node::encoding)",
    "type": "CPP"
  },
  {
    "name": "t node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false> node::MakeBaseObject<node::fs::FileHandleReadWrap, node::fs::FileHandle*, v8::Local<v8::Object>&>(node::fs::FileHandle*&&, v8::Local<v8::Object>&)",
    "type": "CPP"
  },
  {
    "name": "t node::SimpleShutdownWrap<node::ReqWrap<uv_fs_s> >::SimpleShutdownWrap(node::StreamBase*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::SimpleShutdownWrap<node::ReqWrap<uv_fs_s> >::~SimpleShutdownWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::SimpleShutdownWrap<node::ReqWrap<uv_fs_s> >::~SimpleShutdownWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::SimpleShutdownWrap<node::AsyncWrap>::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::SimpleShutdownWrap<node::AsyncWrap>::IsNotIndicativeOfMemoryLeakAtExit() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::SimpleShutdownWrap<node::ReqWrap<uv_fs_s> >::~SimpleShutdownWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::SimpleShutdownWrap<node::ReqWrap<uv_fs_s> >::~SimpleShutdownWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::SimpleWriteWrap<node::ReqWrap<uv_write_s> >::IsNotIndicativeOfMemoryLeakAtExit() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::SimpleShutdownWrap<node::ReqWrap<uv_fs_s> >::~SimpleShutdownWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::SimpleShutdownWrap<node::ReqWrap<uv_fs_s> >::~SimpleShutdownWrap()",
    "type": "CPP"
  },
  {
    "name": "T _register_http_parser()",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::InitializeHttpParser(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Close(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Free(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Execute(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Finish(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Initialize(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::(anonymous namespace)::Parser::Pause<true>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::(anonymous namespace)::Parser::Pause<false>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Consume(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Unconsume(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::GetCurrentBuffer(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::BindingData::~BindingData()",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::BindingData::~BindingData()",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::BindingData::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::BindingData::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::BindingData::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::~Parser()",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::~Parser()",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::IsNotIndicativeOfMemoryLeakAtExit() const",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::OnStreamAlloc(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::OnStreamRead(long, uv_buf_t const&)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::(anonymous namespace)::Parser::~Parser()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::(anonymous namespace)::Parser::~Parser()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::(anonymous namespace)::Parser::OnStreamAlloc(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::(anonymous namespace)::Parser::OnStreamRead(long, uv_buf_t const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Execute(char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Proxy<int (node::(anonymous namespace)::Parser::*)(), &(node::(anonymous namespace)::Parser::on_message_begin())>::Raw(llhttp__internal_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Proxy<int (node::(anonymous namespace)::Parser::*)(char const*, unsigned long), &(node::(anonymous namespace)::Parser::on_url(char const*, unsigned long))>::Raw(llhttp__internal_s*, char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Proxy<int (node::(anonymous namespace)::Parser::*)(char const*, unsigned long), &(node::(anonymous namespace)::Parser::on_status(char const*, unsigned long))>::Raw(llhttp__internal_s*, char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Proxy<int (node::(anonymous namespace)::Parser::*)(char const*, unsigned long), &(node::(anonymous namespace)::Parser::on_header_field(char const*, unsigned long))>::Raw(llhttp__internal_s*, char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Proxy<int (node::(anonymous namespace)::Parser::*)(char const*, unsigned long), &(node::(anonymous namespace)::Parser::on_header_value(char const*, unsigned long))>::Raw(llhttp__internal_s*, char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Proxy<int (node::(anonymous namespace)::Parser::*)(), &(node::(anonymous namespace)::Parser::on_headers_complete())>::Raw(llhttp__internal_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Proxy<int (node::(anonymous namespace)::Parser::*)(char const*, unsigned long), &(node::(anonymous namespace)::Parser::on_body(char const*, unsigned long))>::Raw(llhttp__internal_s*, char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Proxy<int (node::(anonymous namespace)::Parser::*)(), &(node::(anonymous namespace)::Parser::on_message_complete())>::Raw(llhttp__internal_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Proxy<int (node::(anonymous namespace)::Parser::*)(), &(node::(anonymous namespace)::Parser::on_chunk_header())>::Raw(llhttp__internal_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Proxy<int (node::(anonymous namespace)::Parser::*)(), &(node::(anonymous namespace)::Parser::on_chunk_complete())>::Raw(llhttp__internal_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Flush()",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::CreateHeaders()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Callbacks::Callbacks(bool)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Scope::Http2Scope(node::http2::Http2Stream*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Scope::Http2Scope(node::http2::Http2Session*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Scope::Http2Scope(node::http2::Http2Stream*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Scope::Http2Scope(node::http2::Http2Session*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Scope::~Http2Scope()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::MaybeScheduleWrite()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Scope::~Http2Scope()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Options::Http2Options(node::http2::Http2State*, node::http2::SessionType)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Options::Http2Options(node::http2::Http2State*, node::http2::SessionType)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::Init(node::http2::Http2State*, nghttp2_settings_entry*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::Http2Settings(node::http2::Http2Session*, v8::Local<v8::Object>, v8::Local<v8::Function>, unsigned long long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::Http2Settings(node::http2::Http2Session*, v8::Local<v8::Object>, v8::Local<v8::Function>, unsigned long long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::callback() const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::Pack()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::Pack(node::Environment*, unsigned long, nghttp2_settings_entry const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::Pack(node::http2::Http2State*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::Update(node::http2::Http2Session*, unsigned int (*)(nghttp2_session*, nghttp2_settings_id))",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::RefreshDefaults(node::http2::Http2State*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::Send()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::Done(bool)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Priority::Http2Priority(node::Environment*, v8::Local<v8::Value>, v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Priority::Http2Priority(node::Environment*, v8::Local<v8::Value>, v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::TypeName() const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Origins::Origins(node::Environment*, v8::Local<v8::String>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Origins::Origins(node::Environment*, v8::Local<v8::String>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Callbacks::Callbacks(bool)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnBeginHeadersCallback(nghttp2_session*, nghttp2_frame const*, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnHeaderCallback(nghttp2_session*, nghttp2_frame const*, nghttp2_rcbuf*, nghttp2_rcbuf*, unsigned char, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnFrameReceive(nghttp2_session*, nghttp2_frame const*, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnStreamClose(nghttp2_session*, int, unsigned int, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnDataChunkReceived(nghttp2_session*, unsigned char, int, unsigned char const*, unsigned long, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnFrameNotSent(nghttp2_session*, nghttp2_frame const*, int, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnInvalidHeader(nghttp2_session*, nghttp2_frame const*, nghttp2_rcbuf*, nghttp2_rcbuf*, unsigned char, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnNghttpError(nghttp2_session*, char const*, unsigned long, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnSendData(nghttp2_session*, nghttp2_frame*, unsigned char const*, unsigned long, nghttp2_data_source*, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnInvalidFrame(nghttp2_session*, nghttp2_frame const*, int, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnFrameSent(nghttp2_session*, nghttp2_frame const*, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnSelectPadding(nghttp2_session*, nghttp2_frame const*, unsigned long, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::StopTrackingRcbuf(nghttp2_rcbuf*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::CheckAllocatedSize(unsigned long) const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::IncreaseAllocatedSize(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::DecreaseAllocatedSize(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Http2Session(node::http2::Http2State*, v8::Local<v8::Object>, node::http2::SessionType)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Http2Session(node::http2::Http2State*, v8::Local<v8::Object>, node::http2::SessionType)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::~Http2Session()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::~Http2Session()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Session::~Http2Session()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::~Http2Session()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Session::~Http2Session()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::vector<node::http2::NgHttp2StreamWrite, std::__1::allocator<node::http2::NgHttp2StreamWrite> >, std::__1::__wrap_iter<node::http2::NgHttp2StreamWrite const*> >(char const*, std::__1::vector<node::http2::NgHttp2StreamWrite, std::__1::allocator<node::http2::NgHttp2StreamWrite> > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::diagnostic_name() const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2StreamPerformanceEntryTraits::GetDetails(node::Environment*, node::performance::PerformanceEntry<node::http2::Http2StreamPerformanceEntryTraits> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2SessionPerformanceEntryTraits::GetDetails(node::Environment*, node::performance::PerformanceEntry<node::http2::Http2SessionPerformanceEntryTraits> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::EmitStatistics()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::EmitStatistics()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Close(unsigned int, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::SendPendingData()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::PopPing()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Ping::DetachFromSession()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::FindStream(int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::CanAddStream()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::AddStream(node::http2::Http2Stream*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<int, node::BaseObjectPtrImpl<node::http2::Http2Stream, false>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, node::BaseObjectPtrImpl<node::http2::Http2Stream, false> > > >::operator[](int&&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::RemoveStream(int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnDWordAlignedPadding(unsigned long, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnMaxFrameSizePadding(unsigned long, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::ConsumeHTTP2Data()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::GetFrameID(nghttp2_frame const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::New(node::http2::Http2Session*, int, nghttp2_headers_category, int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::StartHeaders(nghttp2_headers_category)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::AddHeader(nghttp2_rcbuf*, nghttp2_rcbuf*, unsigned char)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::SubmitRstStream(unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::HandleDataFrame(nghttp2_frame const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::HandleHeadersFrame(nghttp2_frame const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::HandleSettingsFrame(nghttp2_frame const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::HandlePriorityFrame(nghttp2_frame const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::HandleGoawayFrame(nghttp2_frame const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::HandlePingFrame(nghttp2_frame const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::HandleAltSvcFrame(nghttp2_frame const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::HandleOriginFrame(nghttp2_frame const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Close(int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Destroy()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2StreamListener::OnStreamAlloc(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2StreamListener::OnStreamRead(long, uv_buf_t const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Ping::Done(bool, unsigned char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::PopSettings()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnStreamAfterWrite(node::WriteWrap*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::ClearOutgoing(int)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Session::OnStreamAfterWrite(node::WriteWrap*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::MaybeStopReading()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::FlushRstStream()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::PushOutgoingBuffer(node::http2::NgHttp2StreamWrite&&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::CopyDataIntoOutgoing(unsigned char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::http2::NgHttp2StreamWrite::~NgHttp2StreamWrite()",
    "type": "CPP"
  },
  {
    "name": "t node::StreamBase::Write(uv_buf_t*, unsigned long, uv_stream_s*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::SubmitRequest(node::http2::Http2Priority const&, node::NgHeaders<node::http2::Http2HeadersTraits> const&, int*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::Stream::Stream(int)",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Stream::Provider::Stream::~Stream()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnStreamAlloc(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::allocate_managed_buffer(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Session::OnStreamAlloc(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnStreamRead(long, uv_buf_t const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::release_managed_buffer(uv_buf_t const&)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Session::OnStreamRead(long, uv_buf_t const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::HasWritesOnSocketForStream(node::http2::Http2Stream*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Consume(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Receive(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Http2Stream(node::http2::Http2Session*, v8::Local<v8::Object>, int, nghttp2_headers_category, int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Http2Stream(node::http2::Http2Session*, v8::Local<v8::Object>, int, nghttp2_headers_category, int)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::vector<node::NgHeader<node::http2::Http2HeaderTraits>, std::__1::allocator<node::NgHeader<node::http2::Http2HeaderTraits> > >::reserve(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::StreamBase::Shutdown(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::~Http2Stream()",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2StreamListener::~Http2StreamListener()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::~Http2Stream()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Stream::~Http2Stream()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::~Http2Stream()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Stream::~Http2Stream()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::vector<node::NgHeader<node::http2::Http2HeaderTraits>, std::__1::allocator<node::NgHeader<node::http2::Http2HeaderTraits> > >, std::__1::__wrap_iter<node::NgHeader<node::http2::Http2HeaderTraits> const*> >(char const*, std::__1::vector<node::NgHeader<node::http2::Http2HeaderTraits>, std::__1::allocator<node::NgHeader<node::http2::Http2HeaderTraits> > > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::diagnostic_name() const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::operator*() const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::stream() const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::CreateShutdownWrap(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Stream::CreateShutdownWrap(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::DoShutdown(node::ShutdownWrap*)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Stream::DoShutdown(node::ShutdownWrap*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::SubmitResponse(node::NgHeaders<node::http2::Http2HeadersTraits> const&, int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::Stream::Stream(node::http2::Http2Stream*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::SubmitInfo(node::NgHeaders<node::http2::Http2HeadersTraits> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::OnTrailers()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::SubmitTrailers(node::NgHeaders<node::http2::Http2HeadersTraits> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::SubmitPriority(node::http2::Http2Priority const&, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Session::AddPendingRstStream(int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::SubmitPushPromise(node::NgHeaders<node::http2::Http2HeadersTraits> const&, int*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::ReadStart()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Stream::ReadStart()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::ReadStop()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Stream::ReadStop()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::DoWrite(node::WriteWrap*, uv_buf_t*, unsigned long, uv_stream_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::IncrementAvailableOutboundLength(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Stream::DoWrite(node::WriteWrap*, uv_buf_t*, unsigned long, uv_stream_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeader<node::http2::Http2HeaderTraits>::length() const",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeader<node::http2::Http2HeaderTraits>::~NgHeader()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::Provider(node::http2::Http2Stream*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::Provider(node::http2::Http2Stream*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::Provider(int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::Provider(int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::~Provider()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::~Provider()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::~Provider()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::Stream::Stream(int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::Stream::OnRead(nghttp2_session*, int, unsigned char*, unsigned long, unsigned int*, nghttp2_data_source*, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::Stream::Stream(node::http2::Http2Stream*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::DecrementAvailableOutboundLength(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::HttpErrorString(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::PackSettings(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::RefreshDefaultSettings(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::SetNextStreamID(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::SetLocalWindowSize(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::RefreshState(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Consume(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Destroy(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Request(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Goaway(unsigned int, int, unsigned char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Goaway(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::ArrayBufferViewContents<unsigned char, 64ul>::Read(v8::Local<v8::ArrayBufferView>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::UpdateChunksSent(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::RstStream(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Respond(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Info(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Trailers(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::GetID(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Destroy(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::PushPromise(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Priority(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::RefreshState(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::AltSvc(int, unsigned char*, unsigned long, unsigned char*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Origin(node::http2::Origins const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::AltSvc(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Origin(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Ping(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::ArrayBufferViewContents<unsigned char, 8ul>::Read(v8::Local<v8::ArrayBufferView>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::AddPing(unsigned char const*, v8::Local<v8::Function>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Settings(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::AddSettings(v8::Local<v8::Function>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Ping::Send(unsigned char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Ping::Http2Ping(node::http2::Http2Session*, v8::Local<v8::Object>, v8::Local<v8::Function>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Ping::Http2Ping(node::http2::Http2Session*, v8::Local<v8::Object>, v8::Local<v8::Function>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Ping::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Ping::callback() const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::NgHttp2StreamWrite::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::SetCallbackFunctions(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2State::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2State* node::Environment::AddBindingData<node::http2::Http2State>(v8::Local<v8::Context>, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T void node::http2::Http2Session::RefreshSettings<&(nghttp2_session_get_local_settings)>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T void node::http2::Http2Session::RefreshSettings<&(nghttp2_session_get_remote_settings)>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T _register_http2()",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2State::~Http2State()",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2State::~Http2State()",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2State::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::crypto::CipherJob<node::crypto::RSACipherTraits>::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::http2::NgHttp2StreamWrite::~NgHttp2StreamWrite()",
    "type": "CPP"
  },
  {
    "name": "t node::http2::NgHttp2StreamWrite::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::worker::JSTransferable::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Settings::~Http2Settings()",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Settings::~Http2Settings()",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Settings::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::worker::MessagePortData::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Session::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Session::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::mem::NgLibMemoryManager<node::http2::Http2Session, nghttp2_mem>::StopTrackingMemory(void*)",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2StreamListener::~Http2StreamListener()",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Stream::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Stream::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Ping::~Http2Ping()",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Ping::~Http2Ping()",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Ping::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__deque_base<node::BaseObjectPtrImpl<node::http2::Http2Ping, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::http2::Http2Ping, false> > >::clear()",
    "type": "CPP"
  },
  {
    "name": "t node::StreamReq::Dispose()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<char*, std::__1::unique_ptr<v8::BackingStore, std::__1::default_delete<v8::BackingStore> > >, std::__1::__unordered_map_hasher<char*, std::__1::__hash_value_type<char*, std::__1::unique_ptr<v8::BackingStore, std::__1::default_delete<v8::BackingStore> > >, std::__1::hash<char*>, true>, std::__1::__unordered_map_equal<char*, std::__1::__hash_value_type<char*, std::__1::unique_ptr<v8::BackingStore, std::__1::default_delete<v8::BackingStore> > >, std::__1::equal_to<char*>, true>, std::__1::allocator<std::__1::__hash_value_type<char*, std::__1::unique_ptr<v8::BackingStore, std::__1::default_delete<v8::BackingStore> > > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__deque_base<node::http2::NgHttp2StreamWrite, std::__1::allocator<node::http2::NgHttp2StreamWrite> >::clear()",
    "type": "CPP"
  },
  {
    "name": "t node::NgRcBufPointer<node::http2::Http2RcBufferPointerTraits>::~NgRcBufPointer()",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeader<node::http2::Http2HeaderTraits>::~NgHeader()",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeader<node::http2::Http2HeaderTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeader<node::http2::Http2HeaderTraits>::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeader<node::http2::Http2HeaderTraits>::GetName(node::http2::Http2Session*) const",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeader<node::http2::Http2HeaderTraits>::GetValue(node::http2::Http2Session*) const",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeader<node::http2::Http2HeaderTraits>::name() const",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeader<node::http2::Http2HeaderTraits>::value() const",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeader<node::http2::Http2HeaderTraits>::flags() const",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeaderBase<node::http2::Http2Session>::ToString() const",
    "type": "CPP"
  },
  {
    "name": "t node::NgRcBufPointer<node::http2::Http2RcBufferPointerTraits>::~NgRcBufPointer()",
    "type": "CPP"
  },
  {
    "name": "t node::NgRcBufPointer<node::http2::Http2RcBufferPointerTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::NgRcBufPointer<node::http2::Http2RcBufferPointerTraits>::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<char const*, v8::Eternal<v8::String>, std::__1::hash<char const*>, std::__1::equal_to<char const*>, std::__1::allocator<std::__1::pair<char const* const, v8::Eternal<v8::String> > > >::operator[](char const* const&)",
    "type": "CPP"
  },
  {
    "name": "t v8::MaybeLocal<v8::String> node::NgRcBufPointer<node::http2::Http2RcBufferPointerTraits>::External::New<node::http2::Http2Session>(node::http2::Http2Session*, node::NgRcBufPointer<node::http2::Http2RcBufferPointerTraits>)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<char const*, v8::Eternal<v8::String> >, std::__1::__unordered_map_hasher<char const*, std::__1::__hash_value_type<char const*, v8::Eternal<v8::String> >, std::__1::hash<char const*>, true>, std::__1::__unordered_map_equal<char const*, std::__1::__hash_value_type<char const*, v8::Eternal<v8::String> >, std::__1::equal_to<char const*>, true>, std::__1::allocator<std::__1::__hash_value_type<char const*, v8::Eternal<v8::String> > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::NgRcBufPointer<node::http2::Http2RcBufferPointerTraits>::External::~External()",
    "type": "CPP"
  },
  {
    "name": "t node::NgRcBufPointer<node::http2::Http2RcBufferPointerTraits>::External::~External()",
    "type": "CPP"
  },
  {
    "name": "t node::NgRcBufPointer<node::http2::Http2RcBufferPointerTraits>::External::data() const",
    "type": "CPP"
  },
  {
    "name": "t node::NgRcBufPointer<node::http2::Http2RcBufferPointerTraits>::External::length() const",
    "type": "CPP"
  },
  {
    "name": "t node::NgRcBufPointer<node::http2::Http2RcBufferPointerTraits>::str() const",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2State::~Http2State()",
    "type": "CPP"
  },
  {
    "name": "t node::AliasedStruct<node::http2::SessionJSFields>::AliasedStruct<>(v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "T node::mem::NgLibMemoryManager<node::http2::Http2Session, nghttp2_mem>::MallocImpl(unsigned long, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::mem::NgLibMemoryManager<node::http2::Http2Session, nghttp2_mem>::FreeImpl(void*, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::mem::NgLibMemoryManager<node::http2::Http2Session, nghttp2_mem>::CallocImpl(unsigned long, unsigned long, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::mem::NgLibMemoryManager<node::http2::Http2Session, nghttp2_mem>::ReallocImpl(void*, unsigned long, void*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::vector<node::http2::NgHttp2StreamWrite, std::__1::allocator<node::http2::NgHttp2StreamWrite> >::__swap_out_circular_buffer(std::__1::__split_buffer<node::http2::NgHttp2StreamWrite, std::__1::allocator<node::http2::NgHttp2StreamWrite>&>&)",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<int const, node::BaseObjectPtrImpl<node::http2::Http2Stream, false> >(char const*, std::__1::pair<int const, node::BaseObjectPtrImpl<node::http2::Http2Stream, false> > const&, char const*)",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::deque<node::BaseObjectPtrImpl<node::http2::Http2Ping, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::http2::Http2Ping, false> > >, std::__1::__deque_iterator<node::BaseObjectPtrImpl<node::http2::Http2Ping, false>, node::BaseObjectPtrImpl<node::http2::Http2Ping, false> const*, node::BaseObjectPtrImpl<node::http2::Http2Ping, false> const&, node::BaseObjectPtrImpl<node::http2::Http2Ping, false> const* const*, long, 512l> >(char const*, std::__1::deque<node::BaseObjectPtrImpl<node::http2::Http2Ping, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::http2::Http2Ping, false> > > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::deque<node::BaseObjectPtrImpl<node::http2::Http2Settings, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::http2::Http2Settings, false> > >, std::__1::__deque_iterator<node::BaseObjectPtrImpl<node::http2::Http2Settings, false>, node::BaseObjectPtrImpl<node::http2::Http2Settings, false> const*, node::BaseObjectPtrImpl<node::http2::Http2Settings, false> const&, node::BaseObjectPtrImpl<node::http2::Http2Settings, false> const* const*, long, 512l> >(char const*, std::__1::deque<node::BaseObjectPtrImpl<node::http2::Http2Settings, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::http2::Http2Settings, false> > > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Stream::EmitStatistics()::$_0>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Stream::EmitStatistics()::$_0>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Stream::EmitStatistics()::$_0>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::performance::PerformanceEntry<node::http2::Http2StreamPerformanceEntryTraits>::Notify(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Session::EmitStatistics()::$_1>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Session::EmitStatistics()::$_1>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Session::EmitStatistics()::$_1>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::performance::PerformanceEntry<node::http2::Http2SessionPerformanceEntryTraits>::Notify(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<3u, unsigned int, 0>(unsigned int const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<4u, unsigned int, 0>(unsigned int const&)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Session::Close(unsigned int, bool)::$_2>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Session::Close(unsigned int, bool)::$_2>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Session::Close(unsigned int, bool)::$_2>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<int, node::BaseObjectPtrImpl<node::http2::Http2Stream, false> >, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, node::BaseObjectPtrImpl<node::http2::Http2Stream, false> >, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, node::BaseObjectPtrImpl<node::http2::Http2Stream, false> >, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, node::BaseObjectPtrImpl<node::http2::Http2Stream, false> > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t unsigned long std::__1::__hash_table<std::__1::__hash_value_type<int, node::BaseObjectPtrImpl<node::http2::Http2Stream, false> >, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, node::BaseObjectPtrImpl<node::http2::Http2Stream, false> >, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, node::BaseObjectPtrImpl<node::http2::Http2Stream, false> >, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, node::BaseObjectPtrImpl<node::http2::Http2Stream, false> > > >::__erase_unique<int>(int const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<4u, unsigned long, 0>(unsigned long const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<4u, long, 0>(long const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<4u, unsigned char, 0>(unsigned char const&)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Session::MaybeScheduleWrite()::$_4>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Session::MaybeScheduleWrite()::$_4>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Session::MaybeScheduleWrite()::$_4>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<node::http2::NgHttp2StreamWrite, std::__1::allocator<node::http2::NgHttp2StreamWrite> >::__emplace_back_slow_path<node::http2::NgHttp2StreamWrite>(node::http2::NgHttp2StreamWrite&&)",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::deque<node::http2::NgHttp2StreamWrite, std::__1::allocator<node::http2::NgHttp2StreamWrite> >, std::__1::__deque_iterator<node::http2::NgHttp2StreamWrite, node::http2::NgHttp2StreamWrite const*, node::http2::NgHttp2StreamWrite const&, node::http2::NgHttp2StreamWrite const* const*, long, 128l> >(char const*, std::__1::deque<node::http2::NgHttp2StreamWrite, std::__1::allocator<node::http2::NgHttp2StreamWrite> > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Stream::Destroy()::$_5>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Stream::Destroy()::$_5>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Stream::Destroy()::$_5>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::deque<node::http2::NgHttp2StreamWrite, std::__1::allocator<node::http2::NgHttp2StreamWrite> >::__add_back_capacity()",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<node::NgHeader<node::http2::Http2HeaderTraits>, std::__1::allocator<node::NgHeader<node::http2::Http2HeaderTraits> > >::__push_back_slow_path<node::NgHeader<node::http2::Http2HeaderTraits> >(node::NgHeader<node::http2::Http2HeaderTraits>&&)",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeaders<node::http2::Http2HeadersTraits>::NgHeaders(node::Environment*, v8::Local<v8::Array>)",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2State::Http2State(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::AliasedBufferBase<double, v8::Float64Array, void>::AliasedBufferBase(v8::Isolate*, unsigned long, unsigned long, node::AliasedBufferBase<unsigned char, v8::Uint8Array, void> const&, unsigned long const*)",
    "type": "CPP"
  },
  {
    "name": "t node::AliasedBufferBase<unsigned int, v8::Uint32Array, void>::AliasedBufferBase(v8::Isolate*, unsigned long, unsigned long, node::AliasedBufferBase<unsigned char, v8::Uint8Array, void> const&, unsigned long const*)",
    "type": "CPP"
  },
  {
    "name": "t ___cxx_global_array_dtor",
    "type": "CPP"
  },
  {
    "name": "t __GLOBAL__sub_I_node_http2.cc",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::Converter::Converter(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::Converter::set_subst_chars(char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::Converter::Converter(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::Converter::Converter(UConverter*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::Converter::Converter(UConverter*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::Converter::reset()",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::Converter::min_char_size() const",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::Converter::max_char_size() const",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::ConverterObject::Has(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::ConverterObject::Create(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::ConverterObject::ConverterObject(node::Environment*, v8::Local<v8::Object>, UConverter*, int, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::ConverterObject::Decode(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::MaybeStackBuffer<char16_t, 1024ul>::AllocateSufficientStorage(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::ConverterObject::ConverterObject(node::Environment*, v8::Local<v8::Object>, UConverter*, int, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::InitializeICUDirectory(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::SetDefaultTimeZone(char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::ToUnicode(node::MaybeStackBuffer<char, 1024ul>*, char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::ToASCII(node::MaybeStackBuffer<char, 1024ul>*, char const*, unsigned long, node::i18n::idna_mode)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::ToUnicode(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::ToASCII(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::GetStringWidth(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::(anonymous namespace)::ICUErrorName(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::(anonymous namespace)::Transcode(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T _register_icu()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_icu(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::ConverterObject::~ConverterObject()",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::ConverterObject::~ConverterObject()",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::ConverterObject::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::(anonymous namespace)::Transcode(node::Environment*, char const*, char const*, char const*, unsigned long, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::(anonymous namespace)::TranscodeToUcs2(node::Environment*, char const*, char const*, char const*, unsigned long, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::(anonymous namespace)::TranscodeUcs2FromUtf8(node::Environment*, char const*, char const*, char const*, unsigned long, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::(anonymous namespace)::TranscodeUtf8FromUcs2(node::Environment*, char const*, char const*, char const*, unsigned long, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::(anonymous namespace)::TranscodeFromUcs2(node::Environment*, char const*, char const*, char const*, unsigned long, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unique_ptr<node::ExternalReferenceRegistry, std::__1::default_delete<node::ExternalReferenceRegistry> >::~unique_ptr()",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::NodeMainInstance(v8::Isolate*, uv_loop_s*, node::MultiIsolatePlatform*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::NodeMainInstance(v8::Isolate*, uv_loop_s*, node::MultiIsolatePlatform*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::CollectExternalReferences()",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::Create(v8::Isolate*, uv_loop_s*, node::MultiIsolatePlatform*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::NodeMainInstance(v8::Isolate::CreateParams*, uv_loop_s*, node::MultiIsolatePlatform*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const*)",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::NodeMainInstance(v8::Isolate::CreateParams*, uv_loop_s*, node::MultiIsolatePlatform*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const*)",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::Dispose()",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::~NodeMainInstance()",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::~NodeMainInstance()",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::Run(node::EnvSerializeInfo const*)",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::CreateMainEnvironment(int*, node::EnvSerializeInfo const*)",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::Run(int*, node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t __GLOBAL__sub_I_node_main_instance.cc",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::GetTransferMode() const",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::TransferForMessaging()",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::CloneForMessaging() const",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::NestedTransferables() const",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::FinalizeTransferRead(v8::Local<v8::Context>, v8::ValueDeserializer*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::TransferData::FinalizeTransferWrite(v8::Local<v8::Context>, v8::ValueSerializer*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::Message::Message(node::MallocedBuffer<char>&&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::Message::Message(node::MallocedBuffer<char>&&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::Message::IsCloseMessage() const",
    "type": "CPP"
  },
  {
    "name": "T node::worker::Message::Deserialize(node::Environment*, v8::Local<v8::Context>, v8::Local<v8::Value>*)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::DeserializerDelegate::~DeserializerDelegate()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::Message::AddSharedArrayBuffer(std::__1::shared_ptr<v8::BackingStore>)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::Message::AddTransferable(std::__1::unique_ptr<node::worker::TransferData, std::__1::default_delete<node::worker::TransferData> >&&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::Message::AddWASMModule(v8::CompiledWasmModule&&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::Message::Serialize(node::Environment*, v8::Local<v8::Context>, v8::Local<v8::Value>, node::MaybeStackBuffer<v8::Local<v8::Value>, 8ul> const&, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::SerializerDelegate::~SerializerDelegate()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::Message::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::vector<std::__1::shared_ptr<v8::BackingStore>, std::__1::allocator<std::__1::shared_ptr<v8::BackingStore> > >, std::__1::__wrap_iter<std::__1::shared_ptr<v8::BackingStore> const*> >(char const*, std::__1::vector<std::__1::shared_ptr<v8::BackingStore>, std::__1::allocator<std::__1::shared_ptr<v8::BackingStore> > > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::vector<std::__1::unique_ptr<node::worker::TransferData, std::__1::default_delete<node::worker::TransferData> >, std::__1::allocator<std::__1::unique_ptr<node::worker::TransferData, std::__1::default_delete<node::worker::TransferData> > > >, std::__1::__wrap_iter<std::__1::unique_ptr<node::worker::TransferData, std::__1::default_delete<node::worker::TransferData> > const*> >(char const*, std::__1::vector<std::__1::unique_ptr<node::worker::TransferData, std::__1::default_delete<node::worker::TransferData> >, std::__1::allocator<std::__1::unique_ptr<node::worker::TransferData, std::__1::default_delete<node::worker::TransferData> > > > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePortData::MessagePortData(node::worker::MessagePort*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePortData::MessagePortData(node::worker::MessagePort*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePortData::~MessagePortData()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePortData::Disentangle()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePortData::~MessagePortData()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePortData::~MessagePortData()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePortData::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::deque<std::__1::shared_ptr<node::worker::Message>, std::__1::allocator<std::__1::shared_ptr<node::worker::Message> > >, std::__1::__deque_iterator<std::__1::shared_ptr<node::worker::Message>, std::__1::shared_ptr<node::worker::Message> const*, std::__1::shared_ptr<node::worker::Message> const&, std::__1::shared_ptr<node::worker::Message> const* const*, long, 256l> >(char const*, std::__1::deque<std::__1::shared_ptr<node::worker::Message>, std::__1::allocator<std::__1::shared_ptr<node::worker::Message> > > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePortData::AddToIncomingQueue(std::__1::shared_ptr<node::worker::Message>)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::TriggerAsync()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePortData::Entangle(node::worker::MessagePortData*, node::worker::MessagePortData*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::SiblingGroup::Entangle(std::initializer_list<node::worker::MessagePortData*>)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::SiblingGroup::Disentangle(node::worker::MessagePortData*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::~MessagePort()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::Detach()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::~MessagePort()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::~MessagePort()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::MessagePort(node::Environment*, v8::Local<v8::Context>, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::MessagePort(node::Environment*, v8::Local<v8::Context>, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::Close(v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::New(node::Environment*, v8::Local<v8::Context>, std::__1::unique_ptr<node::worker::MessagePortData, std::__1::default_delete<node::worker::MessagePortData> >, std::__1::shared_ptr<node::worker::SiblingGroup>)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::GetMessagePortConstructorTemplate(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::SiblingGroup::Entangle(node::worker::MessagePortData*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::ReceiveMessage(v8::Local<v8::Context>, node::worker::MessagePort::MessageProcessingMode, v8::Local<v8::Value>*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::OnMessage(node::worker::MessagePort::MessageProcessingMode)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::OnClose()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::GetTransferMode() const",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::TransferForMessaging()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePortData::Deserialize(node::Environment*, v8::Local<v8::Context>, std::__1::unique_ptr<node::worker::TransferData, std::__1::default_delete<node::worker::TransferData> >)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::PostMessage(node::Environment*, v8::Local<v8::Context>, v8::Local<v8::Value>, node::MaybeStackBuffer<v8::Local<v8::Value>, 8ul> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePortData::Dispatch(std::__1::shared_ptr<node::worker::Message>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::SiblingGroup::Dispatch(node::worker::MessagePortData*, std::__1::shared_ptr<node::worker::Message>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::PostMessage(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::ReadIterable(node::Environment*, v8::Local<v8::Context>, node::MaybeStackBuffer<v8::Local<v8::Value>, 8ul>&, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::Message::~Message()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::Start()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::Stop()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::Start(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::Stop(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::CheckType(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::Drain(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::ReceiveMessage(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::MoveToContext(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::Entangle(node::worker::MessagePort*, node::worker::MessagePort*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::Entangle(node::worker::MessagePort*, node::worker::MessagePortData*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::JSTransferable(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::JSTransferable(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::GetTransferMode() const",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::TransferForMessaging()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::TransferOrClone(node::BaseObject::TransferMode) const",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::CloneForMessaging() const",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::NestedTransferables() const",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::FinalizeTransferRead(v8::Local<v8::Context>, v8::ValueDeserializer*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::Data::Data(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&, v8::Global<v8::Value>&&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::Data::Data(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&, v8::Global<v8::Value>&&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::Data::Deserialize(node::Environment*, v8::Local<v8::Context>, std::__1::unique_ptr<node::worker::TransferData, std::__1::default_delete<node::worker::TransferData> >)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::Data::FinalizeTransferWrite(v8::Local<v8::Context>, v8::ValueSerializer*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::SiblingGroup::Get(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::weak_ptr<node::worker::SiblingGroup>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::weak_ptr<node::worker::SiblingGroup> > > >::operator[](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::SiblingGroup::CheckSiblingGroup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::SiblingGroup::SiblingGroup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::SiblingGroup::SiblingGroup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::SiblingGroup::~SiblingGroup()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::SiblingGroup::~SiblingGroup()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::weak_ptr<node::worker::SiblingGroup>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::weak_ptr<node::worker::SiblingGroup> > > >::~unordered_map()",
    "type": "CPP"
  },
  {
    "name": "T _register_messaging()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_messaging(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::Message::~Message()",
    "type": "CPP"
  },
  {
    "name": "t node::worker::Message::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::worker::MessagePortData::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::worker::MessagePort::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::worker::MessagePort::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::worker::JSTransferable::~JSTransferable()",
    "type": "CPP"
  },
  {
    "name": "t node::worker::JSTransferable::~JSTransferable()",
    "type": "CPP"
  },
  {
    "name": "t node::worker::JSTransferable::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::worker::JSTransferable::Data::~Data()",
    "type": "CPP"
  },
  {
    "name": "t node::worker::JSTransferable::Data::~Data()",
    "type": "CPP"
  },
  {
    "name": "t node::worker::JSTransferable::Data::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::DeserializerDelegate::~DeserializerDelegate()",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::DeserializerDelegate::ReadHostObject(v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::DeserializerDelegate::GetWasmModuleFromId(v8::Isolate*, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::DeserializerDelegate::GetSharedArrayBufferFromId(v8::Isolate*, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::SerializerDelegate::~SerializerDelegate()",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::SerializerDelegate::ThrowDataCloneError(v8::Local<v8::String>)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::SerializerDelegate::WriteHostObject(v8::Isolate*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::SerializerDelegate::GetSharedArrayBufferId(v8::Isolate*, v8::Local<v8::SharedArrayBuffer>)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::SerializerDelegate::GetWasmModuleTransferId(v8::Isolate*, v8::Local<v8::WasmModuleObject>)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_MISSING_TRANSFERABLE_IN_TRANSFER_LIST<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::allocator_traits<std::__1::allocator<node::BaseObjectPtrImpl<node::BaseObject, false> > >::construct<node::BaseObjectPtrImpl<node::BaseObject, false>, node::BaseObjectPtrImpl<node::BaseObject, false> const&>(std::__1::allocator<node::BaseObjectPtrImpl<node::BaseObject, false> >&, node::BaseObjectPtrImpl<node::BaseObject, false>*, node::BaseObjectPtrImpl<node::BaseObject, false> const&)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<node::BaseObjectPtrImpl<node::BaseObject, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::BaseObject, false> > >::__push_back_slow_path<node::BaseObjectPtrImpl<node::BaseObject, false> const&>(node::BaseObjectPtrImpl<node::BaseObject, false> const&)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<v8::Global<v8::SharedArrayBuffer>, std::__1::allocator<v8::Global<v8::SharedArrayBuffer> > >::__emplace_back_slow_path<v8::Global<v8::SharedArrayBuffer> >(v8::Global<v8::SharedArrayBuffer>&&)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::GetDOMException(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<node::BaseObjectPtrImpl<node::BaseObject, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::BaseObject, false> > >::__emplace_back_slow_path<node::BaseObjectPtrImpl<node::BaseObject, false> >(node::BaseObjectPtrImpl<node::BaseObject, false>&&)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_INVALID_TRANSFER_OBJECT<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::enable_if<(__is_forward_iterator<node::BaseObjectPtrImpl<node::BaseObject, false>*>::value) && (is_constructible<node::BaseObjectPtrImpl<node::BaseObject, false>, std::__1::iterator_traits<node::BaseObjectPtrImpl<node::BaseObject, false>*>::reference>::value), void>::type std::__1::vector<node::BaseObjectPtrImpl<node::BaseObject, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::BaseObject, false> > >::assign<node::BaseObjectPtrImpl<node::BaseObject, false>*>(node::BaseObjectPtrImpl<node::BaseObject, false>*, node::BaseObjectPtrImpl<node::BaseObject, false>*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::enable_if<__is_forward_iterator<node::BaseObjectPtrImpl<node::BaseObject, false>*>::value, void>::type std::__1::vector<node::BaseObjectPtrImpl<node::BaseObject, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::BaseObject, false> > >::__construct_at_end<node::BaseObjectPtrImpl<node::BaseObject, false>*>(node::BaseObjectPtrImpl<node::BaseObject, false>*, node::BaseObjectPtrImpl<node::BaseObject, false>*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__deque_base<std::__1::shared_ptr<node::worker::Message>, std::__1::allocator<std::__1::shared_ptr<node::worker::Message> > >::clear()",
    "type": "CPP"
  },
  {
    "name": "t node::worker::MessagePort::MessagePort(node::Environment*, v8::Local<v8::Context>, v8::Local<v8::Object>)::$_1::__invoke(uv_async_s*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_CONSTRUCT_CALL_INVALID<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::MaybeStackBuffer<v8::Local<v8::Value>, 8ul>::AllocateSufficientStorage(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::Message::~Message()",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_CLOSED_MESSAGE_PORT<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::InitMessaging(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::MessageChannel(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::SetDeserializerCreateObjectFunction(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::BroadcastChannel(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_CONSTRUCT_CALL_REQUIRED<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<std::__1::shared_ptr<v8::internal::wasm::JSToWasmWrapperCompilationUnit>, std::__1::allocator<std::__1::shared_ptr<v8::internal::wasm::JSToWasmWrapperCompilationUnit> > >::__emplace_back_slow_path<std::__1::shared_ptr<v8::internal::wasm::JSToWasmWrapperCompilationUnit> >(std::__1::shared_ptr<v8::internal::wasm::JSToWasmWrapperCompilationUnit>&&)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<std::__1::unique_ptr<cppgc::internal::PageMemoryRegion, std::__1::default_delete<cppgc::internal::PageMemoryRegion> >, std::__1::allocator<std::__1::unique_ptr<cppgc::internal::PageMemoryRegion, std::__1::default_delete<cppgc::internal::PageMemoryRegion> > > >::__push_back_slow_path<std::__1::unique_ptr<cppgc::internal::PageMemoryRegion, std::__1::default_delete<cppgc::internal::PageMemoryRegion> > >(std::__1::unique_ptr<cppgc::internal::PageMemoryRegion, std::__1::default_delete<cppgc::internal::PageMemoryRegion> >&&)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<v8::CompiledWasmModule, std::__1::allocator<v8::CompiledWasmModule> >::__emplace_back_slow_path<v8::CompiledWasmModule>(v8::CompiledWasmModule&&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::deque<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__add_back_capacity()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__split_buffer<int*, std::__1::allocator<int*> >::push_front(int*&&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::shared_ptr<node::worker::SiblingGroup> std::__1::shared_ptr<node::worker::SiblingGroup>::make_shared<>()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::worker::SiblingGroup, std::__1::allocator<node::worker::SiblingGroup> >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::worker::SiblingGroup, std::__1::allocator<node::worker::SiblingGroup> >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::worker::SiblingGroup, std::__1::allocator<node::worker::SiblingGroup> >::__on_zero_shared()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::worker::Message, std::__1::allocator<node::worker::Message> >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::worker::Message, std::__1::allocator<node::worker::Message> >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::inspector::NodeInspectorClient, std::__1::allocator<node::inspector::NodeInspectorClient> >::__on_zero_shared()",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::allocator_traits<std::__1::allocator<node::BaseObjectPtrImpl<node::BaseObject, false> > >::construct<node::BaseObjectPtrImpl<node::BaseObject, false>, node::BaseObject*>(std::__1::allocator<node::BaseObjectPtrImpl<node::BaseObject, false> >&, node::BaseObjectPtrImpl<node::BaseObject, false>*, node::BaseObject*&&)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<node::BaseObjectPtrImpl<node::BaseObject, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::BaseObject, false> > >::__emplace_back_slow_path<node::BaseObject*>(node::BaseObject*&&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::shared_ptr<node::worker::SiblingGroup> std::__1::shared_ptr<node::worker::SiblingGroup>::make_shared<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::weak_ptr<node::worker::SiblingGroup> >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::weak_ptr<node::worker::SiblingGroup> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::weak_ptr<node::worker::SiblingGroup> >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::weak_ptr<node::worker::SiblingGroup> > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_bad_weak_ptr()",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::__tree_remove<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*)",
    "type": "CPP"
  },
  {
    "name": "t __GLOBAL__sub_I_node_messaging.cc",
    "type": "CPP"
  },
  {
    "name": "T node::Metadata::Metadata()",
    "type": "CPP"
  },
  {
    "name": "t node::Metadata::~Metadata()",
    "type": "CPP"
  },
  {
    "name": "T node::GetOpenSSLVersion()",
    "type": "CPP"
  },
  {
    "name": "T node::Metadata::Versions::InitializeIntlVersions()",
    "type": "CPP"
  },
  {
    "name": "T node::Metadata::Versions::Versions()",
    "type": "CPP"
  },
  {
    "name": "T node::Metadata::Versions::Versions()",
    "type": "CPP"
  },
  {
    "name": "T node::Metadata::Release::Release()",
    "type": "CPP"
  },
  {
    "name": "T node::Metadata::Release::Release()",
    "type": "CPP"
  },
  {
    "name": "T node::Metadata::Metadata()",
    "type": "CPP"
  },
  {
    "name": "t node::Metadata::Versions::~Versions()",
    "type": "CPP"
  },
  {
    "name": "t __GLOBAL__sub_I_node_metadata.cc",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::NativeModuleLoader()",
    "type": "CPP"
  },
  {
    "name": "t node::native_module::NativeModuleLoader::~NativeModuleLoader()",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::NativeModuleLoader()",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::GetInstance()",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::Exists(char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::Add(char const*, node::UnionBytes const&)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::GetSourceObject(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "t node::UnionBytes::ToStringChecked(v8::Isolate*) const",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::GetConfigString(v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::GetModuleIds()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::reserve(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::InitializeModuleCategories()",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::GetCannotBeRequired()",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::GetCanBeRequired()",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::CanBeRequired(char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::CannotBeRequired(char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::code_cache()",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::GetCodeCache(char const*) const",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::CompileAsModule(v8::Local<v8::Context>, char const*, node::native_module::NativeModuleLoader::Result*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::LookupAndCompile(v8::Local<v8::Context>, char const*, std::__1::vector<v8::Local<v8::String>, std::__1::allocator<v8::Local<v8::String> > >*, node::native_module::NativeModuleLoader::Result*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::LoadBuiltinModuleSource(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::native_module::NativeModuleLoader::~NativeModuleLoader()",
    "type": "CPP"
  },
  {
    "name": "t node::NonOwningExternalTwoByteResource::data() const",
    "type": "CPP"
  },
  {
    "name": "t node::NonOwningExternalTwoByteResource::length() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__tree_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::UnionBytes>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::UnionBytes>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::UnionBytes>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::UnionBytes>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::UnionBytes> > >::__emplace_unique_impl<char const*&, node::UnionBytes const&>(char const*&, node::UnionBytes const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::pair<std::__1::__tree_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long>, bool> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__emplace_unique_impl<char const (&) [37]>(char const (&) [37])",
    "type": "CPP"
  },
  {
    "name": "t unsigned long std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__count_unique<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > > > >::erase(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, void*>*>)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, void*> > > > std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > > > >::__construct_node<char const*&, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >(char const*&, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> >&&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > > > >::__rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t __GLOBAL__sub_I_node_native_module.cc",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::ToJsSet(v8::Local<v8::Context>, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::Add(char const*, node::UnionBytes const&)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::Exists(char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::GetSourceObject(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::GetConfigString(v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::GetModuleCategories(v8::Local<v8::Name>, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::set(std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::GetCacheUsage(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t v8::MaybeLocal<v8::Value> node::ToV8Value<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(v8::Local<v8::Context>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::ModuleIdsGetter(v8::Local<v8::Name>, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::ConfigStringGetter(v8::Local<v8::Name>, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::RecordResult(char const*, node::native_module::NativeModuleLoader::Result, node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::CompileFunction(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::LookupAndCompile(v8::Local<v8::Context>, char const*, std::__1::vector<v8::Local<v8::String>, std::__1::allocator<v8::Local<v8::String> > >*, node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::HasCachedBuiltins(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T _register_native_module()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_native_module(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::DebugOptions::CheckOptions(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)",
    "type": "CPP"
  },
  {
    "name": "T node::PerProcessOptions::CheckOptions(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)",
    "type": "CPP"
  },
  {
    "name": "T node::PerIsolateOptions::CheckOptions(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)",
    "type": "CPP"
  },
  {
    "name": "T node::EnvironmentOptions::CheckOptions(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::DebugOptionsParser::DebugOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::DebugOptionsParser::~DebugOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::EnvironmentOptionsParser::~EnvironmentOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "T void node::options_parser::Parse<node::DebugOptions, node::Options>(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, node::DebugOptions*, node::OptionEnvvarSettings, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::DebugOptions>::Parse(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, node::DebugOptions*, node::OptionEnvvarSettings, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*) const",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::PerIsolateOptionsParser::PerIsolateOptionsParser(node::options_parser::EnvironmentOptionsParser const&)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::PerIsolateOptionsParser::~PerIsolateOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::PerProcessOptionsParser::PerProcessOptionsParser(node::options_parser::PerIsolateOptionsParser const&)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::PerProcessOptionsParser::~PerProcessOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "T void node::options_parser::Parse<node::PerIsolateOptions, node::Options>(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, node::PerIsolateOptions*, node::OptionEnvvarSettings, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerIsolateOptions>::Parse(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, node::PerIsolateOptions*, node::OptionEnvvarSettings, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*) const",
    "type": "CPP"
  },
  {
    "name": "T void node::options_parser::Parse<node::PerProcessOptions, node::Options>(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, node::PerProcessOptions*, node::OptionEnvvarSettings, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerProcessOptions>::Parse(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, node::PerProcessOptions*, node::OptionEnvvarSettings, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*) const",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::DebugOptionsParser::DebugOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::DebugOptions>::AddOption(char const*, char const*, node::HostPort node::DebugOptions::*, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::EnvironmentOptions>::AddAlias(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::DebugOptions>::AddOption(char const*, char const*, bool node::DebugOptions::*, node::OptionEnvvarSettings, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::EnvironmentOptions>::AddAlias(char const*, std::initializer_list<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::DebugOptions>::Implies(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::DebugOptions>::AddOption(char const*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::DebugOptions::*, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::EnvironmentOptionsParser::EnvironmentOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::EnvironmentOptions>::AddOption(char const*, char const*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > node::EnvironmentOptions::*, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::EnvironmentOptions>::AddOption(char const*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::EnvironmentOptions::*, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::EnvironmentOptions>::AddOption(char const*, char const*, bool node::EnvironmentOptions::*, node::OptionEnvvarSettings, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::EnvironmentOptions>::AddOption(char const*, char const*, node::options_parser::OptionsParser<node::EnvironmentOptions>::NoOp, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::EnvironmentOptions>::Implies(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::EnvironmentOptions>::AddOption(char const*, char const*, long long node::EnvironmentOptions::*, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::EnvironmentOptions>::AddOption(char const*, char const*, node::options_parser::OptionsParser<node::EnvironmentOptions>::V8Option, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::EnvironmentOptions>::AddOption(char const*, char const*, unsigned long long node::EnvironmentOptions::*, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::EnvironmentOptionsParser::EnvironmentOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::PerIsolateOptionsParser::PerIsolateOptionsParser(node::options_parser::EnvironmentOptionsParser const&)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerIsolateOptions>::AddOption(char const*, char const*, bool node::PerIsolateOptions::*, node::OptionEnvvarSettings, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerIsolateOptions>::AddOption(char const*, char const*, node::options_parser::OptionsParser<node::PerIsolateOptions>::V8Option, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerIsolateOptions>::AddOption(char const*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::PerIsolateOptions::*, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerIsolateOptions>::Implies(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerIsolateOptions>::ImpliesNot(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t void node::options_parser::OptionsParser<node::PerIsolateOptions>::Insert<node::EnvironmentOptions>(node::options_parser::OptionsParser<node::EnvironmentOptions> const&, node::EnvironmentOptions* (node::PerIsolateOptions::*)())",
    "type": "CPP"
  },
  {
    "name": "T node::PerIsolateOptions::get_per_env_options()",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::PerProcessOptionsParser::PerProcessOptionsParser(node::options_parser::PerIsolateOptionsParser const&)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerProcessOptions>::AddOption(char const*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::PerProcessOptions::*, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerProcessOptions>::AddOption(char const*, char const*, long long node::PerProcessOptions::*, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerProcessOptions>::AddOption(char const*, char const*, bool node::PerProcessOptions::*, node::OptionEnvvarSettings, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerProcessOptions>::AddOption(char const*, char const*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > node::PerProcessOptions::*, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerProcessOptions>::Implies(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerProcessOptions>::ImpliesNot(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t void node::options_parser::OptionsParser<node::PerProcessOptions>::Insert<node::PerIsolateOptions>(node::options_parser::OptionsParser<node::PerIsolateOptions> const&, node::PerIsolateOptions* (node::PerProcessOptions::*)())",
    "type": "CPP"
  },
  {
    "name": "T node::PerProcessOptions::get_per_isolate_options()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerProcessOptions>::AddOption(char const*, char const*, node::options_parser::OptionsParser<node::PerProcessOptions>::NoOp, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::SplitHostPort(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::ParseAndValidatePort(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::GetBashCompletion()",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::GetCLIOptions(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t v8::MaybeLocal<v8::Value> node::ToV8Value<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >(v8::Local<v8::Context>, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > const&, v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::GetEmbedderOptions(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::HandleEnvOptions(std::__1::shared_ptr<node::EnvironmentOptions>)",
    "type": "CPP"
  },
  {
    "name": "T node::HandleEnvOptions(std::__1::shared_ptr<node::EnvironmentOptions>, std::__1::function<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > (char const*)>)",
    "type": "CPP"
  },
  {
    "name": "T node::ParseNodeOptionsEnvVar(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)",
    "type": "CPP"
  },
  {
    "name": "T _register_options()",
    "type": "CPP"
  },
  {
    "name": "t node::EnvironmentOptions::~EnvironmentOptions()",
    "type": "CPP"
  },
  {
    "name": "t node::EnvironmentOptions::~EnvironmentOptions()",
    "type": "CPP"
  },
  {
    "name": "t node::DebugOptions::~DebugOptions()",
    "type": "CPP"
  },
  {
    "name": "t node::DebugOptions::~DebugOptions()",
    "type": "CPP"
  },
  {
    "name": "t node::PerIsolateOptions::~PerIsolateOptions()",
    "type": "CPP"
  },
  {
    "name": "t node::PerIsolateOptions::~PerIsolateOptions()",
    "type": "CPP"
  },
  {
    "name": "t node::PerProcessOptions::~PerProcessOptions()",
    "type": "CPP"
  },
  {
    "name": "t node::PerProcessOptions::~PerProcessOptions()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::DebugOptionsParser::~DebugOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::EnvironmentOptionsParser::~EnvironmentOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::PerIsolateOptionsParser::~PerIsolateOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::PerProcessOptionsParser::~PerProcessOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "t node::PerIsolateOptions::PerIsolateOptions()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::DebugOptions>::~OptionsParser()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >::~unordered_map()",
    "type": "CPP"
  },
  {
    "name": "t void node::options_parser::OptionsParser<node::EnvironmentOptions>::Insert<node::DebugOptions>(node::options_parser::OptionsParser<node::DebugOptions> const&, node::DebugOptions* (node::EnvironmentOptions::*)())",
    "type": "CPP"
  },
  {
    "name": "T node::EnvironmentOptions::get_debug_options()",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >::insert<std::__1::__hash_map_const_iterator<std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, void*>*> > >(std::__1::__hash_map_const_iterator<std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, void*>*> >, std::__1::__hash_map_const_iterator<std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, void*>*> >)",
    "type": "CPP"
  },
  {
    "name": "t auto node::options_parser::OptionsParser<node::EnvironmentOptions>::Convert<node::DebugOptions>(node::options_parser::OptionsParser<node::DebugOptions>::OptionInfo, node::options_parser::OptionsParser<node::DebugOptions>* (node::EnvironmentOptions::*)())",
    "type": "CPP"
  },
  {
    "name": "t auto node::options_parser::OptionsParser<node::EnvironmentOptions>::Convert<node::DebugOptions>(node::options_parser::OptionsParser<node::DebugOptions>::Implication, node::options_parser::OptionsParser<node::DebugOptions>* (node::EnvironmentOptions::*)())",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, void*> > > > std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >::__construct_node_hash<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&>(unsigned long, std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::options_parser::OptionsParser<node::EnvironmentOptions>::OptionInfo>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::options_parser::OptionsParser<node::EnvironmentOptions>::OptionInfo>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::options_parser::OptionsParser<node::EnvironmentOptions>::OptionInfo>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::options_parser::OptionsParser<node::EnvironmentOptions>::OptionInfo> > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t auto node::options_parser::OptionsParser<node::EnvironmentOptions>::Convert<node::options_parser::OptionsParser<node::DebugOptions>::BaseOptionField, node::DebugOptions>(std::__1::shared_ptr<node::options_parser::OptionsParser<node::DebugOptions>::BaseOptionField>, node::DebugOptions* (node::EnvironmentOptions::*)())::AdaptedField::~AdaptedField()",
    "type": "CPP"
  },
  {
    "name": "t auto node::options_parser::OptionsParser<node::EnvironmentOptions>::Convert<node::options_parser::OptionsParser<node::DebugOptions>::BaseOptionField, node::DebugOptions>(std::__1::shared_ptr<node::options_parser::OptionsParser<node::DebugOptions>::BaseOptionField>, node::DebugOptions* (node::EnvironmentOptions::*)())::AdaptedField::~AdaptedField()",
    "type": "CPP"
  },
  {
    "name": "Abort.ExtraWide",
    "timestamp": 29387,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libobjc.A.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/liboah.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libfakelink.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libicucore.A.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libSystem.B.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/SoftLinking.framework/Versions/A/SoftLinking",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libc++abi.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libc++.1.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libcache.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libcommonCrypto.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libcompiler_rt.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libcopyfile.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libcorecrypto.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libdispatch.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libdyld.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libkeymgr.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libmacho.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libquarantine.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libremovefile.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_asl.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_blocks.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_c.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_collections.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_configuration.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_containermanager.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_coreservices.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_darwin.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_dnssd.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_featureflags.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_info.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_m.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_malloc.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_networkextension.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_notify.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_product_info_filter.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_sandbox.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_secinit.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_kernel.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "T _kdebug_is_enabled",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_typefilter",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_trace",
    "type": "CPP"
  },
  {
    "name": "T _issetugid",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_map",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_allocate_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_purgable_control_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_deallocate_trap",
    "type": "CPP"
  },
  {
    "name": "T _task_dyld_process_info_notify_get",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_protect_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_map_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_allocate_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_deallocate_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_mod_refs_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_move_member_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_insert_right_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_insert_member_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_extract_member_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_construct_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_destruct_trap",
    "type": "CPP"
  },
  {
    "name": "T _mach_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _thread_self_trap",
    "type": "CPP"
  },
  {
    "name": "T _task_self_trap",
    "type": "CPP"
  },
  {
    "name": "T _host_self_trap",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_trap",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_overwrite_trap",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_signal_trap",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_signal_all_trap",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_signal_thread_trap",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_wait_trap",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_wait_signal_trap",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_timedwait_trap",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_timedwait_signal_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_get_attributes_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_guard_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_unguard_trap",
    "type": "CPP"
  },
  {
    "name": "T _mach_generate_activity_id",
    "type": "CPP"
  },
  {
    "name": "T _task_name_for_pid",
    "type": "CPP"
  },
  {
    "name": "T _task_for_pid",
    "type": "CPP"
  },
  {
    "name": "T _pid_for_task",
    "type": "CPP"
  },
  {
    "name": "T _macx_swapon",
    "type": "CPP"
  },
  {
    "name": "T _macx_swapoff",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_special_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _macx_triggers",
    "type": "CPP"
  },
  {
    "name": "T _macx_backing_store_suspend",
    "type": "CPP"
  },
  {
    "name": "T _macx_backing_store_recovery",
    "type": "CPP"
  },
  {
    "name": "T _swtch_pri",
    "type": "CPP"
  },
  {
    "name": "T _swtch",
    "type": "CPP"
  },
  {
    "name": "T _syscall_thread_switch",
    "type": "CPP"
  },
  {
    "name": "T _clock_sleep_trap",
    "type": "CPP"
  },
  {
    "name": "T _host_create_mach_voucher_trap",
    "type": "CPP"
  },
  {
    "name": "T _mach_voucher_extract_attr_recipe_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_type_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_request_notification_trap",
    "type": "CPP"
  },
  {
    "name": "T _mach_timebase_info_trap",
    "type": "CPP"
  },
  {
    "name": "T _mach_wait_until",
    "type": "CPP"
  },
  {
    "name": "T _mk_timer_create",
    "type": "CPP"
  },
  {
    "name": "T _mk_timer_destroy",
    "type": "CPP"
  },
  {
    "name": "T _mk_timer_arm",
    "type": "CPP"
  },
  {
    "name": "T _mk_timer_cancel",
    "type": "CPP"
  },
  {
    "name": "T _mk_timer_arm_leeway",
    "type": "CPP"
  },
  {
    "name": "T _debug_control_port_for_pid",
    "type": "CPP"
  },
  {
    "name": "T _task_restartable_ranges_register",
    "type": "CPP"
  },
  {
    "name": "t _memcpy",
    "type": "CPP"
  },
  {
    "name": "T _mig_get_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg",
    "type": "CPP"
  },
  {
    "name": "T _mach_timebase_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_continuous_time",
    "type": "CPP"
  },
  {
    "name": "T _mach_absolute_time",
    "type": "CPP"
  },
  {
    "name": "T _getentropy",
    "type": "CPP"
  },
  {
    "name": "T ___libkernel_voucher_init",
    "type": "CPP"
  },
  {
    "name": "T _getpid",
    "type": "CPP"
  },
  {
    "name": "T _task_get_special_port",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_mod_refs",
    "type": "CPP"
  },
  {
    "name": "T _task_info",
    "type": "CPP"
  },
  {
    "name": "T _csops_audittoken",
    "type": "CPP"
  },
  {
    "name": "T _cerror_nocancel",
    "type": "CPP"
  },
  {
    "name": "T ___error",
    "type": "CPP"
  },
  {
    "name": "T _getattrlist",
    "type": "CPP"
  },
  {
    "name": "T _access",
    "type": "CPP"
  },
  {
    "name": "T ___open",
    "type": "CPP"
  },
  {
    "name": "T _fstat64",
    "type": "CPP"
  },
  {
    "name": "T _csr_check",
    "type": "CPP"
  },
  {
    "name": "T ___csrctl",
    "type": "CPP"
  },
  {
    "name": "T _fcntl",
    "type": "CPP"
  },
  {
    "name": "T ___fcntl",
    "type": "CPP"
  },
  {
    "name": "T _close",
    "type": "CPP"
  },
  {
    "name": "T _read",
    "type": "CPP"
  },
  {
    "name": "T ___open_nocancel",
    "type": "CPP"
  },
  {
    "name": "T _mmap",
    "type": "CPP"
  },
  {
    "name": "T ___mmap",
    "type": "CPP"
  },
  {
    "name": "T _voucher_mach_msg_set",
    "type": "CPP"
  },
  {
    "name": "T _mach_host_self",
    "type": "CPP"
  },
  {
    "name": "T _host_get_special_port",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_destroy",
    "type": "CPP"
  },
  {
    "name": "t _mach_msg_destroy_port",
    "type": "CPP"
  },
  {
    "name": "T _host_create_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _voucher_mach_msg_clear",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_construct",
    "type": "CPP"
  },
  {
    "name": "T _task_set_special_port",
    "type": "CPP"
  },
  {
    "name": "T _geteuid",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_deallocate",
    "type": "CPP"
  },
  {
    "name": "T _proc_pidinfo",
    "type": "CPP"
  },
  {
    "name": "T ___proc_info",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_map",
    "type": "CPP"
  },
  {
    "name": "T _mach_make_memory_entry_64",
    "type": "CPP"
  },
  {
    "name": "T ___sysctl",
    "type": "CPP"
  },
  {
    "name": "T _mach_approximate_time",
    "type": "CPP"
  },
  {
    "name": "T _mig_get_special_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _mig_strncpy_zerofill",
    "type": "CPP"
  },
  {
    "name": "T _shm_open",
    "type": "CPP"
  },
  {
    "name": "T _close$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___openat",
    "type": "CPP"
  },
  {
    "name": "T _cerror",
    "type": "CPP"
  },
  {
    "name": "t __pthread_exit_if_canceled",
    "type": "CPP"
  },
  {
    "name": "T _lseek",
    "type": "CPP"
  },
  {
    "name": "T _pread",
    "type": "CPP"
  },
  {
    "name": "T _mach_voucher_deallocate",
    "type": "CPP"
  },
  {
    "name": "T ___sysctlbyname",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_destruct",
    "type": "CPP"
  },
  {
    "name": "T ___sandbox_ms",
    "type": "CPP"
  },
  {
    "name": "T _chdir",
    "type": "CPP"
  },
  {
    "name": "T _stat64",
    "type": "CPP"
  },
  {
    "name": "T _mkdir",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_deallocate",
    "type": "CPP"
  },
  {
    "name": "T _getuid",
    "type": "CPP"
  },
  {
    "name": "T _pthread_getugid_np",
    "type": "CPP"
  },
  {
    "name": "T _getegid",
    "type": "CPP"
  },
  {
    "name": "T _csops",
    "type": "CPP"
  },
  {
    "name": "T _proc_pidpath",
    "type": "CPP"
  },
  {
    "name": "t _strlen",
    "type": "CPP"
  },
  {
    "name": "T _fstatfs64",
    "type": "CPP"
  },
  {
    "name": "T ___getdirentries64",
    "type": "CPP"
  },
  {
    "name": "T ___workq_kernreturn",
    "type": "CPP"
  },
  {
    "name": "T ___workq_open",
    "type": "CPP"
  },
  {
    "name": "T _kevent_qos",
    "type": "CPP"
  },
  {
    "name": "T _kevent_id",
    "type": "CPP"
  },
  {
    "name": "T ___bsdthread_ctl",
    "type": "CPP"
  },
  {
    "name": "T ___thread_selfid",
    "type": "CPP"
  },
  {
    "name": "T ___ulock_wait",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_request_notification",
    "type": "CPP"
  },
  {
    "name": "T ___ulock_wake",
    "type": "CPP"
  },
  {
    "name": "T ___commpage_gettimeofday",
    "type": "CPP"
  },
  {
    "name": "t ___commpage_gettimeofday_internal",
    "type": "CPP"
  },
  {
    "name": "T _read$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _mach_get_times",
    "type": "CPP"
  },
  {
    "name": "t __mach_continuous_time_base",
    "type": "CPP"
  },
  {
    "name": "T _host_request_notification",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_allocate",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_insert_member",
    "type": "CPP"
  },
  {
    "name": "T _vm_allocate",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_allocate",
    "type": "CPP"
  },
  {
    "name": "T _vm_deallocate",
    "type": "CPP"
  },
  {
    "name": "T _getrlimit",
    "type": "CPP"
  },
  {
    "name": "T ___getrlimit",
    "type": "CPP"
  },
  {
    "name": "T _getaudit_addr",
    "type": "CPP"
  },
  {
    "name": "T _syscall",
    "type": "CPP"
  },
  {
    "name": "T _readlink",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_insert_right",
    "type": "CPP"
  },
  {
    "name": "T _proc_setpcontrol",
    "type": "CPP"
  },
  {
    "name": "T _vm_remap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_vm_remap",
    "type": "CPP"
  },
  {
    "name": "T _task_policy_set",
    "type": "CPP"
  },
  {
    "name": "T _mach_voucher_extract_attr_recipe",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_get_attributes",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_set_attributes",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_set_attributes",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_trace_string",
    "type": "CPP"
  },
  {
    "name": "T ___kdebug_trace64",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_type",
    "type": "CPP"
  },
  {
    "name": "T _posix_madvise",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_mutexwait",
    "type": "CPP"
  },
  {
    "name": "T _setrlimit",
    "type": "CPP"
  },
  {
    "name": "T ___setrlimit",
    "type": "CPP"
  },
  {
    "name": "T _task_restartable_ranges_synchronize",
    "type": "CPP"
  },
  {
    "name": "T ___disable_threadsignal",
    "type": "CPP"
  },
  {
    "name": "T ___bsdthread_terminate",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_mutexdrop",
    "type": "CPP"
  },
  {
    "name": "T _getfsstat64",
    "type": "CPP"
  },
  {
    "name": "T _statfs64",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_guard",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_create",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_wait",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_signal",
    "type": "CPP"
  },
  {
    "name": "T _vm_copy",
    "type": "CPP"
  },
  {
    "name": "T _getxattr",
    "type": "CPP"
  },
  {
    "name": "T _thread_destruct_special_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _mig_dealloc_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_destroy",
    "type": "CPP"
  },
  {
    "name": "T _proc_track_dirty",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_dirty",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_get_refs",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_get_refs",
    "type": "CPP"
  },
  {
    "name": "T ___semwait_signal",
    "type": "CPP"
  },
  {
    "name": "T _voucher_mach_msg_revert",
    "type": "CPP"
  },
  {
    "name": "T _voucher_mach_msg_adopt",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_extract_member",
    "type": "CPP"
  },
  {
    "name": "T _sigprocmask",
    "type": "CPP"
  },
  {
    "name": "T ___sigaltstack",
    "type": "CPP"
  },
  {
    "name": "T _pwrite",
    "type": "CPP"
  },
  {
    "name": "T _ftruncate",
    "type": "CPP"
  },
  {
    "name": "T _setattrlist",
    "type": "CPP"
  },
  {
    "name": "T _getattrlistbulk",
    "type": "CPP"
  },
  {
    "name": "T _listxattr",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_cvwait",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_cvbroad",
    "type": "CPP"
  },
  {
    "name": "T _guarded_open_np",
    "type": "CPP"
  },
  {
    "name": "T ___guarded_open_np",
    "type": "CPP"
  },
  {
    "name": "T _guarded_pwrite_np",
    "type": "CPP"
  },
  {
    "name": "T _vm_purgable_control",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_purgable_control",
    "type": "CPP"
  },
  {
    "name": "T _fsctl",
    "type": "CPP"
  },
  {
    "name": "T _fgetattrlist",
    "type": "CPP"
  },
  {
    "name": "T _munmap",
    "type": "CPP"
  },
  {
    "name": "T ___munmap",
    "type": "CPP"
  },
  {
    "name": "T _fsgetpath",
    "type": "CPP"
  },
  {
    "name": "T _setxattr",
    "type": "CPP"
  },
  {
    "name": "T _mkdirat",
    "type": "CPP"
  },
  {
    "name": "T _fstatat64",
    "type": "CPP"
  },
  {
    "name": "T _guarded_close_np",
    "type": "CPP"
  },
  {
    "name": "T _fsync",
    "type": "CPP"
  },
  {
    "name": "T _host_get_io_master",
    "type": "CPP"
  },
  {
    "name": "T _write",
    "type": "CPP"
  },
  {
    "name": "T _rename",
    "type": "CPP"
  },
  {
    "name": "T ___rename",
    "type": "CPP"
  },
  {
    "name": "T ___inc_remove_counter",
    "type": "CPP"
  },
  {
    "name": "T _rmdir",
    "type": "CPP"
  },
  {
    "name": "T ___rmdir",
    "type": "CPP"
  },
  {
    "name": "T _chmod",
    "type": "CPP"
  },
  {
    "name": "T ___chmod",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_protect",
    "type": "CPP"
  },
  {
    "name": "T ___bsdthread_create",
    "type": "CPP"
  },
  {
    "name": "T _mprotect",
    "type": "CPP"
  },
  {
    "name": "t ___gettimeofday_with_mach",
    "type": "CPP"
  },
  {
    "name": "T ___gettimeofday",
    "type": "CPP"
  },
  {
    "name": "T _writev",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_cvclrprepost",
    "type": "CPP"
  },
  {
    "name": "T _write$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_info",
    "type": "CPP"
  },
  {
    "name": "T ___persona",
    "type": "CPP"
  },
  {
    "name": "T _unlink",
    "type": "CPP"
  },
  {
    "name": "T ___unlink",
    "type": "CPP"
  },
  {
    "name": "T _flock",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_request_notification",
    "type": "CPP"
  },
  {
    "name": "T _necp_open",
    "type": "CPP"
  },
  {
    "name": "T _change_fdguard_np",
    "type": "CPP"
  },
  {
    "name": "T _necp_client_action",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_get",
    "type": "CPP"
  },
  {
    "name": "T _getgid",
    "type": "CPP"
  },
  {
    "name": "T _audit_session_self",
    "type": "CPP"
  },
  {
    "name": "T _socket",
    "type": "CPP"
  },
  {
    "name": "T _fcntl$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___fcntl_nocancel",
    "type": "CPP"
  },
  {
    "name": "T _setsockopt",
    "type": "CPP"
  },
  {
    "name": "T _connect$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _sendto$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _select$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _select$DARWIN_EXTSN$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _recvfrom$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _socketpair",
    "type": "CPP"
  },
  {
    "name": "T _sendmsg$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _ioctl",
    "type": "CPP"
  },
  {
    "name": "T ___ioctl",
    "type": "CPP"
  },
  {
    "name": "T _connect",
    "type": "CPP"
  },
  {
    "name": "T _sendto",
    "type": "CPP"
  },
  {
    "name": "T _recvfrom",
    "type": "CPP"
  },
  {
    "name": "T _connectx",
    "type": "CPP"
  },
  {
    "name": "T _getsockopt",
    "type": "CPP"
  },
  {
    "name": "T _shutdown",
    "type": "CPP"
  },
  {
    "name": "T _fgetxattr",
    "type": "CPP"
  },
  {
    "name": "T _dup",
    "type": "CPP"
  },
  {
    "name": "T _select",
    "type": "CPP"
  },
  {
    "name": "T _getpeername",
    "type": "CPP"
  },
  {
    "name": "T _fchmod",
    "type": "CPP"
  },
  {
    "name": "T ___fchmod",
    "type": "CPP"
  },
  {
    "name": "T _getiopolicy_np",
    "type": "CPP"
  },
  {
    "name": "T ___iopolicysys",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_send",
    "type": "CPP"
  },
  {
    "name": "T _link",
    "type": "CPP"
  },
  {
    "name": "T _mach_right_send_release",
    "type": "CPP"
  },
  {
    "name": "T _vm_protect",
    "type": "CPP"
  },
  {
    "name": "T _recvmsg",
    "type": "CPP"
  },
  {
    "name": "T _mig_reply_setup",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_region",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_timedwait",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_cvsignal",
    "type": "CPP"
  },
  {
    "name": "T _mach_voucher_attr_command",
    "type": "CPP"
  },
  {
    "name": "T _removexattr",
    "type": "CPP"
  },
  {
    "name": "T _clonefileat",
    "type": "CPP"
  },
  {
    "name": "T _host_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_move_member",
    "type": "CPP"
  },
  {
    "name": "T _thread_policy",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_thread_policy",
    "type": "CPP"
  },
  {
    "name": "t __pthread_clear_qos_tsd",
    "type": "CPP"
  },
  {
    "name": "T _mig_put_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _select$1050",
    "type": "CPP"
  },
  {
    "name": "T _mig_strncpy",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_wrlock",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_unlock",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_rdlock",
    "type": "CPP"
  },
  {
    "name": "T _fsetxattr",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_get_context",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_get_context",
    "type": "CPP"
  },
  {
    "name": "T _fchflags",
    "type": "CPP"
  },
  {
    "name": "T _futimes",
    "type": "CPP"
  },
  {
    "name": "T _umask",
    "type": "CPP"
  },
  {
    "name": "T _utimes",
    "type": "CPP"
  },
  {
    "name": "T _thread_switch",
    "type": "CPP"
  },
  {
    "name": "T _clock_get_time",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_destroy",
    "type": "CPP"
  },
  {
    "name": "T _gethostuuid",
    "type": "CPP"
  },
  {
    "name": "T ___gethostuuid",
    "type": "CPP"
  },
  {
    "name": "T ___stat64_extended",
    "type": "CPP"
  },
  {
    "name": "T ___chmod_extended",
    "type": "CPP"
  },
  {
    "name": "T ___lstat64_extended",
    "type": "CPP"
  },
  {
    "name": "T _open_dprotected_np",
    "type": "CPP"
  },
  {
    "name": "T ___open_dprotected_np",
    "type": "CPP"
  },
  {
    "name": "T ___fstat64_extended",
    "type": "CPP"
  },
  {
    "name": "T ___fchmod_extended",
    "type": "CPP"
  },
  {
    "name": "T _fsetattrlist",
    "type": "CPP"
  },
  {
    "name": "T _fchown",
    "type": "CPP"
  },
  {
    "name": "T _getgroups",
    "type": "CPP"
  },
  {
    "name": "T _lchown",
    "type": "CPP"
  },
  {
    "name": "T _symlink",
    "type": "CPP"
  },
  {
    "name": "T ___openat_nocancel",
    "type": "CPP"
  },
  {
    "name": "T _sendmsg",
    "type": "CPP"
  },
  {
    "name": "T _mig_deallocate",
    "type": "CPP"
  },
  {
    "name": "T ___kdebug_typefilter",
    "type": "CPP"
  },
  {
    "name": "T ___libkernel_init",
    "type": "CPP"
  },
  {
    "name": "T _mach_init",
    "type": "CPP"
  },
  {
    "name": "t _mach_init_doit",
    "type": "CPP"
  },
  {
    "name": "T __init_cpu_capabilities",
    "type": "CPP"
  },
  {
    "name": "T __get_cpu_capabilities",
    "type": "CPP"
  },
  {
    "name": "t __pthread_set_self",
    "type": "CPP"
  },
  {
    "name": "t _strcmp",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_strcmp",
    "type": "CPP"
  },
  {
    "name": "T ___libkernel_platform_init",
    "type": "CPP"
  },
  {
    "name": "T _mach_thread_self",
    "type": "CPP"
  },
  {
    "name": "T ___bsdthread_register",
    "type": "CPP"
  },
  {
    "name": "T _host_get_clock_service",
    "type": "CPP"
  },
  {
    "name": "T _proc_name",
    "type": "CPP"
  },
  {
    "name": "t _bcopy",
    "type": "CPP"
  },
  {
    "name": "T _kqueue",
    "type": "CPP"
  },
  {
    "name": "T _kevent",
    "type": "CPP"
  },
  {
    "name": "T _pselect$DARWIN_EXTSN",
    "type": "CPP"
  },
  {
    "name": "T ___pselect",
    "type": "CPP"
  },
  {
    "name": "T _quotactl",
    "type": "CPP"
  },
  {
    "name": "T _fileport_makefd",
    "type": "CPP"
  },
  {
    "name": "T _thread_policy_set",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_thread_policy_set",
    "type": "CPP"
  },
  {
    "name": "T _msync",
    "type": "CPP"
  },
  {
    "name": "T _pipe",
    "type": "CPP"
  },
  {
    "name": "T _fileport_makeport",
    "type": "CPP"
  },
  {
    "name": "T ___kqueue_workloop_ctl",
    "type": "CPP"
  },
  {
    "name": "T ___sigaction",
    "type": "CPP"
  },
  {
    "name": "T _getppid",
    "type": "CPP"
  },
  {
    "name": "T _thread_set_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _mach_error_string",
    "type": "CPP"
  },
  {
    "name": "t _mach_error_string_int",
    "type": "CPP"
  },
  {
    "name": "t _do_compat",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_init",
    "type": "CPP"
  },
  {
    "name": "t _malloc",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_adddup2",
    "type": "CPP"
  },
  {
    "name": "t __posix_spawn_file_actions_grow",
    "type": "CPP"
  },
  {
    "name": "t _realloc",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_init",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setsigmask",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setsigdefault",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setflags",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getmacpolicyinfo_np",
    "type": "CPP"
  },
  {
    "name": "t _posix_spawnattr_macpolicyinfo_lookup",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setmacpolicyinfo_np",
    "type": "CPP"
  },
  {
    "name": "t _strlcpy",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_fchdir",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_chdir",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn",
    "type": "CPP"
  },
  {
    "name": "T ___posix_spawn",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_destroy",
    "type": "CPP"
  },
  {
    "name": "t _free",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_destroy",
    "type": "CPP"
  },
  {
    "name": "T ___wait4",
    "type": "CPP"
  },
  {
    "name": "T _mach_continuous_approximate_time",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_sigmask",
    "type": "CPP"
  },
  {
    "name": "T ___semwait_signal_nocancel",
    "type": "CPP"
  },
  {
    "name": "T _sigsuspend$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___sigsuspend_nocancel",
    "type": "CPP"
  },
  {
    "name": "T __exit",
    "type": "CPP"
  },
  {
    "name": "T _thread_info",
    "type": "CPP"
  },
  {
    "name": "T _proc_pidoriginatorinfo",
    "type": "CPP"
  },
  {
    "name": "T _getrusage",
    "type": "CPP"
  },
  {
    "name": "T _mach_ports_register",
    "type": "CPP"
  },
  {
    "name": "T ___fork",
    "type": "CPP"
  },
  {
    "name": "T _setiopolicy_np",
    "type": "CPP"
  },
  {
    "name": "T _ffsctl",
    "type": "CPP"
  },
  {
    "name": "T _getsockname",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_cpumon_params",
    "type": "CPP"
  },
  {
    "name": "T ___process_policy",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_cpumon_defaults",
    "type": "CPP"
  },
  {
    "name": "T _proc_pid_rusage",
    "type": "CPP"
  },
  {
    "name": "T _chown",
    "type": "CPP"
  },
  {
    "name": "T _bind",
    "type": "CPP"
  },
  {
    "name": "T _pselect$1050",
    "type": "CPP"
  },
  {
    "name": "T _guarded_write_np",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_copy",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_server",
    "type": "CPP"
  },
  {
    "name": "T _kill",
    "type": "CPP"
  },
  {
    "name": "T ___kill",
    "type": "CPP"
  },
  {
    "name": "T _chflags",
    "type": "CPP"
  },
  {
    "name": "T _pathconf",
    "type": "CPP"
  },
  {
    "name": "T _setpriority",
    "type": "CPP"
  },
  {
    "name": "T ___setpriority",
    "type": "CPP"
  },
  {
    "name": "T _vm_region_64",
    "type": "CPP"
  },
  {
    "name": "T _vm_region_recurse_64",
    "type": "CPP"
  },
  {
    "name": "T _getpriority",
    "type": "CPP"
  },
  {
    "name": "T _proc_rlimit_control",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_kill",
    "type": "CPP"
  },
  {
    "name": "T _setitimer",
    "type": "CPP"
  },
  {
    "name": "T ___sandbox_msp",
    "type": "CPP"
  },
  {
    "name": "T _fs_snapshot_list",
    "type": "CPP"
  },
  {
    "name": "T _listen",
    "type": "CPP"
  },
  {
    "name": "T _accept",
    "type": "CPP"
  },
  {
    "name": "T _poll",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setjetsam_ext",
    "type": "CPP"
  },
  {
    "name": "T _getpgrp",
    "type": "CPP"
  },
  {
    "name": "T _execve",
    "type": "CPP"
  },
  {
    "name": "T _setsid",
    "type": "CPP"
  },
  {
    "name": "T _dup2",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_overwrite",
    "type": "CPP"
  },
  {
    "name": "T _csr_get_active_config",
    "type": "CPP"
  },
  {
    "name": "T _ptrace",
    "type": "CPP"
  },
  {
    "name": "t _mach_msg_server_consume_unsent_message",
    "type": "CPP"
  },
  {
    "name": "T _getdtablesize",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_create",
    "type": "CPP"
  },
  {
    "name": "T ___work_interval_ctl",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_alloc",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_get_id",
    "type": "CPP"
  },
  {
    "name": "T _memorystatus_control",
    "type": "CPP"
  },
  {
    "name": "T _lstat64",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_type",
    "type": "CPP"
  },
  {
    "name": "T _task_threads",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_state",
    "type": "CPP"
  },
  {
    "name": "T _setgid",
    "type": "CPP"
  },
  {
    "name": "T _setuid",
    "type": "CPP"
  },
  {
    "name": "T _thread_policy_get",
    "type": "CPP"
  },
  {
    "name": "T ___get_remove_counter",
    "type": "CPP"
  },
  {
    "name": "T _pthread_setugid_np",
    "type": "CPP"
  },
  {
    "name": "T _seteuid",
    "type": "CPP"
  },
  {
    "name": "T _setegid",
    "type": "CPP"
  },
  {
    "name": "T _vm_read",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_vm_read",
    "type": "CPP"
  },
  {
    "name": "T _sem_open",
    "type": "CPP"
  },
  {
    "name": "T _sem_close",
    "type": "CPP"
  },
  {
    "name": "T _auditon",
    "type": "CPP"
  },
  {
    "name": "T _sfi_set_class_offtime",
    "type": "CPP"
  },
  {
    "name": "T ___sfi_ctl",
    "type": "CPP"
  },
  {
    "name": "T _system_set_sfi_window",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _unlinkat",
    "type": "CPP"
  },
  {
    "name": "T ___unlinkat",
    "type": "CPP"
  },
  {
    "name": "T _proc_get_cpumon_params",
    "type": "CPP"
  },
  {
    "name": "T _proc_disable_wakemon",
    "type": "CPP"
  },
  {
    "name": "T _mlock",
    "type": "CPP"
  },
  {
    "name": "T _munlock",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_wakemon_defaults",
    "type": "CPP"
  },
  {
    "name": "T _host_statistics64",
    "type": "CPP"
  },
  {
    "name": "T _proc_listpids",
    "type": "CPP"
  },
  {
    "name": "T _clonefile",
    "type": "CPP"
  },
  {
    "name": "T _proc_denap_assertion_begin_with_msg",
    "type": "CPP"
  },
  {
    "name": "T _proc_importance_assertion_begin_with_msg",
    "type": "CPP"
  },
  {
    "name": "T _proc_denap_assertion_complete",
    "type": "CPP"
  },
  {
    "name": "T _proc_importance_assertion_complete",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_extract_right",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_extract_right",
    "type": "CPP"
  },
  {
    "name": "T _task_set_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _getpgid",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_signpost_start",
    "type": "CPP"
  },
  {
    "name": "t _kdebug_signpost_internal",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_signpost_end",
    "type": "CPP"
  },
  {
    "name": "T _host_statistics",
    "type": "CPP"
  },
  {
    "name": "T _terminate_with_reason",
    "type": "CPP"
  },
  {
    "name": "T ___terminate_with_payload",
    "type": "CPP"
  },
  {
    "name": "T _task_set_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_voucher_extract_attr_content",
    "type": "CPP"
  },
  {
    "name": "T _guarded_kqueue_np",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_get_attributes",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_region_recurse",
    "type": "CPP"
  },
  {
    "name": "T _necp_match_policy",
    "type": "CPP"
  },
  {
    "name": "T _select$DARWIN_EXTSN",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_read_overwrite",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_server_once",
    "type": "CPP"
  },
  {
    "name": "T _proc_disable_cpumon",
    "type": "CPP"
  },
  {
    "name": "T _task_get_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _audit_session_port",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setauditsessionport_np",
    "type": "CPP"
  },
  {
    "name": "t _posix_spawn_appendportaction_np",
    "type": "CPP"
  },
  {
    "name": "T ___sigreturn",
    "type": "CPP"
  },
  {
    "name": "T _audit_session_join",
    "type": "CPP"
  },
  {
    "name": "T ___sigwait",
    "type": "CPP"
  },
  {
    "name": "T _setpgid",
    "type": "CPP"
  },
  {
    "name": "T _lstat",
    "type": "CPP"
  },
  {
    "name": "T _stat",
    "type": "CPP"
  },
  {
    "name": "T _open",
    "type": "CPP"
  },
  {
    "name": "T _fstatfs",
    "type": "CPP"
  },
  {
    "name": "T _mach_ports_lookup",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setcpumonitor_default",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setspecialport_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_addopen",
    "type": "CPP"
  },
  {
    "name": "T _kevent64",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setbinpref_np",
    "type": "CPP"
  },
  {
    "name": "T ___setlogin",
    "type": "CPP"
  },
  {
    "name": "T ___initgroups",
    "type": "CPP"
  },
  {
    "name": "T ___getlogin",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_set_context",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_set_context",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_get_set_status",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_get_set_status",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_canceled",
    "type": "CPP"
  },
  {
    "name": "T _clock_sleep",
    "type": "CPP"
  },
  {
    "name": "T _vm_map",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_vm_map",
    "type": "CPP"
  },
  {
    "name": "T _flistxattr",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_receive",
    "type": "CPP"
  },
  {
    "name": "T _mount",
    "type": "CPP"
  },
  {
    "name": "T _wait4",
    "type": "CPP"
  },
  {
    "name": "T ___open_extended",
    "type": "CPP"
  },
  {
    "name": "T _exchangedata",
    "type": "CPP"
  },
  {
    "name": "T ___carbon_delete",
    "type": "CPP"
  },
  {
    "name": "T ___delete",
    "type": "CPP"
  },
  {
    "name": "T _unmount",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_addinherit_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_addclose",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setexceptionports_np",
    "type": "CPP"
  },
  {
    "name": "t _reallocf",
    "type": "CPP"
  },
  {
    "name": "t _pthread_current_stack_contains_np",
    "type": "CPP"
  },
  {
    "name": "t _bzero",
    "type": "CPP"
  },
  {
    "name": "t ___bzero",
    "type": "CPP"
  },
  {
    "name": "t _memchr",
    "type": "CPP"
  },
  {
    "name": "t _memcmp",
    "type": "CPP"
  },
  {
    "name": "t _memmove",
    "type": "CPP"
  },
  {
    "name": "t _strchr",
    "type": "CPP"
  },
  {
    "name": "t _strlcat",
    "type": "CPP"
  },
  {
    "name": "t _strncmp",
    "type": "CPP"
  },
  {
    "name": "t _strnlen",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_strlen",
    "type": "CPP"
  },
  {
    "name": "T ___libkernel_init_late",
    "type": "CPP"
  },
  {
    "name": "T ___libkernel_init_after_boot_tasks",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_strchr",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_bzero",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_memset",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_memmove",
    "type": "CPP"
  },
  {
    "name": "t __system_version_compat_check_path_suffix",
    "type": "CPP"
  },
  {
    "name": "t __system_version_compat_open_shim",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_strcpy",
    "type": "CPP"
  },
  {
    "name": "t __posix_spawn_with_filter",
    "type": "CPP"
  },
  {
    "name": "t __execve_with_filter",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_strlcpy",
    "type": "CPP"
  },
  {
    "name": "T _mach_host_special_port_description",
    "type": "CPP"
  },
  {
    "name": "T _mach_task_special_port_description",
    "type": "CPP"
  },
  {
    "name": "T _mach_thread_special_port_description",
    "type": "CPP"
  },
  {
    "name": "T _mach_host_special_port_for_id",
    "type": "CPP"
  },
  {
    "name": "t _port_for_id_internal",
    "type": "CPP"
  },
  {
    "name": "T _mach_task_special_port_for_id",
    "type": "CPP"
  },
  {
    "name": "T _mach_thread_special_port_for_id",
    "type": "CPP"
  },
  {
    "name": "T _pkt_subtype_assert_fail",
    "type": "CPP"
  },
  {
    "name": "T _pkt_type_assert_fail",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_headroom",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_headroom",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_link_header_length",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_link_header_length",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_link_broadcast",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_link_broadcast",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_link_multicast",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_link_multicast",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_link_ethfcs",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_link_ethfcs",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_transport_traffic_background",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_transport_traffic_background",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_transport_traffic_realtime",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_transport_traffic_realtime",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_transport_retransmit",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_transport_retransmit",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_transport_last_packet",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_service_class",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_service_class",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_compression_generation_count",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_compression_generation_count",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_traffic_class",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_traffic_class",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_inet_checksum",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_inet_checksum",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_flow_uuid",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_flow_uuid",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_clear_flow_uuid",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_group_start",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_group_start",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_group_end",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_group_end",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_expire_time",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_expire_time",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_token",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_token",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_packetid",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_packetid",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_vlan_tag",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_vlan_tag",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_vlan_id",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_vlan_priority",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_wake_flag",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_keep_alive",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_keep_alive",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_truncated",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_data_length",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_buflet_count",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_next_buflet",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_segment_count",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_finalize",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_add_buflet",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_increment_use_count",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_decrement_use_count",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_aggregation_type",
    "type": "CPP"
  },
  {
    "name": "T _os_inet_checksum",
    "type": "CPP"
  },
  {
    "name": "T _os_copy_and_inet_checksum",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_get_data_offset",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_get_data_length",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_set_data_offset",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_set_data_length",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_get_object_address",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_get_object_limit",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_get_data_address",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_get_data_limit",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_trace_id",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_trace_id",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_trace_event",
    "type": "CPP"
  },
  {
    "name": "T _reboot",
    "type": "CPP"
  },
  {
    "name": "T _reboot_np",
    "type": "CPP"
  },
  {
    "name": "t __mach_continuous_time",
    "type": "CPP"
  },
  {
    "name": "T _renameat",
    "type": "CPP"
  },
  {
    "name": "t _internal_catch_exception_raise_state_identity",
    "type": "CPP"
  },
  {
    "name": "t _internal_catch_exception_raise_state",
    "type": "CPP"
  },
  {
    "name": "t _internal_catch_exception_raise",
    "type": "CPP"
  },
  {
    "name": "t _fprintf_stderr",
    "type": "CPP"
  },
  {
    "name": "T _guarded_open_dprotected_np",
    "type": "CPP"
  },
  {
    "name": "T _host_get_atm_diagnostic_flag",
    "type": "CPP"
  },
  {
    "name": "T _host_get_multiuser_config_flags",
    "type": "CPP"
  },
  {
    "name": "T _host_check_multiuser_mode",
    "type": "CPP"
  },
  {
    "name": "T _mach_error_type",
    "type": "CPP"
  },
  {
    "name": "T _mach_error",
    "type": "CPP"
  },
  {
    "name": "T _host_page_size",
    "type": "CPP"
  },
  {
    "name": "T __mach_fork_child",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_server_importance",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_priority_is_pthread_priority",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_priority_encode",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_priority_overide_qos",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_priority_qos",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_priority_relpri",
    "type": "CPP"
  },
  {
    "name": "T _mig_allocate",
    "type": "CPP"
  },
  {
    "name": "T _quota",
    "type": "CPP"
  },
  {
    "name": "T _setquota",
    "type": "CPP"
  },
  {
    "name": "T _panic_init",
    "type": "CPP"
  },
  {
    "name": "T _panic",
    "type": "CPP"
  },
  {
    "name": "T _port_obj_init",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_signal_all",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_signal_thread",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_wait_signal",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_timedwait_signal",
    "type": "CPP"
  },
  {
    "name": "T _msg_rpc",
    "type": "CPP"
  },
  {
    "name": "T _msg_send",
    "type": "CPP"
  },
  {
    "name": "T _msg_receive",
    "type": "CPP"
  },
  {
    "name": "T _task_self_",
    "type": "CPP"
  },
  {
    "name": "T _host_self",
    "type": "CPP"
  },
  {
    "name": "T __mach_vsnprintf",
    "type": "CPP"
  },
  {
    "name": "T __mach_snprintf",
    "type": "CPP"
  },
  {
    "name": "T _pselect$DARWIN_EXTSN$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _mach_task_self",
    "type": "CPP"
  },
  {
    "name": "T _mach_right_recv_construct",
    "type": "CPP"
  },
  {
    "name": "T _mach_right_recv_destruct",
    "type": "CPP"
  },
  {
    "name": "T _mach_right_send_create",
    "type": "CPP"
  },
  {
    "name": "T _mach_right_send_retain",
    "type": "CPP"
  },
  {
    "name": "T _mach_right_send_once_create",
    "type": "CPP"
  },
  {
    "name": "T _mach_right_send_once_consume",
    "type": "CPP"
  },
  {
    "name": "T _os_proc_available_memory",
    "type": "CPP"
  },
  {
    "name": "T _proc_listallpids",
    "type": "CPP"
  },
  {
    "name": "T _proc_listpgrppids",
    "type": "CPP"
  },
  {
    "name": "T _proc_listchildpids",
    "type": "CPP"
  },
  {
    "name": "T _proc_listcoalitions",
    "type": "CPP"
  },
  {
    "name": "T _proc_setthread_cpupercent",
    "type": "CPP"
  },
  {
    "name": "T _proc_pidfdinfo",
    "type": "CPP"
  },
  {
    "name": "T _proc_pidfileportinfo",
    "type": "CPP"
  },
  {
    "name": "T _proc_piddynkqueueinfo",
    "type": "CPP"
  },
  {
    "name": "T _proc_udata_info",
    "type": "CPP"
  },
  {
    "name": "T _proc_regionfilename",
    "type": "CPP"
  },
  {
    "name": "T _proc_kmsgbuf",
    "type": "CPP"
  },
  {
    "name": "T _proc_pidpath_audittoken",
    "type": "CPP"
  },
  {
    "name": "T _proc_current_thread_schedinfo",
    "type": "CPP"
  },
  {
    "name": "T _proc_libversion",
    "type": "CPP"
  },
  {
    "name": "T _proc_get_dirty",
    "type": "CPP"
  },
  {
    "name": "T _proc_clear_dirty",
    "type": "CPP"
  },
  {
    "name": "T _proc_terminate",
    "type": "CPP"
  },
  {
    "name": "T _proc_resume_cpumon",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_cpumon_params_fatal",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_wakemon_params",
    "type": "CPP"
  },
  {
    "name": "T _proc_get_wakemon_params",
    "type": "CPP"
  },
  {
    "name": "T _proc_list_uptrs",
    "type": "CPP"
  },
  {
    "name": "T _proc_list_dynkqueueids",
    "type": "CPP"
  },
  {
    "name": "T _proc_setcpu_percentage",
    "type": "CPP"
  },
  {
    "name": "T _proc_reset_footprint_interval",
    "type": "CPP"
  },
  {
    "name": "T _proc_clear_cpulimits",
    "type": "CPP"
  },
  {
    "name": "T _proc_donate_importance_boost",
    "type": "CPP"
  },
  {
    "name": "T _proc_clear_vmpressure",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_owner_vmpressure",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_delayidlesleep",
    "type": "CPP"
  },
  {
    "name": "T _proc_clear_delayidlesleep",
    "type": "CPP"
  },
  {
    "name": "T _proc_disable_apptype",
    "type": "CPP"
  },
  {
    "name": "T _proc_enable_apptype",
    "type": "CPP"
  },
  {
    "name": "T _proc_suppress",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_no_smt",
    "type": "CPP"
  },
  {
    "name": "T _proc_setthread_no_smt",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_csm",
    "type": "CPP"
  },
  {
    "name": "T _proc_setthread_csm",
    "type": "CPP"
  },
  {
    "name": "T __getprivatesystemidentifier",
    "type": "CPP"
  },
  {
    "name": "T __register_gethostuuid_callback",
    "type": "CPP"
  },
  {
    "name": "T _mach_boottime_usec",
    "type": "CPP"
  },
  {
    "name": "T _mach_task_is_self",
    "type": "CPP"
  },
  {
    "name": "T _open$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _openat$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _mach_eventlink_signal",
    "type": "CPP"
  },
  {
    "name": "T _mach_eventlink_wait_until",
    "type": "CPP"
  },
  {
    "name": "T _mach_eventlink_signal_wait_until",
    "type": "CPP"
  },
  {
    "name": "T _futimens",
    "type": "CPP"
  },
  {
    "name": "t _prepare_times_array_and_attrs",
    "type": "CPP"
  },
  {
    "name": "T _utimensat",
    "type": "CPP"
  },
  {
    "name": "T _thread_set_policy",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_register_pointer_values",
    "type": "CPP"
  },
  {
    "name": "T _renameatx_np",
    "type": "CPP"
  },
  {
    "name": "T _renamex_np",
    "type": "CPP"
  },
  {
    "name": "T _rename_ext",
    "type": "CPP"
  },
  {
    "name": "T _log_data_as_kernel",
    "type": "CPP"
  },
  {
    "name": "t ___posix_spawnattr_init",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getflags",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getsigdefault",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getpgroup",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getsigmask",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getbinpref_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getarchpref_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getpcontrol_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getprocesstype_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setpgroup",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setarchpref_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setpcontrol_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setprocesstype_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_subsystem_root_path_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_platform_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_disable_ptr_auth_a_keys_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_alt_rosetta_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_add_fileportdup2_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_addchdir_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_addfchdir_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setcpumonitor",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getcpumonitor",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_threadlimit_ext",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_importancewatch_port_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_registered_ports_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_ptrauth_task_port_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setcoalition_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_qos_clamp_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_get_qos_clamp_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_darwin_role_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_get_darwin_role_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_persona_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_persona_uid_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_persona_gid_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_persona_groups_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_max_addr_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setnosmt_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_csm_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_uid_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_gid_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_groups_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_login_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_portlimits_ext",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_filedesclimit_ext",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_jetsam_ttr_np",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_create",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_set_pid",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_capture_with_config",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_get_stackshot_buffer",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_get_stackshot_size",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_set_size_hint",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_set_delta_timestamp",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_set_pagetable_mask",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_dealloc_buffer",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_dealloc",
    "type": "CPP"
  },
  {
    "name": "T ___darwin_check_fd_set_overflow",
    "type": "CPP"
  },
  {
    "name": "T _terminate_with_payload",
    "type": "CPP"
  },
  {
    "name": "T _system_get_sfi_window",
    "type": "CPP"
  },
  {
    "name": "T _sfi_get_class_offtime",
    "type": "CPP"
  },
  {
    "name": "T _sfi_process_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _sfi_process_get_flags",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_create_extended",
    "type": "CPP"
  },
  {
    "name": "t _os_channel_info2attr",
    "type": "CPP"
  },
  {
    "name": "t _os_channel_init_ring",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_create",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_get_fd",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_read_attr",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_write_attr",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_read_nexus_extension_info",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_sync",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_destroy",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_is_defunct",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_ring_id",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_tx_ring",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_rx_ring",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_pending",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_ring_sync_time",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_ring_notify_time",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_available_slot_count",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_advance_slot",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_get_next_slot",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_set_slot_properties",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_slot_get_packet",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_get_stats_region",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_get_advisory_region",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_flow_admissible",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_attr_create",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_attr_clone",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_attr_set_key",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_attr_destroy",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_attr_set",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_attr_get",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_attr_get_key",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_packet_alloc",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_packet_free",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_slot_attach_packet",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_slot_detach_packet",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_packet_pool_purge",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_get_next_event_handle",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_event_free",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_get_interface_advisory",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_configure_interface_advisory",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_buflet_alloc",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_buflet_free",
    "type": "CPP"
  },
  {
    "name": "T _sem_destroy",
    "type": "CPP"
  },
  {
    "name": "T _sem_getvalue",
    "type": "CPP"
  },
  {
    "name": "T _sem_init",
    "type": "CPP"
  },
  {
    "name": "T _pid_shutdown_networking",
    "type": "CPP"
  },
  {
    "name": "T _coalition_create",
    "type": "CPP"
  },
  {
    "name": "T _coalition_terminate",
    "type": "CPP"
  },
  {
    "name": "T _coalition_reap",
    "type": "CPP"
  },
  {
    "name": "T _coalition_info_resource_usage",
    "type": "CPP"
  },
  {
    "name": "T _coalition_info_set_name",
    "type": "CPP"
  },
  {
    "name": "T _coalition_info_set_efficiency",
    "type": "CPP"
  },
  {
    "name": "T _coalition_ledger_set_logical_writes_limit",
    "type": "CPP"
  },
  {
    "name": "T _fs_snapshot_create",
    "type": "CPP"
  },
  {
    "name": "T _fs_snapshot_delete",
    "type": "CPP"
  },
  {
    "name": "T _fs_snapshot_rename",
    "type": "CPP"
  },
  {
    "name": "T _fs_snapshot_revert",
    "type": "CPP"
  },
  {
    "name": "T _fs_snapshot_root",
    "type": "CPP"
  },
  {
    "name": "T _fs_snapshot_mount",
    "type": "CPP"
  },
  {
    "name": "T _debug_syscall_reject",
    "type": "CPP"
  },
  {
    "name": "T _pselect",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_using_continuous_time",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_timestamp",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_timestamp_from_absolute",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_timestamp_from_continuous",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_signpost",
    "type": "CPP"
  },
  {
    "name": "T _pselect$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_attr_create",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_attr_clone",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_attr_set",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_attr_get",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_attr_destroy",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_create",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_get_fd",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_register_provider",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_deregister_provider",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_alloc_provider_instance",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_free_provider_instance",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_bind_provider_instance",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_unbind_provider_instance",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_read_provider_attr",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_destroy",
    "type": "CPP"
  },
  {
    "name": "T ___os_nexus_ifattach",
    "type": "CPP"
  },
  {
    "name": "T ___os_nexus_ifdetach",
    "type": "CPP"
  },
  {
    "name": "T ___os_nexus_flow_add",
    "type": "CPP"
  },
  {
    "name": "T ___os_nexus_flow_del",
    "type": "CPP"
  },
  {
    "name": "T ___os_nexus_get_llink_info",
    "type": "CPP"
  },
  {
    "name": "T _sigsuspend",
    "type": "CPP"
  },
  {
    "name": "T _openat",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_get_flags_from_port",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_notify",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_notify_simple",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_clear",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_free",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_set_start",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_set_deadline",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_set_finish",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_set_complexity",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_get_start",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_get_deadline",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_get_finish",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_get_complexity",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_start",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_update",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_finish",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_destroy",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_join",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_join_port",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_leave",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_copy_port",
    "type": "CPP"
  },
  {
    "name": "T _os_cpu_copy_in_cksum",
    "type": "CPP"
  },
  {
    "name": "T _os_cpu_in_cksum",
    "type": "CPP"
  },
  {
    "name": "T _os_cpu_in_cksum_mbuf",
    "type": "CPP"
  },
  {
    "name": "T _proc_listpidspath",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_event_get_next_event",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_event_get_event_data",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_names",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_rename",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_allocate_name",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_peek",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_set_mscount",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_set_seqno",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_allocate_qos",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_allocate_full",
    "type": "CPP"
  },
  {
    "name": "T _task_set_port_space",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_get_srights",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_space_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_space_basic_info",
    "type": "CPP"
  },
  {
    "name": "T _mig_dealloc_special_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _mach_sync_ipc_link_monitoring_start",
    "type": "CPP"
  },
  {
    "name": "T _mach_sync_ipc_link_monitoring_stop",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_dnrequest_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_kernel_object",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_kobject",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_kobject_description",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_unguard",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_guard_with_flags",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_swap_guard",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_is_connection_for_service",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_get_service_port_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_assert_attributes",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_remap",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_remap_new",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_read",
    "type": "CPP"
  },
  {
    "name": "T _vm_remap_new",
    "type": "CPP"
  },
  {
    "name": "T _getaudit",
    "type": "CPP"
  },
  {
    "name": "T _setaudit",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_alloc",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_palloc",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_dealloc",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_getpath",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_pidinfo",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_find",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_find_by_type",
    "type": "CPP"
  },
  {
    "name": "T _clock_set_time",
    "type": "CPP"
  },
  {
    "name": "T _clock_set_attributes",
    "type": "CPP"
  },
  {
    "name": "T _clock_alarm_reply",
    "type": "CPP"
  },
  {
    "name": "T _clock_get_attributes",
    "type": "CPP"
  },
  {
    "name": "T _clock_alarm",
    "type": "CPP"
  },
  {
    "name": "T _exception_raise",
    "type": "CPP"
  },
  {
    "name": "T _exception_raise_state",
    "type": "CPP"
  },
  {
    "name": "T _exception_raise_state_identity",
    "type": "CPP"
  },
  {
    "name": "T _exc_server_routine",
    "type": "CPP"
  },
  {
    "name": "t __Xexception_raise",
    "type": "CPP"
  },
  {
    "name": "t __Xexception_raise_state",
    "type": "CPP"
  },
  {
    "name": "t __Xexception_raise_state_identity",
    "type": "CPP"
  },
  {
    "name": "T _exc_server",
    "type": "CPP"
  },
  {
    "name": "T _host_get_boot_info",
    "type": "CPP"
  },
  {
    "name": "T _host_reboot",
    "type": "CPP"
  },
  {
    "name": "T _host_priv_statistics",
    "type": "CPP"
  },
  {
    "name": "T _host_default_memory_manager",
    "type": "CPP"
  },
  {
    "name": "T _vm_wire",
    "type": "CPP"
  },
  {
    "name": "T _thread_wire",
    "type": "CPP"
  },
  {
    "name": "T _vm_allocate_cpm",
    "type": "CPP"
  },
  {
    "name": "T _host_processors",
    "type": "CPP"
  },
  {
    "name": "T _host_get_clock_control",
    "type": "CPP"
  },
  {
    "name": "T _kmod_create",
    "type": "CPP"
  },
  {
    "name": "T _kmod_destroy",
    "type": "CPP"
  },
  {
    "name": "T _kmod_control",
    "type": "CPP"
  },
  {
    "name": "T _host_set_special_port",
    "type": "CPP"
  },
  {
    "name": "T _host_set_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _host_get_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _host_swap_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_wire",
    "type": "CPP"
  },
  {
    "name": "T _host_processor_sets",
    "type": "CPP"
  },
  {
    "name": "T _host_processor_set_priv",
    "type": "CPP"
  },
  {
    "name": "T _host_set_UNDServer",
    "type": "CPP"
  },
  {
    "name": "T _host_get_UNDServer",
    "type": "CPP"
  },
  {
    "name": "T _kext_request",
    "type": "CPP"
  },
  {
    "name": "T _host_security_create_task_token",
    "type": "CPP"
  },
  {
    "name": "T _host_security_set_task_token",
    "type": "CPP"
  },
  {
    "name": "T _lock_acquire",
    "type": "CPP"
  },
  {
    "name": "T _lock_release",
    "type": "CPP"
  },
  {
    "name": "T _lock_try",
    "type": "CPP"
  },
  {
    "name": "T _lock_make_stable",
    "type": "CPP"
  },
  {
    "name": "T _lock_handoff",
    "type": "CPP"
  },
  {
    "name": "T _lock_handoff_accept",
    "type": "CPP"
  },
  {
    "name": "T _host_kernel_version",
    "type": "CPP"
  },
  {
    "name": "T __host_page_size",
    "type": "CPP"
  },
  {
    "name": "T _mach_memory_object_memory_entry",
    "type": "CPP"
  },
  {
    "name": "T _host_processor_info",
    "type": "CPP"
  },
  {
    "name": "T _kmod_get_info",
    "type": "CPP"
  },
  {
    "name": "T _host_virtual_physical_table_info",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_default",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_create",
    "type": "CPP"
  },
  {
    "name": "T _mach_memory_object_memory_entry_64",
    "type": "CPP"
  },
  {
    "name": "T _host_lockgroup_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_zone_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_zone_force_gc",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_host_create_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _host_register_mach_voucher_attr_manager",
    "type": "CPP"
  },
  {
    "name": "T _host_register_well_known_mach_voucher_attr_manager",
    "type": "CPP"
  },
  {
    "name": "T _host_set_atm_diagnostic_flag",
    "type": "CPP"
  },
  {
    "name": "T _mach_memory_info",
    "type": "CPP"
  },
  {
    "name": "T _host_set_multiuser_config_flags",
    "type": "CPP"
  },
  {
    "name": "T _mach_zone_info_for_zone",
    "type": "CPP"
  },
  {
    "name": "T _mach_zone_info_for_largest_zone",
    "type": "CPP"
  },
  {
    "name": "T _mach_zone_get_zlog_zones",
    "type": "CPP"
  },
  {
    "name": "T _mach_zone_get_btlog_records",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_names",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_rename",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_allocate_name",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_allocate",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_destroy",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_deallocate",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_mod_refs",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_peek",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_set_mscount",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_move_member",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_insert_right",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_set_seqno",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_allocate_qos",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_allocate_full",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_task_set_port_space",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_get_srights",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_space_info",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_dnrequest_info",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_kernel_object",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_insert_member",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_extract_member",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_kobject",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_construct",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_destruct",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_guard",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_unguard",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_space_basic_info",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_special_reply_port_reset_link",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_guard_with_flags",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_swap_guard",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_kobject_description",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_is_connection_for_service",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_get_service_port_info",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_assert_attributes",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_allocate",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_deallocate",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_protect",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_inherit",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_read",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_read_list",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_write",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_msync",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_behavior_set",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_machine_attribute",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_remap",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_page_query",
    "type": "CPP"
  },
  {
    "name": "T _mach_make_memory_entry",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_purgable_control",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_page_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_page_range_query",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_remap_new",
    "type": "CPP"
  },
  {
    "name": "T _mach_notify_port_deleted",
    "type": "CPP"
  },
  {
    "name": "T _mach_notify_port_destroyed",
    "type": "CPP"
  },
  {
    "name": "T _mach_notify_no_senders",
    "type": "CPP"
  },
  {
    "name": "T _mach_notify_send_once",
    "type": "CPP"
  },
  {
    "name": "T _mach_notify_dead_name",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_statistics",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_destroy",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_max_priority",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_policy_enable",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_policy_disable",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_tasks",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_threads",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_policy_control",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_stack_usage",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_info",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_tasks_with_flavor",
    "type": "CPP"
  },
  {
    "name": "T _processor_start",
    "type": "CPP"
  },
  {
    "name": "T _processor_exit",
    "type": "CPP"
  },
  {
    "name": "T _processor_info",
    "type": "CPP"
  },
  {
    "name": "T _processor_control",
    "type": "CPP"
  },
  {
    "name": "T _processor_assign",
    "type": "CPP"
  },
  {
    "name": "T _processor_get_assignment",
    "type": "CPP"
  },
  {
    "name": "T _netname_check_in",
    "type": "CPP"
  },
  {
    "name": "T _netname_look_up",
    "type": "CPP"
  },
  {
    "name": "T _netname_check_out",
    "type": "CPP"
  },
  {
    "name": "T _netname_version",
    "type": "CPP"
  },
  {
    "name": "T _task_create",
    "type": "CPP"
  },
  {
    "name": "T _task_terminate",
    "type": "CPP"
  },
  {
    "name": "T _task_suspend",
    "type": "CPP"
  },
  {
    "name": "T _task_resume",
    "type": "CPP"
  },
  {
    "name": "T _thread_create",
    "type": "CPP"
  },
  {
    "name": "T _thread_create_running",
    "type": "CPP"
  },
  {
    "name": "T _task_swap_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _lock_set_create",
    "type": "CPP"
  },
  {
    "name": "T _lock_set_destroy",
    "type": "CPP"
  },
  {
    "name": "T _task_policy_get",
    "type": "CPP"
  },
  {
    "name": "T _task_sample",
    "type": "CPP"
  },
  {
    "name": "T _task_policy",
    "type": "CPP"
  },
  {
    "name": "T _task_set_emulation",
    "type": "CPP"
  },
  {
    "name": "T _task_get_emulation_vector",
    "type": "CPP"
  },
  {
    "name": "T _task_set_emulation_vector",
    "type": "CPP"
  },
  {
    "name": "T _task_set_ras_pc",
    "type": "CPP"
  },
  {
    "name": "T _task_zone_info",
    "type": "CPP"
  },
  {
    "name": "T _task_assign",
    "type": "CPP"
  },
  {
    "name": "T _task_assign_default",
    "type": "CPP"
  },
  {
    "name": "T _task_get_assignment",
    "type": "CPP"
  },
  {
    "name": "T _task_set_policy",
    "type": "CPP"
  },
  {
    "name": "T _task_get_state",
    "type": "CPP"
  },
  {
    "name": "T _task_set_state",
    "type": "CPP"
  },
  {
    "name": "T _task_set_phys_footprint_limit",
    "type": "CPP"
  },
  {
    "name": "T _task_suspend2",
    "type": "CPP"
  },
  {
    "name": "T _task_resume2",
    "type": "CPP"
  },
  {
    "name": "T _task_purgable_info",
    "type": "CPP"
  },
  {
    "name": "T _task_get_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _task_set_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _task_swap_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _task_generate_corpse",
    "type": "CPP"
  },
  {
    "name": "T _task_map_corpse_info",
    "type": "CPP"
  },
  {
    "name": "T _task_register_dyld_image_infos",
    "type": "CPP"
  },
  {
    "name": "T _task_unregister_dyld_image_infos",
    "type": "CPP"
  },
  {
    "name": "T _task_get_dyld_image_infos",
    "type": "CPP"
  },
  {
    "name": "T _task_register_dyld_shared_cache_image_info",
    "type": "CPP"
  },
  {
    "name": "T _task_register_dyld_set_dyld_state",
    "type": "CPP"
  },
  {
    "name": "T _task_register_dyld_get_process_state",
    "type": "CPP"
  },
  {
    "name": "T _task_map_corpse_info_64",
    "type": "CPP"
  },
  {
    "name": "T _task_inspect",
    "type": "CPP"
  },
  {
    "name": "T _task_get_exc_guard_behavior",
    "type": "CPP"
  },
  {
    "name": "T _task_set_exc_guard_behavior",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_task_is_self",
    "type": "CPP"
  },
  {
    "name": "T _task_dyld_process_info_notify_register",
    "type": "CPP"
  },
  {
    "name": "T _task_create_identity_token",
    "type": "CPP"
  },
  {
    "name": "T _task_identity_token_get_task_port",
    "type": "CPP"
  },
  {
    "name": "T _task_dyld_process_info_notify_deregister",
    "type": "CPP"
  },
  {
    "name": "T _task_get_exception_ports_info",
    "type": "CPP"
  },
  {
    "name": "T _task_test_sync_upcall",
    "type": "CPP"
  },
  {
    "name": "T _task_set_corpse_forking_behavior",
    "type": "CPP"
  },
  {
    "name": "T _task_test_async_upcall_propagation",
    "type": "CPP"
  },
  {
    "name": "T _thread_terminate",
    "type": "CPP"
  },
  {
    "name": "T _act_get_state",
    "type": "CPP"
  },
  {
    "name": "T _act_set_state",
    "type": "CPP"
  },
  {
    "name": "T _thread_set_state",
    "type": "CPP"
  },
  {
    "name": "T _thread_suspend",
    "type": "CPP"
  },
  {
    "name": "T _thread_resume",
    "type": "CPP"
  },
  {
    "name": "T _thread_abort",
    "type": "CPP"
  },
  {
    "name": "T _thread_abort_safely",
    "type": "CPP"
  },
  {
    "name": "T _thread_depress_abort",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_special_port",
    "type": "CPP"
  },
  {
    "name": "T _thread_set_special_port",
    "type": "CPP"
  },
  {
    "name": "T _thread_swap_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _thread_sample",
    "type": "CPP"
  },
  {
    "name": "T _etap_trace_thread",
    "type": "CPP"
  },
  {
    "name": "T _thread_assign",
    "type": "CPP"
  },
  {
    "name": "T _thread_assign_default",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_assignment",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_thread_set_policy",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _thread_set_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _thread_swap_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _thread_convert_thread_state",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_exception_ports_info",
    "type": "CPP"
  },
  {
    "name": "T _vm_inherit",
    "type": "CPP"
  },
  {
    "name": "T _vm_read_list",
    "type": "CPP"
  },
  {
    "name": "T _vm_write",
    "type": "CPP"
  },
  {
    "name": "T _vm_read_overwrite",
    "type": "CPP"
  },
  {
    "name": "T _vm_msync",
    "type": "CPP"
  },
  {
    "name": "T _vm_behavior_set",
    "type": "CPP"
  },
  {
    "name": "T _vm_machine_attribute",
    "type": "CPP"
  },
  {
    "name": "T _vm_map_page_query",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_vm_purgable_control",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_vm_remap_new",
    "type": "CPP"
  },
  {
    "name": "T _mach_memory_entry_purgable_control",
    "type": "CPP"
  },
  {
    "name": "T _mach_memory_entry_access_tracking",
    "type": "CPP"
  },
  {
    "name": "T _mach_memory_entry_ownership",
    "type": "CPP"
  },
  {
    "name": "T _mach_eventlink_create",
    "type": "CPP"
  },
  {
    "name": "T _mach_eventlink_destroy",
    "type": "CPP"
  },
  {
    "name": "T _mach_eventlink_associate",
    "type": "CPP"
  },
  {
    "name": "T _mach_eventlink_disassociate",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_voucher_extract_attr_recipe",
    "type": "CPP"
  },
  {
    "name": "T _mach_voucher_extract_all_attr_recipes",
    "type": "CPP"
  },
  {
    "name": "T _mach_voucher_debug_info",
    "type": "CPP"
  },
  {
    "name": "T _____old_semwait_signal_nocancel",
    "type": "CPP"
  },
  {
    "name": "T _____sigwait_nocancel",
    "type": "CPP"
  },
  {
    "name": "T ___abort_with_payload",
    "type": "CPP"
  },
  {
    "name": "T _accept$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _accessx_np",
    "type": "CPP"
  },
  {
    "name": "T _aio_suspend$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___channel_get_info",
    "type": "CPP"
  },
  {
    "name": "T ___channel_get_opt",
    "type": "CPP"
  },
  {
    "name": "T ___channel_open",
    "type": "CPP"
  },
  {
    "name": "T ___channel_set_opt",
    "type": "CPP"
  },
  {
    "name": "T ___channel_sync",
    "type": "CPP"
  },
  {
    "name": "T ___coalition",
    "type": "CPP"
  },
  {
    "name": "T ___coalition_info",
    "type": "CPP"
  },
  {
    "name": "T ___coalition_ledger",
    "type": "CPP"
  },
  {
    "name": "T ___copyfile",
    "type": "CPP"
  },
  {
    "name": "T ___debug_syscall_reject",
    "type": "CPP"
  },
  {
    "name": "T ___execve",
    "type": "CPP"
  },
  {
    "name": "T ___fs_snapshot",
    "type": "CPP"
  },
  {
    "name": "T ___fstat_extended",
    "type": "CPP"
  },
  {
    "name": "T _fsync$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _getsgroups_np",
    "type": "CPP"
  },
  {
    "name": "T _getwgroups_np",
    "type": "CPP"
  },
  {
    "name": "T ___guarded_open_dprotected_np",
    "type": "CPP"
  },
  {
    "name": "T ___identitysvc",
    "type": "CPP"
  },
  {
    "name": "T ___kdebug_trace",
    "type": "CPP"
  },
  {
    "name": "T ___kdebug_trace_string",
    "type": "CPP"
  },
  {
    "name": "T ___log_data",
    "type": "CPP"
  },
  {
    "name": "T ___lstat_extended",
    "type": "CPP"
  },
  {
    "name": "T ___sandbox_me",
    "type": "CPP"
  },
  {
    "name": "T ___mac_get_fd",
    "type": "CPP"
  },
  {
    "name": "T ___mac_get_file",
    "type": "CPP"
  },
  {
    "name": "T ___mac_get_link",
    "type": "CPP"
  },
  {
    "name": "T ___mac_get_mount",
    "type": "CPP"
  },
  {
    "name": "T ___mac_get_pid",
    "type": "CPP"
  },
  {
    "name": "T ___mac_get_proc",
    "type": "CPP"
  },
  {
    "name": "T ___mac_getfsstat",
    "type": "CPP"
  },
  {
    "name": "T ___sandbox_mm",
    "type": "CPP"
  },
  {
    "name": "T ___mac_set_fd",
    "type": "CPP"
  },
  {
    "name": "T ___mac_set_file",
    "type": "CPP"
  },
  {
    "name": "T ___mac_set_link",
    "type": "CPP"
  },
  {
    "name": "T ___mach_bridge_remote_time",
    "type": "CPP"
  },
  {
    "name": "T ___mach_eventlink_signal",
    "type": "CPP"
  },
  {
    "name": "T ___mach_eventlink_signal_wait_until",
    "type": "CPP"
  },
  {
    "name": "T ___mach_eventlink_wait_until",
    "type": "CPP"
  },
  {
    "name": "T ___memorystatus_available_memory",
    "type": "CPP"
  },
  {
    "name": "T ___microstackshot",
    "type": "CPP"
  },
  {
    "name": "T ___mkdir_extended",
    "type": "CPP"
  },
  {
    "name": "T ___mkfifo_extended",
    "type": "CPP"
  },
  {
    "name": "T _msgctl",
    "type": "CPP"
  },
  {
    "name": "T _msgrcv$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _msgsnd$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _msgsys",
    "type": "CPP"
  },
  {
    "name": "T _msync$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___nexus_create",
    "type": "CPP"
  },
  {
    "name": "T ___nexus_deregister",
    "type": "CPP"
  },
  {
    "name": "T ___nexus_destroy",
    "type": "CPP"
  },
  {
    "name": "T ___nexus_get_opt",
    "type": "CPP"
  },
  {
    "name": "T ___nexus_open",
    "type": "CPP"
  },
  {
    "name": "T ___nexus_register",
    "type": "CPP"
  },
  {
    "name": "T ___nexus_set_opt",
    "type": "CPP"
  },
  {
    "name": "T ___old_semwait_signal",
    "type": "CPP"
  },
  {
    "name": "T _poll$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _pread$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _preadv$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___proc_info_extended_id",
    "type": "CPP"
  },
  {
    "name": "T ___pselect_nocancel",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_downgrade",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_longrdlock",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_unlock2",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_upgrade",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_yieldwrlock",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_markcancel",
    "type": "CPP"
  },
  {
    "name": "T _pwrite$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _pwritev$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _readv$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___reboot",
    "type": "CPP"
  },
  {
    "name": "T _recvmsg$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___renameat",
    "type": "CPP"
  },
  {
    "name": "T ___renameatx_np",
    "type": "CPP"
  },
  {
    "name": "T _sem_wait$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _semctl",
    "type": "CPP"
  },
  {
    "name": "T _semsys",
    "type": "CPP"
  },
  {
    "name": "T _setregid",
    "type": "CPP"
  },
  {
    "name": "T _setreuid",
    "type": "CPP"
  },
  {
    "name": "T _setsgroups_np",
    "type": "CPP"
  },
  {
    "name": "T ___settid_with_pid",
    "type": "CPP"
  },
  {
    "name": "T ___settimeofday",
    "type": "CPP"
  },
  {
    "name": "T _setwgroups_np",
    "type": "CPP"
  },
  {
    "name": "T ___sfi_pidctl",
    "type": "CPP"
  },
  {
    "name": "T ___shared_region_check_np",
    "type": "CPP"
  },
  {
    "name": "T ___shared_region_map_and_slide_2_np",
    "type": "CPP"
  },
  {
    "name": "T ___shared_region_map_and_slide_np",
    "type": "CPP"
  },
  {
    "name": "T _shmctl",
    "type": "CPP"
  },
  {
    "name": "T _shmsys",
    "type": "CPP"
  },
  {
    "name": "T ___sigsuspend",
    "type": "CPP"
  },
  {
    "name": "T ___stack_snapshot_with_config",
    "type": "CPP"
  },
  {
    "name": "T ___stat_extended",
    "type": "CPP"
  },
  {
    "name": "T ___telemetry",
    "type": "CPP"
  },
  {
    "name": "T ___thread_selfusage",
    "type": "CPP"
  },
  {
    "name": "T ___ulock_wait2",
    "type": "CPP"
  },
  {
    "name": "T ___umask_extended",
    "type": "CPP"
  },
  {
    "name": "T ___vfork",
    "type": "CPP"
  },
  {
    "name": "T _waitid$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _writev$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _acct",
    "type": "CPP"
  },
  {
    "name": "T _adjtime",
    "type": "CPP"
  },
  {
    "name": "T _aio_cancel",
    "type": "CPP"
  },
  {
    "name": "T _aio_error",
    "type": "CPP"
  },
  {
    "name": "T _aio_fsync",
    "type": "CPP"
  },
  {
    "name": "T _aio_read",
    "type": "CPP"
  },
  {
    "name": "T _aio_return",
    "type": "CPP"
  },
  {
    "name": "T _aio_suspend",
    "type": "CPP"
  },
  {
    "name": "T _aio_write",
    "type": "CPP"
  },
  {
    "name": "T _audit",
    "type": "CPP"
  },
  {
    "name": "T _auditctl",
    "type": "CPP"
  },
  {
    "name": "T _chroot",
    "type": "CPP"
  },
  {
    "name": "T _disconnectx",
    "type": "CPP"
  },
  {
    "name": "T _faccessat",
    "type": "CPP"
  },
  {
    "name": "T _fchdir",
    "type": "CPP"
  },
  {
    "name": "T _fchmodat",
    "type": "CPP"
  },
  {
    "name": "T _fchownat",
    "type": "CPP"
  },
  {
    "name": "T _fclonefileat",
    "type": "CPP"
  },
  {
    "name": "T _fdatasync",
    "type": "CPP"
  },
  {
    "name": "T _fhopen",
    "type": "CPP"
  },
  {
    "name": "T _fmount",
    "type": "CPP"
  },
  {
    "name": "T _fpathconf",
    "type": "CPP"
  },
  {
    "name": "T _freadlink",
    "type": "CPP"
  },
  {
    "name": "/usr/lib/system/libsystem_platform.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "T _os_unfair_lock_lock_with_options",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_lock_unlock",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_recursive_lock_lock_with_options",
    "type": "CPP"
  },
  {
    "name": "T __platform_strcmp",
    "type": "CPP"
  },
  {
    "name": "t __platform_memmove$VARIANT$Haswell",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_recursive_lock_unlock",
    "type": "CPP"
  },
  {
    "name": "T __platform_strncmp",
    "type": "CPP"
  },
  {
    "name": "t __platform_memset$VARIANT$Haswell",
    "type": "CPP"
  },
  {
    "name": "t __platform_bzero$VARIANT$Haswell",
    "type": "CPP"
  },
  {
    "name": "T __platform_strlen",
    "type": "CPP"
  },
  {
    "name": "T __os_once",
    "type": "CPP"
  },
  {
    "name": "t __os_once_callout",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_lock_lock",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_lock_assert_owner",
    "type": "CPP"
  },
  {
    "name": "T _ffs",
    "type": "CPP"
  },
  {
    "name": "T _ffsll",
    "type": "CPP"
  },
  {
    "name": "T _fls",
    "type": "CPP"
  },
  {
    "name": "T _flsll",
    "type": "CPP"
  },
  {
    "name": "T __os_alloc_once",
    "type": "CPP"
  },
  {
    "name": "t __os_alloc",
    "type": "CPP"
  },
  {
    "name": "T __platform_strcpy",
    "type": "CPP"
  },
  {
    "name": "t __platform_memchr$VARIANT$Base",
    "type": "CPP"
  },
  {
    "name": "t __platform_memchr$VARIANT$Haswell",
    "type": "CPP"
  },
  {
    "name": "T __platform_memchr",
    "type": "CPP"
  },
  {
    "name": "t __platform_strchr$VARIANT$Base",
    "type": "CPP"
  },
  {
    "name": "t __platform_strchr$VARIANT$Haswell",
    "type": "CPP"
  },
  {
    "name": "T __platform_strchr",
    "type": "CPP"
  },
  {
    "name": "t __platform_memcmp$VARIANT$Base",
    "type": "CPP"
  },
  {
    "name": "T __platform_memcmp",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicAnd32Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicOr32Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicXor32Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicAnd32OrigBarrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicOr32OrigBarrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicXor32OrigBarrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicCompareAndSwapIntBarrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicCompareAndSwapPtrBarrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicAdd32Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicIncrement32Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicDecrement32Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicAdd64Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicIncrement64Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicDecrement64Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicTestAndSetBarrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicTestAndClearBarrier",
    "type": "CPP"
  },
  {
    "name": "T _OSMemoryBarrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicEnqueue",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicDequeue",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicFifoEnqueue$VARIANT$PFZ",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicFifoDequeue$VARIANT$PFZ",
    "type": "CPP"
  },
  {
    "name": "T __platform_strnlen",
    "type": "CPP"
  },
  {
    "name": "T __platform_strlcpy",
    "type": "CPP"
  },
  {
    "name": "T __platform_memset_pattern16",
    "type": "CPP"
  },
  {
    "name": "t __platform_memset_pattern4$VARIANT$Haswell",
    "type": "CPP"
  },
  {
    "name": "t __platform_memset_pattern8$VARIANT$Haswell",
    "type": "CPP"
  },
  {
    "name": "t __platform_memset_pattern16$VARIANT$Haswell",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_lock_assert_not_owner",
    "type": "CPP"
  },
  {
    "name": "t __os_unfair_lock_lock_slow",
    "type": "CPP"
  },
  {
    "name": "t __os_unfair_lock_unlock_slow",
    "type": "CPP"
  },
  {
    "name": "T __platform_strstr",
    "type": "CPP"
  },
  {
    "name": "T __platform_strncpy",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_lock_trylock",
    "type": "CPP"
  },
  {
    "name": "T __os_nospin_lock_lock",
    "type": "CPP"
  },
  {
    "name": "T __os_nospin_lock_unlock",
    "type": "CPP"
  },
  {
    "name": "T __os_nospin_lock_trylock",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_recursive_lock_tryunlock4objc",
    "type": "CPP"
  },
  {
    "name": "T _sigsetjmp",
    "type": "CPP"
  },
  {
    "name": "T _setjmp",
    "type": "CPP"
  },
  {
    "name": "T _siglongjmp",
    "type": "CPP"
  },
  {
    "name": "T _longjmp",
    "type": "CPP"
  },
  {
    "name": "T __platform_strlcat",
    "type": "CPP"
  },
  {
    "name": "T __platform_memset_pattern8",
    "type": "CPP"
  },
  {
    "name": "T __simple_salloc",
    "type": "CPP"
  },
  {
    "name": "T __simple_vsprintf",
    "type": "CPP"
  },
  {
    "name": "T __simple_sprintf",
    "type": "CPP"
  },
  {
    "name": "t _hex",
    "type": "CPP"
  },
  {
    "name": "T __simple_string",
    "type": "CPP"
  },
  {
    "name": "T __simple_sfree",
    "type": "CPP"
  },
  {
    "name": "t _dec",
    "type": "CPP"
  },
  {
    "name": "T __simple_asl_log",
    "type": "CPP"
  },
  {
    "name": "T __simple_asl_log_prog",
    "type": "CPP"
  },
  {
    "name": "T __simple_asl_msg_new",
    "type": "CPP"
  },
  {
    "name": "T __simple_asl_msg_set",
    "type": "CPP"
  },
  {
    "name": "T __simple_esprintf",
    "type": "CPP"
  },
  {
    "name": "t __simple_asl_escape_key",
    "type": "CPP"
  },
  {
    "name": "t __simple_asl_escape_val",
    "type": "CPP"
  },
  {
    "name": "T __simple_sappend",
    "type": "CPP"
  },
  {
    "name": "T __simple_sresize",
    "type": "CPP"
  },
  {
    "name": "T __simple_asl_send",
    "type": "CPP"
  },
  {
    "name": "t __simple_asl_connect_once",
    "type": "CPP"
  },
  {
    "name": "t _udec",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_recursive_lock_trylock",
    "type": "CPP"
  },
  {
    "name": "T __platform_memset_pattern4",
    "type": "CPP"
  },
  {
    "name": "T __os_semaphore_create",
    "type": "CPP"
  },
  {
    "name": "T __os_semaphore_dispose",
    "type": "CPP"
  },
  {
    "name": "T ___platform_sigaction",
    "type": "CPP"
  },
  {
    "name": "t __os_once_gate_wait",
    "type": "CPP"
  },
  {
    "name": "t __os_once_gate_broadcast",
    "type": "CPP"
  },
  {
    "name": "t __os_nospin_lock_lock_slow",
    "type": "CPP"
  },
  {
    "name": "t __os_nospin_lock_unlock_slow",
    "type": "CPP"
  },
  {
    "name": "T ___libplatform_init",
    "type": "CPP"
  },
  {
    "name": "t ___pfz_setup",
    "type": "CPP"
  },
  {
    "name": "T __simple_getenv",
    "type": "CPP"
  },
  {
    "name": "T __platform_bzero",
    "type": "CPP"
  },
  {
    "name": "t __simple_asl_init",
    "type": "CPP"
  },
  {
    "name": "t __os_alloc_slow",
    "type": "CPP"
  },
  {
    "name": "t __simple_asl_init_context",
    "type": "CPP"
  },
  {
    "name": "T __platform_memmove",
    "type": "CPP"
  },
  {
    "name": "T __platform_memset",
    "type": "CPP"
  },
  {
    "name": "T _spin_lock",
    "type": "CPP"
  },
  {
    "name": "T _spin_unlock",
    "type": "CPP"
  },
  {
    "name": "T __sigtramp",
    "type": "CPP"
  },
  {
    "name": "T _os_lock_lock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_handoff_lock",
    "type": "CPP"
  },
  {
    "name": "T _os_lock_unlock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_handoff_unlock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_handoff_lock_slow",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_unfair_lock",
    "type": "CPP"
  },
  {
    "name": "t __platform_memset$VARIANT$Ivybridge",
    "type": "CPP"
  },
  {
    "name": "t __platform_bzero$VARIANT$Ivybridge",
    "type": "CPP"
  },
  {
    "name": "t __platform_memmove$VARIANT$Ivybridge",
    "type": "CPP"
  },
  {
    "name": "T _memmove_sse_np",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_spin_lock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_spin_unlock",
    "type": "CPP"
  },
  {
    "name": "T __os_semaphore_signal",
    "type": "CPP"
  },
  {
    "name": "T __os_semaphore_wait",
    "type": "CPP"
  },
  {
    "name": "T __OSSpinLockLockSlow",
    "type": "CPP"
  },
  {
    "name": "T _OSSpinLockTry",
    "type": "CPP"
  },
  {
    "name": "t __platform_memset_pattern4$VARIANT$Rosetta",
    "type": "CPP"
  },
  {
    "name": "t __platform_memset_pattern8$VARIANT$Rosetta",
    "type": "CPP"
  },
  {
    "name": "t __platform_memset_pattern4$VARIANT$Ivybridge",
    "type": "CPP"
  },
  {
    "name": "t __platform_memset_pattern8$VARIANT$Ivybridge",
    "type": "CPP"
  },
  {
    "name": "t __platform_memset_pattern16$VARIANT$Rosetta",
    "type": "CPP"
  },
  {
    "name": "T _os_lock_trylock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_handoff_trylock",
    "type": "CPP"
  },
  {
    "name": "T __setjmp",
    "type": "CPP"
  },
  {
    "name": "T __longjmp",
    "type": "CPP"
  },
  {
    "name": "t __sigunaltstack",
    "type": "CPP"
  },
  {
    "name": "T __simple_vesprintf",
    "type": "CPP"
  },
  {
    "name": "t ___simple_bprintf",
    "type": "CPP"
  },
  {
    "name": "T __simple_esappend",
    "type": "CPP"
  },
  {
    "name": "T ___no_overread_variant_setup",
    "type": "CPP"
  },
  {
    "name": "T _platform_task_attach",
    "type": "CPP"
  },
  {
    "name": "t __platform_task_deallocate",
    "type": "CPP"
  },
  {
    "name": "T _platform_task_detach",
    "type": "CPP"
  },
  {
    "name": "T _platform_task_is_64_bit",
    "type": "CPP"
  },
  {
    "name": "T _platform_task_suspend_threads",
    "type": "CPP"
  },
  {
    "name": "T _platform_task_resume_threads",
    "type": "CPP"
  },
  {
    "name": "T _platform_task_perform",
    "type": "CPP"
  },
  {
    "name": "T _platform_task_update_threads",
    "type": "CPP"
  },
  {
    "name": "T _platform_task_copy_next_thread",
    "type": "CPP"
  },
  {
    "name": "T _platform_thread_get_unique_id",
    "type": "CPP"
  },
  {
    "name": "T _platform_thread_release",
    "type": "CPP"
  },
  {
    "name": "T _platform_thread_abort_safely",
    "type": "CPP"
  },
  {
    "name": "T _platform_thread_suspend",
    "type": "CPP"
  },
  {
    "name": "T _platform_thread_resume",
    "type": "CPP"
  },
  {
    "name": "T _platform_thread_info",
    "type": "CPP"
  },
  {
    "name": "T _platform_thread_get_state",
    "type": "CPP"
  },
  {
    "name": "T _platform_thread_set_state",
    "type": "CPP"
  },
  {
    "name": "T _platform_thread_perform",
    "type": "CPP"
  },
  {
    "name": "T _platform_thread_get_pthread",
    "type": "CPP"
  },
  {
    "name": "t __platform_thread_deallocate",
    "type": "CPP"
  },
  {
    "name": "T _os_log_simple_now",
    "type": "CPP"
  },
  {
    "name": "T _os_log_simple_type_from_asl",
    "type": "CPP"
  },
  {
    "name": "T ___os_log_simple_offset",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_send",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_shim",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_parse_type",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_parse_subsystem",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_parse_message",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_parse_timestamp",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_parse_identifiers",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_parse",
    "type": "CPP"
  },
  {
    "name": "T __simple_memcmp",
    "type": "CPP"
  },
  {
    "name": "T __simple_asl_get_fd",
    "type": "CPP"
  },
  {
    "name": "T __simple_vdprintf",
    "type": "CPP"
  },
  {
    "name": "t __flush_reset",
    "type": "CPP"
  },
  {
    "name": "t __flush",
    "type": "CPP"
  },
  {
    "name": "T __simple_dprintf",
    "type": "CPP"
  },
  {
    "name": "t __enlarge",
    "type": "CPP"
  },
  {
    "name": "T __simple_put",
    "type": "CPP"
  },
  {
    "name": "T __simple_putline",
    "type": "CPP"
  },
  {
    "name": "t _oct",
    "type": "CPP"
  },
  {
    "name": "t _ydec",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicFifoEnqueue$VARIANT$UnfairLock",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicFifoDequeue$VARIANT$UnfairLock",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicFifoEnqueue",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicFifoDequeue",
    "type": "CPP"
  },
  {
    "name": "t _preempt",
    "type": "CPP"
  },
  {
    "name": "t _backoff",
    "type": "CPP"
  },
  {
    "name": "T _sys_cache_control",
    "type": "CPP"
  },
  {
    "name": "T _sys_icache_invalidate",
    "type": "CPP"
  },
  {
    "name": "T _sys_dcache_flush",
    "type": "CPP"
  },
  {
    "name": "t __OSSpinLockLockYield",
    "type": "CPP"
  },
  {
    "name": "T _spin_lock_try",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_spin_trylock",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_lock_lock_no_tsd",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_lock_unlock_no_tsd",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_recursive_lock_owned",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_recursive_lock_unlock_forked_child",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_unfair_trylock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_unfair_unlock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_nospin_lock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_nospin_trylock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_nospin_unlock",
    "type": "CPP"
  },
  {
    "name": "T ___os_once_reset",
    "type": "CPP"
  },
  {
    "name": "T _longjmperror",
    "type": "CPP"
  },
  {
    "name": "t _memset",
    "type": "CPP"
  },
  {
    "name": "T __platform_memccpy",
    "type": "CPP"
  },
  {
    "name": "t __platform_memmove$VARIANT$Rosetta",
    "type": "CPP"
  },
  {
    "name": "t __platform_memcmp$VARIANT$NoOverread",
    "type": "CPP"
  },
  {
    "name": "t __platform_memset$VARIANT$Rosetta",
    "type": "CPP"
  },
  {
    "name": "t __platform_bzero$VARIANT$Rosetta",
    "type": "CPP"
  },
  {
    "name": "/usr/lib/system/libsystem_pthread.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "T __pthread_exit_if_canceled",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_init",
    "type": "CPP"
  },
  {
    "name": "t __pthread_strtoul",
    "type": "CPP"
  },
  {
    "name": "t __pthread_main_thread_init",
    "type": "CPP"
  },
  {
    "name": "t __pthread_bsdthread_init",
    "type": "CPP"
  },
  {
    "name": "t __pthread_set_main_qos",
    "type": "CPP"
  },
  {
    "name": "t __pthread_key_global_init",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_global_init",
    "type": "CPP"
  },
  {
    "name": "T _pthread_key_init_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_key_create",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutex_lock",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_lock_init_slow",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_check_init_slow",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_firstfit_lock_slow",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutex_unlock",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_unlock_init_slow",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_firstfit_unlock_slow",
    "type": "CPP"
  },
  {
    "name": "T _qos_class_main",
    "type": "CPP"
  },
  {
    "name": "T _start_wqthread",
    "type": "CPP"
  },
  {
    "name": "T _thread_start",
    "type": "CPP"
  },
  {
    "name": "T _thread_chkstk_darwin",
    "type": "CPP"
  },
  {
    "name": "T _pthread_getspecific",
    "type": "CPP"
  },
  {
    "name": "T _pthread_setspecific",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_broadcast",
    "type": "CPP"
  },
  {
    "name": "t __pthread_cond_check_init_slow",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutex_destroy",
    "type": "CPP"
  },
  {
    "name": "T _pthread_atfork",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutex_init",
    "type": "CPP"
  },
  {
    "name": "T _pthread_self",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mach_thread_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_init",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_settype",
    "type": "CPP"
  },
  {
    "name": "T _pthread_main_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_equal",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_init",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setscope",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setdetachstate",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getschedparam",
    "type": "CPP"
  },
  {
    "name": "T _pthread_main_thread_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_destroy",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_supported",
    "type": "CPP"
  },
  {
    "name": "T _pthread_workqueue_setup",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getschedpolicy",
    "type": "CPP"
  },
  {
    "name": "T __pthread_qos_class_encode",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_set_event_manager_priority",
    "type": "CPP"
  },
  {
    "name": "T _pthread_once",
    "type": "CPP"
  },
  {
    "name": "t ___pthread_once_handler",
    "type": "CPP"
  },
  {
    "name": "T _pthread_qos_max_parallelism",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_addthreads",
    "type": "CPP"
  },
  {
    "name": "T __pthread_wqthread",
    "type": "CPP"
  },
  {
    "name": "t __pthread_wqthread_setup",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlock_rdlock",
    "type": "CPP"
  },
  {
    "name": "t __pthread_rwlock_lock_slow",
    "type": "CPP"
  },
  {
    "name": "t __pthread_rwlock_check_init_slow",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlock_unlock",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlock_wrlock",
    "type": "CPP"
  },
  {
    "name": "T _pthread_create",
    "type": "CPP"
  },
  {
    "name": "t __pthread_markcancel_if_canceled",
    "type": "CPP"
  },
  {
    "name": "T _pthread_set_qos_class_self_np",
    "type": "CPP"
  },
  {
    "name": "T __pthread_set_properties_self",
    "type": "CPP"
  },
  {
    "name": "T _pthread_setname_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_wait",
    "type": "CPP"
  },
  {
    "name": "T _pthread_testcancel",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_droplock",
    "type": "CPP"
  },
  {
    "name": "T _sched_yield",
    "type": "CPP"
  },
  {
    "name": "t __pthread_cond_updateval",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_timedwait",
    "type": "CPP"
  },
  {
    "name": "T _pthread_get_stackaddr_np",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_override_start_direct",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_firstfit_lock_wait",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_firstfit_wake",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_override_reset",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_should_narrow",
    "type": "CPP"
  },
  {
    "name": "T _pthread_get_stacksize_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutex_trylock",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlock_init",
    "type": "CPP"
  },
  {
    "name": "T __pthread_qos_class_decode",
    "type": "CPP"
  },
  {
    "name": "t __pthread_wqthread_exit",
    "type": "CPP"
  },
  {
    "name": "T _pthread_exit",
    "type": "CPP"
  },
  {
    "name": "t __pthread_setcancelstate_exit",
    "type": "CPP"
  },
  {
    "name": "t __pthread_tsd_cleanup",
    "type": "CPP"
  },
  {
    "name": "t __pthread_terminate_invoke",
    "type": "CPP"
  },
  {
    "name": "t __pthread_terminate",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_init",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getstacksize",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setstacksize",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_destroy",
    "type": "CPP"
  },
  {
    "name": "T _pthread_getschedparam",
    "type": "CPP"
  },
  {
    "name": "T _pthread_setschedparam",
    "type": "CPP"
  },
  {
    "name": "T __pthread_clear_qos_tsd",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_destroy",
    "type": "CPP"
  },
  {
    "name": "T _qos_class_self",
    "type": "CPP"
  },
  {
    "name": "T _pthread_stack_frame_decode_np",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_override_start_direct_check_owner",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlock_trywrlock",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_set_qos_class_np",
    "type": "CPP"
  },
  {
    "name": "t __pthread_rwlock_lock_wait",
    "type": "CPP"
  },
  {
    "name": "t __pthread_rwlock_unlock_slow",
    "type": "CPP"
  },
  {
    "name": "t __pthread_rwlock_unlock_drop",
    "type": "CPP"
  },
  {
    "name": "T __pthread_qos_override_end_direct",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_timedwait_relative_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlock_destroy",
    "type": "CPP"
  },
  {
    "name": "T _pthread_getname_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setschedpolicy",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workloop_create",
    "type": "CPP"
  },
  {
    "name": "T _pthread_threadid_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_get_qos_class_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_override_qos_class_start_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_signal",
    "type": "CPP"
  },
  {
    "name": "T _pthread_setcanceltype",
    "type": "CPP"
  },
  {
    "name": "T _pthread_set_fixedpriority_self",
    "type": "CPP"
  },
  {
    "name": "T _pthread_sigmask",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setschedparam",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_get_qos_class_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_override_qos_class_end_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_detach",
    "type": "CPP"
  },
  {
    "name": "T __pthread_atfork_prepare_handlers",
    "type": "CPP"
  },
  {
    "name": "T _pthread_is_threaded_np",
    "type": "CPP"
  },
  {
    "name": "T __pthread_atfork_prepare",
    "type": "CPP"
  },
  {
    "name": "T __pthread_atfork_parent",
    "type": "CPP"
  },
  {
    "name": "T __pthread_atfork_parent_handlers",
    "type": "CPP"
  },
  {
    "name": "t __pthread_current_stack_address",
    "type": "CPP"
  },
  {
    "name": "T _pthread_key_delete",
    "type": "CPP"
  },
  {
    "name": "T __pthread_qos_override_start_direct",
    "type": "CPP"
  },
  {
    "name": "T _pthread_join",
    "type": "CPP"
  },
  {
    "name": "t __pthread_joiner_prepost_wake",
    "type": "CPP"
  },
  {
    "name": "t __pthread_joiner_wake",
    "type": "CPP"
  },
  {
    "name": "t __pthread_deallocate",
    "type": "CPP"
  },
  {
    "name": "T _pthread_kill",
    "type": "CPP"
  },
  {
    "name": "T _pthread_set_timeshare_self",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_init_with_workloop",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setinheritsched",
    "type": "CPP"
  },
  {
    "name": "T _pthread_fchdir_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlockattr_init",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlockattr_destroy",
    "type": "CPP"
  },
  {
    "name": "T _sched_get_priority_max",
    "type": "CPP"
  },
  {
    "name": "T __pthread_set_self",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_init",
    "type": "CPP"
  },
  {
    "name": "T __pthread_qos_class_encode_workqueue",
    "type": "CPP"
  },
  {
    "name": "T __pthread_override_qos_class_start_direct",
    "type": "CPP"
  },
  {
    "name": "T __pthread_start",
    "type": "CPP"
  },
  {
    "name": "T __pthread_override_qos_class_end_direct",
    "type": "CPP"
  },
  {
    "name": "t __pthread_cond_wait",
    "type": "CPP"
  },
  {
    "name": "t __pthread_exit",
    "type": "CPP"
  },
  {
    "name": "T _pthread_join$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_setpshared",
    "type": "CPP"
  },
  {
    "name": "T __pthread_fork_prepare",
    "type": "CPP"
  },
  {
    "name": "T __pthread_fork_parent",
    "type": "CPP"
  },
  {
    "name": "T _sigwait",
    "type": "CPP"
  },
  {
    "name": "T _pthread_workqueue_setdispatch_np",
    "type": "CPP"
  },
  {
    "name": "T _sched_get_priority_min",
    "type": "CPP"
  },
  {
    "name": "T _pthread_setcancelstate",
    "type": "CPP"
  },
  {
    "name": "T _pthread_set_qos_class_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getdetachstate",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getinheritsched",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getscope",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getstackaddr",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setstackaddr",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getstack",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setstack",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setguardsize",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getguardsize",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setcpupercent_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_from_mach_thread_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cpu_number_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_jit_write_protect_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_jit_write_protect_supported_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_jit_write_with_callback_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_jit_write_freeze_callbacks_np",
    "type": "CPP"
  },
  {
    "name": "t __pthread_create",
    "type": "CPP"
  },
  {
    "name": "T _pthread_create_from_mach_thread",
    "type": "CPP"
  },
  {
    "name": "T _pthread_create_suspended_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_install_workgroup_functions_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_create_with_workgroup_np",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_workqueue_setkill",
    "type": "CPP"
  },
  {
    "name": "T _pthread_self_is_exiting_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_getconcurrency",
    "type": "CPP"
  },
  {
    "name": "T _pthread_setconcurrency",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_late_init",
    "type": "CPP"
  },
  {
    "name": "t __pthread_main_thread_postfork_init",
    "type": "CPP"
  },
  {
    "name": "T __pthread_yield_to_enqueuer_4dispatch",
    "type": "CPP"
  },
  {
    "name": "T _pthread_current_stack_contains_np",
    "type": "CPP"
  },
  {
    "name": "t __pthread_wqthread_legacy_worker_wrap",
    "type": "CPP"
  },
  {
    "name": "T _pthread_workqueue_setdispatchoffset_np",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_init_with_kevent",
    "type": "CPP"
  },
  {
    "name": "T _pthread_workqueue_addthreads_np",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_add_cooperativethreads",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workloop_destroy",
    "type": "CPP"
  },
  {
    "name": "T _pthread_introspection_hook_install",
    "type": "CPP"
  },
  {
    "name": "t __pthread_introspection_hook_callout_thread_create",
    "type": "CPP"
  },
  {
    "name": "t __pthread_introspection_hook_callout_thread_terminate",
    "type": "CPP"
  },
  {
    "name": "t __pthread_introspection_hook_callout_thread_start",
    "type": "CPP"
  },
  {
    "name": "t __pthread_introspection_hook_callout_thread_destroy",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cancel",
    "type": "CPP"
  },
  {
    "name": "t __pthread_join",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_wait$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_timedwait$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _sigwait$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _pthread_condattr_init",
    "type": "CPP"
  },
  {
    "name": "T _pthread_condattr_destroy",
    "type": "CPP"
  },
  {
    "name": "T _pthread_condattr_getpshared",
    "type": "CPP"
  },
  {
    "name": "T _pthread_condattr_setpshared",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_signal_thread_np",
    "type": "CPP"
  },
  {
    "name": "t __pthread_ulock_cond_wait_complete",
    "type": "CPP"
  },
  {
    "name": "t __pthread_ulock_cond_cleanup",
    "type": "CPP"
  },
  {
    "name": "t __pthread_psynch_cond_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _mutex_seq_atomic_cmpxchgv_relaxed",
    "type": "CPP"
  },
  {
    "name": "t _mutex_seq_atomic_cmpxchgv_acquire",
    "type": "CPP"
  },
  {
    "name": "t _mutex_seq_atomic_cmpxchgv_release",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutex_getprioceiling",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutex_setprioceiling",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_getprioceiling",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_getprotocol",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_getpolicy_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_gettype",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_getpshared",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_setprioceiling",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_setprotocol",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_setpolicy_np",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_fairshare_lock_slow",
    "type": "CPP"
  },
  {
    "name": "/usr/lib/system/libsystem_symptoms.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_trace.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libunwind.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libxpc.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": " node:internal/main/run_main_module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 0,
    "tm": 36055,
    "source": {
      "script": 91,
      "start": 0,
      "end": 632,
      "positions": "C0O0C4O632",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/main/run_main_module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 1,
    "tm": 36163,
    "source": {
      "script": 91,
      "start": 0,
      "end": 632,
      "positions": "C0O56C3O56C8O25C13O102C15O102C19O137C22O560C25O560C30O598C35O605C40O622C47O626C51O606C57O631",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "nativeModuleRequire node:internal/bootstrap/loaders:332:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 2,
    "tm": 36563,
    "source": {
      "script": 9,
      "start": 10315,
      "end": 10658,
      "positions": "C0O10324C2O10335C4O10331C9O10351C13O10372C14O10392C19O10405C24O10409C29O10409C35O10550C37O10560C47O10608C60O10566C65O10560C66O10629C71O10629C75O10656",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "compileForInternalLoader node:internal/bootstrap/loaders:299:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 3,
    "tm": 37733,
    "source": {
      "script": 9,
      "start": 9528,
      "end": 10089,
      "positions": "C0O9546C6O9561C12O9590C16O9598C17O9626C22O9634C23O9647C30O9690C37O9721C45O9690C63O9820C70O9820C75O9855C89O9890C103O9847C108O9928C109O9940C124O9970C126O9983C141O10003C152O10022C160O10054C165O10003C170O10077C174O10085",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/bootstrap/pre_execution:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 4,
    "tm": 38283,
    "source": {
      "script": 92,
      "start": 0,
      "end": 15986,
      "positions": "C0O0C4O15986",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/bootstrap/pre_execution:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 5,
    "tm": 39824,
    "source": {
      "script": 92,
      "start": 0,
      "end": 15986,
      "positions": "C0O0C190O25C196O43C202O67C208O78C214O93C220O122C226O204C232O204C237O162C243O180C249O269C255O269C260O241C266O317C272O317C277O306C283O378C289O378C294O404C299O344C305O427C311O427C315O427C317O15589C324O15610C330O15632C336O15654C342O15677C348O15694C354O15712C360O15742C366O15768C372O15791C378O15821C384O15853C390O15875C396O15902C402O15925C408O15945C414O15968C420O15604C425O15985",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/options:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 6,
    "tm": 40205,
    "source": {
      "script": 93,
      "start": 0,
      "end": 1820,
      "positions": "C0O0C4O1820",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/options:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 7,
    "tm": 40398,
    "source": {
      "script": 93,
      "start": 0,
      "end": 1820,
      "positions": "C0O0C54O97C57O97C62O25C68O62C74O156C75O156C77O167C78O167C80O183C81O183C83O199C84O199C86O1614C93O1756C99O1774C105O1798C148O1629C153O1819",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "internalBinding node:internal/bootstrap/loaders:164:45",
    "type": "JS",
    "kind": "Unopt",
    "func": 8,
    "tm": 40521,
    "source": {
      "script": 9,
      "start": 5115,
      "end": 5353,
      "positions": "C0O5140C7O5150C11O5164C15O5201C25O5228C30O5226C37O5262C48O5281C56O5317C61O5262C66O5338C68O5349",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "prepareMainThreadExecution node:internal/bootstrap/pre_execution:22:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 9,
    "tm": 40876,
    "source": {
      "script": 92,
      "start": 491,
      "end": 2380,
      "positions": "C10O634C15O634C18O736C21O736C25O771C28O771C31O800C34O800C37O820C40O820C43O845C46O845C49O1048C52O1060C57O1064C63O1088C66O1096C77O1152C82O1156C87O1125C91O1117C95O1183C98O1183C101O1275C104O1275C107O1381C110O1381C113O1403C116O1403C119O1462C122O1462C125O1785C128O1785C131O1860C134O1860C137O2057C140O2057C143O2084C146O2084C149O2118C152O2118C155O2146C158O2146C161O2166C164O2166C167O2191C170O2191C173O2235C179O2235C184O2277C189O2295C195O2277C199O2325C202O2325C205O2349C208O2349C212O2379",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "reconnectZeroFillToggle node:internal/buffer:1072:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 10,
    "tm": 41007,
    "source": {
      "script": 19,
      "start": 30717,
      "end": 30757,
      "positions": "C0O30724C5O30735C11O30733C18O30756",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "patchProcessObject node:internal/bootstrap/pre_execution:81:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 11,
    "tm": 44337,
    "source": {
      "script": 92,
      "start": 2409,
      "end": 4251,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getFastAPIs node:internal/process/per_thread:57:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 12,
    "tm": 44602,
    "source": {
      "script": 23,
      "start": 1229,
      "end": 2412,
      "positions": "C0O1229C24O1285C29O1285C34O1263C40O1500C50O1524C57O1500C62O1500C64O2232C74O2259C86O2232C91O2232C93O2367C100O2380C106O2392C112O2410",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "resolve node:path:1091:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 13,
    "tm": 46017,
    "source": {
      "script": 35,
      "start": 33782,
      "end": 34692,
      "positions": "C0O33782C3O33817C6O33848C8O33878C12O33885C16O33898C18O33892C25O33902C27O33946C28O33948C35O33959C42O33965C45O33965C49O33984C57O33984C62O34058C68O34065C73O34082C75O34107C87O34133C92O34155C99O34182C107O34221C109O34217C113O33921C118O33860C121O34437C126O34483C137O34452C143O34569C147O34599C152O34610C156O34625C157O34656C163O34663C174O34688",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "validateString node:internal/validators:117:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 14,
    "tm": 50583,
    "source": {
      "script": 17,
      "start": 3398,
      "end": 3507,
      "positions": "C0O3416C6O3451C22O3457C27O3451C29O3506",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:path:1082:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 15,
    "tm": 51378,
    "source": {
      "script": 35,
      "start": 33631,
      "end": 33650,
      "positions": "C0O33645C3O33645C8O33645C12O33650",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 16,
    "tm": 51438,
    "source": {
      "script": 90,
      "start": 3341,
      "end": 3425,
      "positions": "C0O3348C7O3362C12O3374C17O3397C22O3397C29O3384C35O3406C39O3423",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "normalizeString node:path:66:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 17,
    "tm": 52027,
    "source": {
      "script": 35,
      "start": 2161,
      "end": 4085,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isPosixPathSeparator node:path:56:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 18,
    "tm": 52156,
    "source": {
      "script": 35,
      "start": 1854,
      "end": 1902,
      "positions": "C0O1865C2O1881C4O1877C7O1900",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:129:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 19,
    "tm": 52286,
    "source": {
      "script": 92,
      "start": 4285,
      "end": 4510,
      "positions": "C16O4337C21O4337C26O4363C28O4380C36O4410C43O4473C49O4491C56O4380C62O4509",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getOptionValue node:internal/options:39:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 20,
    "tm": 52358,
    "source": {
      "script": 93,
      "start": 902,
      "end": 1145,
      "positions": "C0O935C3O935C7O980C15O980C22O1030C30O1052C38O1052C43O1039C47O1030C53O1067C55O1092C60O1098C61O1120C66O1120C74O1135C81O1143",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getCLIOptionsFromBinding node:internal/options:18:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 21,
    "tm": 52415,
    "source": {
      "script": 93,
      "start": 497,
      "end": 598,
      "positions": "C0O504C6O527C11O554C15O539C28O578C32O596",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupTraceCategoryState node:internal/bootstrap/pre_execution:221:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 22,
    "tm": 52804,
    "source": {
      "script": 92,
      "start": 6753,
      "end": 6980,
      "positions": "C0O6795C6O6795C11O6768C16O6867C22O6867C27O6838C32O6909C35O6934C40O6909C45O6979",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toggleTraceCategoryState node:internal/process/per_thread:385:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 23,
    "tm": 52885,
    "source": {
      "script": 23,
      "start": 11040,
      "end": 11337,
      "positions": "C0O11064C4O11093C10O11128C16O11159C21O11203C26O11204C33O11149C39O11228C44O11249C49O11249C55O11268C61O11300C66O11321C71O11321C76O11336",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupPerfHooks node:internal/bootstrap/pre_execution:227:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 24,
    "tm": 53007,
    "source": {
      "script": 92,
      "start": 7005,
      "end": 7125,
      "positions": "C0O7012C6O7012C11O7048C16O7049C20O7072C26O7072C31O7102C36O7103C41O7124",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "refreshTimeOrigin node:internal/perf/performance:178:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 25,
    "tm": 53165,
    "source": {
      "script": 70,
      "start": 3755,
      "end": 3912,
      "positions": "C0O3762C7O3783C10O3795C25O3879C28O3879C35O3762C41O3911",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "refreshTimeOrigin node:internal/perf/utils:25:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 26,
    "tm": 53650,
    "source": {
      "script": 41,
      "start": 525,
      "end": 563,
      "positions": "C0O532C5O545C11O543C18O562",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupInspectorHooks node:internal/bootstrap/pre_execution:232:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 27,
    "tm": 53795,
    "source": {
      "script": 92,
      "start": 7155,
      "end": 7708,
      "positions": "C0O7498C6O7502C11O7527C17O7592C23O7592C28O7562C33O7576C38O7638C44O7638C49O7666C54O7667C61O7707",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/inspector_async_hook:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 28,
    "tm": 53954,
    "source": {
      "script": 94,
      "start": 0,
      "end": 1972,
      "positions": "C0O0C4O1972",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/inspector_async_hook:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 29,
    "tm": 54223,
    "source": {
      "script": 94,
      "start": 0,
      "end": 1972,
      "positions": "C0O0C42O19C43O19C45O29C46O29C48O48C54O1930C61O1951C67O1961C73O1945C78O1971",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupWarningHandler node:internal/bootstrap/pre_execution:141:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 30,
    "tm": 54386,
    "source": {
      "script": 92,
      "start": 4540,
      "end": 4737,
      "positions": "C0O4575C6O4575C11O4559C16O4614C24O4618C33O4662C38O4666C45O4683C50O4698C53O4706C61O4706C68O4736",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "addListener node:events:486:58",
    "type": "JS",
    "kind": "Unopt",
    "func": 31,
    "tm": 54528,
    "source": {
      "script": 13,
      "start": 14192,
      "end": 14264,
      "positions": "C0O14213C14O14220C19O14262",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "_addListener node:events:418:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 32,
    "tm": 57499,
    "source": {
      "script": 13,
      "start": 11979,
      "end": 13994,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "checkListener node:events:127:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 33,
    "tm": 57601,
    "source": {
      "script": 13,
      "start": 3670,
      "end": 3726,
      "positions": "C0O3685C8O3685C14O3725",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:235:42",
    "type": "JS",
    "kind": "Unopt",
    "func": 34,
    "tm": 57658,
    "source": {
      "script": 17,
      "start": 7207,
      "end": 7323,
      "positions": "C0O7228C6O7265C22O7271C27O7265C29O7322",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "emit node:events:340:44",
    "type": "JS",
    "kind": "Unopt",
    "func": 35,
    "tm": 57822,
    "source": {
      "script": 13,
      "start": 9741,
      "end": 11955,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "startListeningIfSignal node:internal/process/signal:22:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 36,
    "tm": 57959,
    "source": {
      "script": 89,
      "start": 429,
      "end": 904,
      "positions": "C0O440C3O444C11O463C14O475C19O475C26O492C32O524C38O533C43O563C50O531C56O589C61O589C67O613C72O613C76O627C78O643C84O673C98O643C103O641C107O721C114O728C118O757C123O757C129O776C131O798C136O798C140O813C148O819C153O813C154O870C159O882C164O882C171O903",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isSignal node:internal/process/signal:17:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 37,
    "tm": 58155,
    "source": {
      "script": 89,
      "start": 255,
      "end": 334,
      "positions": "C0O267C8O303C13O310C17O318C18O332",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupDebugEnv node:internal/bootstrap/pre_execution:193:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 38,
    "tm": 58222,
    "source": {
      "script": 92,
      "start": 6003,
      "end": 6213,
      "positions": "C0O6010C6O6010C11O6043C19O6071C24O6075C29O6044C34O6090C42O6094C48O6138C54O6138C59O6175C64O6188C69O6189C74O6212",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeDebugEnv node:internal/util/debuglog:22:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 39,
    "tm": 58323,
    "source": {
      "script": 40,
      "start": 546,
      "end": 991,
      "positions": "C0O561C7O574C14O572C20O596C31O709C44O709C51O753C62O754C69O782C80O783C88O833C100O848C116O833C121O833C123O871C132O883C144O959C151O971C158O990",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getOptionValue node:internal/options:39:24",
    "type": "JS",
    "kind": "Baseline",
    "func": 20,
    "tm": 58831,
    "source": {
      "script": 93,
      "start": 902,
      "end": 1145,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isPosixPathSeparator node:path:56:30",
    "type": "JS",
    "kind": "Baseline",
    "func": 18,
    "tm": 58874,
    "source": {
      "script": 35,
      "start": 1854,
      "end": 1902,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "normalizeString node:path:66:25",
    "type": "JS",
    "kind": "Baseline",
    "func": 17,
    "tm": 58999,
    "source": {
      "script": 35,
      "start": 2161,
      "end": 4085,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:172:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 40,
    "tm": 59083,
    "source": {
      "script": 92,
      "start": 5567,
      "end": 5753,
      "positions": "C0O5574C8O5579C14O5619C15O5626C16O5660C22O5660C27O5641C32O5710C38O5743C43O5743C48O5752",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeReport node:internal/bootstrap/pre_execution:182:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 41,
    "tm": 59183,
    "source": {
      "script": 92,
      "start": 5780,
      "end": 5979,
      "positions": "C0O5780C8O5806C16O5806C21O5795C27O5844C42O5865C47O5937C55O5844C61O5978",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/process/report:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 42,
    "tm": 59399,
    "source": {
      "script": 95,
      "start": 0,
      "end": 2623,
      "positions": "C0O0C4O2623",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/process/report:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 43,
    "tm": 59693,
    "source": {
      "script": 95,
      "start": 0,
      "end": 2623,
      "positions": "C0O0C51O66C54O66C59O92C64O24C70O48C76O189C79O189C84O110C90O129C96O147C102O169C108O232C111O232C115O232C117O269C123O312C128O316C136O756C290O2572C297O2593C303O2613C309O2587C314O2622",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeReportSignalHandlers node:internal/bootstrap/pre_execution:201:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 44,
    "tm": 59934,
    "source": {
      "script": 92,
      "start": 6314,
      "end": 6410,
      "positions": "C0O6350C6O6350C11O6329C16O6389C20O6409",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "addSignalHandler node:internal/process/report:97:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 45,
    "tm": 60006,
    "source": {
      "script": 95,
      "start": 2222,
      "end": 2368,
      "positions": "C0O2232C5O2239C10O2239C16O2269C22O2304C27O2313C32O2313C38O2331C41O2339C49O2339C56O2367",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:207:46",
    "type": "JS",
    "kind": "Unopt",
    "func": 46,
    "tm": 60117,
    "source": {
      "script": 92,
      "start": 6457,
      "end": 6719,
      "positions": "C0O6457C8O6479C18O6479C23O6523C25O6540C26O6547C27O6551C35O6551C40O6581C45O6582C50O6642C58O6642C63O6620C69O6660C74O6668C79O6671C84O6668C91O6718",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:337:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 47,
    "tm": 60203,
    "source": {
      "script": 92,
      "start": 10471,
      "end": 11000,
      "positions": "C0O10478C3O10490C8O10494C14O10532C20O10532C25O10576C33O10599C38O10603C46O10576C52O10629C53O10639C57O10629C61O10720C64O10735C73O10793C76O10801C81O10805C90O10852C93O10867C102O10909C108O10909C113O10933C118O10934C124O10973C127O10988C132O10973C137O10999",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializePolicy node:internal/bootstrap/pre_execution:365:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 48,
    "tm": 60356,
    "source": {
      "script": 92,
      "start": 11299,
      "end": 13097,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeClusterIPC node:internal/bootstrap/pre_execution:356:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 49,
    "tm": 60480,
    "source": {
      "script": 92,
      "start": 11031,
      "end": 11272,
      "positions": "C0O11038C3O11050C10O11054C18O11069C23O11073C29O11111C35O11111C40O11143C45O11143C49O11232C52O11247C62O11271",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:460:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 50,
    "tm": 60542,
    "source": {
      "script": 92,
      "start": 14830,
      "end": 14979,
      "positions": "C0O14874C6O14874C11O14845C16O14925C21O14954C26O14978",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/source_map/source_map_cache:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 51,
    "tm": 60829,
    "source": {
      "script": 96,
      "start": 0,
      "end": 7654,
      "positions": "C0O0C4O7654",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/source_map/source_map_cache:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 52,
    "tm": 61596,
    "source": {
      "script": 96,
      "start": 0,
      "end": 7654,
      "positions": "C0O0C152O25C158O46C164O59C170O75C176O89C182O123C188O156C194O179C199O190C205O214C211O526C217O526C222O515C228O557C234O557C239O590C252O591C258O557C260O653C266O653C270O653C272O695C278O695C283O676C289O752C295O752C300O732C305O832C311O832C316O806C322O901C328O901C333O881C339O1137C341O1137C346O1137C348O1264C350O1264C355O1264C357O1325C363O1325C368O1287C374O1302C380O1317C386O1354C387O1354C389O1370C390O1370C392O7518C399O7539C405O7556C411O7580C417O7604C423O7627C429O7533C434O7653",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "debuglog node:internal/util/debuglog:71:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 53,
    "tm": 61797,
    "source": {
      "script": 40,
      "start": 2232,
      "end": 3279,
      "positions": "C0O2232C28O2357C32O2357C34O2789C35O2789C37O2811C41O2811C43O2899C48O3128C58O3149C63O3174C74O3128C79O3263C81O3277",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/util/iterable_weak_map:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 54,
    "tm": 62003,
    "source": {
      "script": 97,
      "start": 0,
      "end": 1958,
      "positions": "C0O0C4O1958",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/util/iterable_weak_map:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 55,
    "tm": 62232,
    "source": {
      "script": 97,
      "start": 0,
      "end": 1958,
      "positions": "C0O0C26O25C31O41C37O69C43O80C49O95C55O110C134O1392C168O1904C173O1875C177O1917C184O1938C190O1932C195O1957",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "<instance_members_initializer> node:internal/util/iterable_weak_map:17:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 56,
    "tm": 62262,
    "source": {
      "script": 97,
      "start": 399,
      "end": 516,
      "positions": "C3O410C10O410C27O441C34O441C48O479C62O479C74O516",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/helpers:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 57,
    "tm": 62639,
    "source": {
      "script": 98,
      "start": 0,
      "end": 6746,
      "positions": "C0O0C4O6746",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/helpers:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 58,
    "tm": 63301,
    "source": {
      "script": 98,
      "start": 0,
      "end": 6746,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SafeSet node:internal/per_context/primordials:364:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 59,
    "tm": 63528,
    "source": {
      "script": 6,
      "start": 10527,
      "end": 10544,
      "positions": "C3O10533C7O10539C11O10533C26O10543",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SafeMap node:internal/per_context/primordials:351:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 60,
    "tm": 64785,
    "source": {
      "script": 6,
      "start": 10200,
      "end": 10217,
      "positions": "C3O10206C7O10212C11O10206C26O10216",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "IterableWeakMap node:internal/util/iterable_weak_map:16:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 61,
    "tm": 64866,
    "source": {
      "script": 97,
      "start": 373,
      "end": 373,
      "positions": "C0O373C15O373",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SafeWeakMap node:internal/per_context/primordials:357:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 62,
    "tm": 64943,
    "source": {
      "script": 6,
      "start": 10371,
      "end": 10388,
      "positions": "C3O10377C7O10383C11O10377C26O10387",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SafeFinalizationRegistry node:internal/per_context/primordials:378:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 63,
    "tm": 65015,
    "source": {
      "script": 6,
      "start": 10977,
      "end": 11022,
      "positions": "C3O10997C7O11003C11O10997C26O11021",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeDeprecations node:internal/bootstrap/pre_execution:250:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 64,
    "tm": 65193,
    "source": {
      "script": 92,
      "start": 7934,
      "end": 10433,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeWASI node:internal/bootstrap/pre_execution:414:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 65,
    "tm": 65350,
    "source": {
      "script": 92,
      "start": 13122,
      "end": 13328,
      "positions": "C0O13154C6O13154C11O13137C16O13220C21O13224C29O13224C35O13239C37O13270C43O13270C47O13264C52O13327",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeCJSLoader node:internal/bootstrap/pre_execution:421:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 66,
    "tm": 65422,
    "source": {
      "script": 92,
      "start": 13358,
      "end": 13673,
      "positions": "C0O13383C6O13383C11O13425C16O13430C20O13450C26O13488C31O13495C36O13495C40O13591C51O13612C56O13648C60O13606C65O13672",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/loader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 67,
    "tm": 66519,
    "source": {
      "script": 99,
      "start": 0,
      "end": 40182,
      "positions": "C0O0C4O40182",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/loader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 68,
    "tm": 70237
  },
  {
    "name": " node:internal/modules/package_json_reader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 69,
    "tm": 70785,
    "source": {
      "script": 100,
      "start": 0,
      "end": 983,
      "positions": "C0O0C4O983",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/package_json_reader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 70,
    "tm": 70918,
    "source": {
      "script": 100,
      "start": 0,
      "end": 983,
      "positions": "C0O0C29O23C34O83C37O83C42O56C48O132C54O132C59O114C65O177C71O177C76O156C82O209C84O209C89O209C91O229C92O229C94O956C101O975C107O971C112O982",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/process/esm_loader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 71,
    "tm": 71192,
    "source": {
      "script": 101,
      "start": 0,
      "end": 2883,
      "positions": "C0O0C4O2883",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/process/esm_loader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 72,
    "tm": 71487,
    "source": {
      "script": 101,
      "start": 0,
      "end": 2883,
      "positions": "C0O0C44O25C50O111C56O111C61O137C66O67C72O167C78O167C83O153C89O258C95O258C100O217C106O323C112O323C117O305C123O381C129O381C134O358C140O413C144O448C148O749C152O789C156O1259C159O1259C164O1259C166O1277C168O1295C172O2528C176O2544C181O2882",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/loader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 73,
    "tm": 71908,
    "source": {
      "script": 102,
      "start": 0,
      "end": 11918,
      "positions": "C0O0C4O11918",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/loader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 74,
    "tm": 73118,
    "source": {
      "script": 102,
      "start": 0,
      "end": 11918,
      "positions": "C0O0C104O79C110O79C114O130C120O139C126O155C132O177C138O199C144O224C150O249C156O265C161O289C167O303C173O326C179O347C185O362C191O578C197O578C202O604C207O402C213O426C219O451C225O483C231O520C237O548C243O653C249O653C254O620C260O635C266O731C272O731C277O688C283O708C289O781C295O781C299O781C301O843C307O843C311O843C313O940C319O940C324O898C330O916C336O1005C342O1005C347O989C353O1067C359O1067C364O1051C370O1142C376O1142C381O1123C510O11868C517O11837C522O11887C524O11905C529O11917",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "<instance_members_initializer> node:internal/modules/esm/loader:59:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 75,
    "tm": 73185,
    "source": {
      "script": 102,
      "start": 1611,
      "end": 2404,
      "positions": "C3O1631C17O1786C28O1792C45O1966C56O1972C73O2065C80O2065C94O2183C104O2270C111O2270C125O2393C138O2404",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/module_map:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 76,
    "tm": 73555,
    "source": {
      "script": 103,
      "start": 0,
      "end": 955,
      "positions": "C0O0C4O955",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/module_map:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 77,
    "tm": 73696,
    "source": {
      "script": 103,
      "start": 0,
      "end": 955,
      "positions": "C0O0C17O33C20O33C24O33C26O87C31O125C34O125C39O158C52O159C58O125C60O236C63O236C68O262C73O211C79O297C82O297C87O278C97O407C141O927C143O942C148O954",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/module_job:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 78,
    "tm": 74007,
    "source": {
      "script": 104,
      "start": 0,
      "end": 7692,
      "positions": "C0O0C4O7692",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/module_job:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 79,
    "tm": 74824,
    "source": {
      "script": 104,
      "start": 0,
      "end": 7692,
      "positions": "C0O0C85O25C91O47C97O68C103O90C109O112C114O133C119O157C125O171C130O189C136O214C142O230C148O253C154O274C160O285C166O312C172O336C178O362C184O386C190O454C196O454C201O439C207O518C213O518C218O495C224O580C230O580C235O554C241O644C247O644C251O644C253O696C256O696C258O728C260O728C262O769C263O769C265O799C269O799C271O917C275O917C314O7646C321O7615C326O7664C328O7679C333O7691",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/resolve:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 80,
    "tm": 76033,
    "source": {
      "script": 105,
      "start": 0,
      "end": 36468,
      "positions": "C0O0C4O36468",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/resolve:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 81,
    "tm": 79839
  },
  {
    "name": " node:internal/modules/esm/get_format:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 82,
    "tm": 80494,
    "source": {
      "script": 106,
      "start": 0,
      "end": 2630,
      "positions": "C0O0C4O2630",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/get_format:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 83,
    "tm": 80778,
    "source": {
      "script": 106,
      "start": 0,
      "end": 2630,
      "positions": "C0O0C53O24C58O40C63O56C69O89C75O147C78O147C83O135C89O191C92O191C97O172C102O253C105O253C109O253C111O342C114O342C118O342C120O429C123O429C127O429C129O503C132O503C137O484C143O575C146O575C151O552C157O557C163O639C166O639C171O665C176O608C182O701C186O701C188O821C192O821C194O956C198O987C207O1051C213O1015C217O1062C221O1093C230O1157C236O1121C240O1193C242O1206C252O1230C260O1646C268O2284C276O1193C281O1193C283O2538C290O2559C296O2579C302O2601C308O2553C313O2629",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/load:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 84,
    "tm": 81031,
    "source": {
      "script": 107,
      "start": 0,
      "end": 643,
      "positions": "C0O0C4O643",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/load:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 85,
    "tm": 81137,
    "source": {
      "script": 107,
      "start": 0,
      "end": 643,
      "positions": "C0O0C19O44C22O44C27O23C33O117C36O117C41O96C47O185C50O185C55O169C61O606C68O627C74O621C79O642",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/get_source:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 86,
    "tm": 81299,
    "source": {
      "script": 108,
      "start": 0,
      "end": 1349,
      "positions": "C0O0C4O1349",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/get_source:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 87,
    "tm": 81460,
    "source": {
      "script": 108,
      "start": 0,
      "end": 1349,
      "positions": "C0O0C37O25C43O48C49O112C52O112C57O93C62O207C65O207C74O251C81O207C83O316C86O316C91O305C97O347C100O347C105O378C110O404C113O404C118O396C124O486C127O486C132O512C137O439C143O458C149O545C153O542C155O581C159O581C161O1304C163O1329C168O1348",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/promises:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 88,
    "tm": 82312,
    "source": {
      "script": 109,
      "start": 0,
      "end": 22879,
      "positions": "C0O0C4O22879",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/promises:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 89,
    "tm": 84639
  },
  {
    "name": "<instance_members_initializer> node:internal/fs/promises:189:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 90,
    "tm": 84782,
    "source": {
      "script": 109,
      "start": 4202,
      "end": 5000,
      "positions": "C0O4202C12O4210C26O5000",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/rimraf:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 91,
    "tm": 85347,
    "source": {
      "script": 110,
      "start": 0,
      "end": 7095,
      "positions": "C0O0C4O7095",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/rimraf:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 92,
    "tm": 86058,
    "source": {
      "script": 110,
      "start": 0,
      "end": 7095,
      "positions": "C0O0C139O368C145O393C151O404C156O450C159O450C164O439C170O480C173O480C177O480C179O642C182O505C188O514C194O527C200O536C206O549C212O560C218O575C224O584C230O597C236O605C242O617C248O627C254O662C257O662C262O654C267O702C270O702C275O687C281O739C284O739C289O729C295O792C302O792C307O792C309O863C316O863C321O863C323O958C330O967C333O950C335O1001C345O1001C347O1060C357O1060C359O1126C361O1126C363O1154C366O1161C371O1161C376O1154C378O7038C385O7057C391O7065C397O7081C403O7053C408O7094",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "from node:buffer:295:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 93,
    "tm": 86351,
    "source": {
      "script": 18,
      "start": 8406,
      "end": 9357,
      "positions": "C3O8444C9O8479C12O8486C17O8522C18O8526C28O8581C33O8585C39O8616C51O8623C56O8672C57O8700C63O8717C68O8717C73O8732C78O8771C95O8862C104O8869C109O8909C110O8931C113O8931C118O8954C120O8967C122O8976C123O8982C125O8999C127O8998C134O9060C136O9066C138O9065C145O9084C151O9102C155O9147C158O9154C163O9194C164O9216C182O9222C187O9216",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "fromString node:buffer:431:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 94,
    "tm": 89911,
    "source": {
      "script": 18,
      "start": 12457,
      "end": 12891,
      "positions": "C0O12484C2O12491C8O12536C14O12543C19O12567C25O12574C30O12587C35O12594C40O12611C41O12616C46O12634C51O12644C56O12681C59O12687C64O12717C66O12746C73O12752C78O12746C79O12803C85O12810C90O12823C95O12830C100O12847C101O12854C104O12861C109O12889",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "fromStringFast node:buffer:412:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 95,
    "tm": 90045,
    "source": {
      "script": 18,
      "start": 11913,
      "end": 12436,
      "positions": "C0O11950C5O11950C11O11973C14O11995C18O12004C21O11984C26O12016C31O12052C36O12023C41O12065C42O12069C44O12083C49O12094C51O12092C54O12080C59O12111C62O12111C65O12135C72O12150C77O12161C85O12135C91O12203C110O12203C116O12234C118O12245C123O12329C130O12348C135O12359C143O12333C149O12386C156O12400C162O12397C168O12410C171O12410C174O12425C176O12434",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "FastBuffer node:internal/buffer:958:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 96,
    "tm": 90147,
    "source": {
      "script": 19,
      "start": 26364,
      "end": 26453,
      "positions": "C3O26407C7O26441C20O26407C35O26452",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "write node:buffer:592:12",
    "type": "JS",
    "kind": "Unopt",
    "func": 97,
    "tm": 90234,
    "source": {
      "script": 18,
      "start": 16525,
      "end": 16589,
      "positions": "C0O16559C17O16559C22O16589",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "alignPool node:buffer:158:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 98,
    "tm": 90318,
    "source": {
      "script": 18,
      "start": 3998,
      "end": 4102,
      "positions": "C0O4032C4O4047C9O4060C19O4071C25O4083C34O4093C41O4101",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "promisify node:internal/util:324:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 99,
    "tm": 90529,
    "source": {
      "script": 12,
      "start": 8845,
      "end": 10349,
      "positions": "C0O8845C17O8907C25O8947C33O8971C38O8950C55O9007C68O9007C73O9050C80O9063C82O9062C87O9107C94O9116C96O9115C100O9148C110O9148C115O9200C126O9232C136O9273C143O9207C148O9339C149O9502C156O9511C158O9510C161O9502C163O10066C174O10091C180O10091C185O10066C190O10127C201O10152C211O10191C218O10127C223O10258C234O10301C240O10301C245O10265C250O10347",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "EventEmitterMixin node:internal/event_target:827:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 100,
    "tm": 92138,
    "source": {
      "script": 38,
      "start": 23423,
      "end": 23845,
      "positions": "C0O23475C23O23659C30O23691C33O23704C38O23659C43O23718C47O23751C52O23792C57O23751C62O23818C64O23843",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/translators:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 101,
    "tm": 95049,
    "source": {
      "script": 111,
      "start": 0,
      "end": 11226,
      "positions": "C0O0C4O11226",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/translators:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 102,
    "tm": 96133,
    "source": {
      "script": 111,
      "start": 0,
      "end": 11226,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/create_dynamic_module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 103,
    "tm": 96434,
    "source": {
      "script": 112,
      "start": 0,
      "end": 1756,
      "positions": "C0O0C4O1756",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/create_dynamic_module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 104,
    "tm": 96653,
    "source": {
      "script": 112,
      "start": 0,
      "end": 1756,
      "positions": "C0O0C39O25C45O47C51O68C57O85C63O101C69O140C72O140C77O173C90O174C96O140C98O642C103O1718C105O1733C110O1755",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/vm/module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 105,
    "tm": 97167,
    "source": {
      "script": 113,
      "start": 0,
      "end": 12310,
      "positions": "C0O0C4O12310",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/vm/module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 106,
    "tm": 98362,
    "source": {
      "script": 113,
      "start": 0,
      "end": 12310,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "<instance_members_initializer> node:internal/vm/module:256:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 107,
    "tm": 98455,
    "source": {
      "script": 113,
      "start": 6796,
      "end": 6832,
      "positions": "C3O6805C29O6832",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "ESMLoader node:internal/modules/esm/loader:52:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 108,
    "tm": 98720,
    "source": {
      "script": 102,
      "start": 1392,
      "end": 1392,
      "positions": "C0O1392C15O1392",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "ModuleMap node:internal/modules/esm/module_map:15:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 109,
    "tm": 98800,
    "source": {
      "script": 103,
      "start": 430,
      "end": 447,
      "positions": "C3O436C7O442C11O436C26O446",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "desc.value node:internal/per_context/primordials:325:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 110,
    "tm": 98883,
    "source": {
      "script": 6,
      "start": 9496,
      "end": 9555,
      "positions": "C0O9513C7O9520C12O9543",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SafeIterator node:internal/per_context/primordials:270:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 111,
    "tm": 98933,
    "source": {
      "script": 6,
      "start": 7785,
      "end": 7845,
      "positions": "C0O7804C3O7821C7O7819C12O7844",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "next node:internal/per_context/primordials:273:9",
    "type": "JS",
    "kind": "Unopt",
    "func": 112,
    "tm": 98986,
    "source": {
      "script": 6,
      "start": 7854,
      "end": 7899,
      "positions": "C0O7865C3O7882C8O7872C12O7893",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "deprecate node:internal/util:96:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 113,
    "tm": 99230,
    "source": {
      "script": 12,
      "start": 2408,
      "end": 3584,
      "positions": "C0O2408C26O2428C31O2440C37O2454C42O2470C44O2480C45O2535C53O2573C61O2595C66O2576C83O2631C87O2659C100O2659C105O2705C106O2705C108O3280C121O3280C126O3320C129O3327C135O3520C141O3546C145O3541C149O3564C151O3582",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getEmbedderOptions node:internal/options:32:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 114,
    "tm": 99357,
    "source": {
      "script": 93,
      "start": 760,
      "end": 877,
      "positions": "C0O767C6O795C11O813C17O811C23O852C27O875",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._initPaths node:internal/modules/cjs/loader:1227:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 115,
    "tm": 99546,
    "source": {
      "script": 99,
      "start": 38372,
      "end": 39328,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "resolve node:path:1091:10",
    "type": "JS",
    "kind": "Baseline",
    "func": 13,
    "tm": 99743,
    "source": {
      "script": 35,
      "start": 33782,
      "end": 34692,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "nativeModuleRequire node:internal/bootstrap/loaders:332:29",
    "type": "JS",
    "kind": "Baseline",
    "func": 2,
    "tm": 99787,
    "source": {
      "script": 9,
      "start": 10315,
      "end": 10658,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "compileForInternalLoader node:internal/bootstrap/loaders:299:27",
    "type": "JS",
    "kind": "Baseline",
    "func": 3,
    "tm": 99829,
    "source": {
      "script": 9,
      "start": 9528,
      "end": 10089,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getCLIOptionsFromBinding node:internal/options:18:34",
    "type": "JS",
    "kind": "Baseline",
    "func": 21,
    "tm": 99868,
    "source": {
      "script": 93,
      "start": 497,
      "end": 598,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "next node:internal/per_context/primordials:273:9",
    "type": "JS",
    "kind": "Baseline",
    "func": 112,
    "tm": 99897,
    "source": {
      "script": 6,
      "start": 7854,
      "end": 7899,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SafeMap node:internal/per_context/primordials:351:16",
    "type": "JS",
    "kind": "Baseline",
    "func": 60,
    "tm": 99951,
    "source": {
      "script": 6,
      "start": 10200,
      "end": 10217,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/run_main:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 116,
    "tm": 100119,
    "source": {
      "script": 114,
      "start": 0,
      "end": 2695,
      "positions": "C0O0C4O2695",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/run_main:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 117,
    "tm": 100416,
    "source": {
      "script": 114,
      "start": 0,
      "end": 2695,
      "positions": "C0O0C60O25C66O85C72O85C77O133C83O141C89O153C95O212C101O212C106O193C112O254C118O254C122O254C124O2627C131O2648C137O2673C143O2642C148O2694",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeESMLoader node:internal/bootstrap/pre_execution:431:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 118,
    "tm": 100564,
    "source": {
      "script": 92,
      "start": 13703,
      "end": 14791,
      "positions": "C0O13785C6O13785C13O13834C16O13830C21O13828C25O13852C30O13856C34O13876C40O13905C41O13912C42O14012C48O14012C53O13928C58O13968C63O14058C69O14058C74O14259C79O14217C83O14329C88O14290C92O14495C100O14499C106O14615C112O14615C117O14564C122O14572C127O14590C132O14661C138O14661C143O14680C145O14690C149O14704C151O14724C155O14748C157O14767C162O14790",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 119,
    "tm": 100653,
    "source": {
      "script": 99,
      "start": 2306,
      "end": 2346,
      "positions": "C0O2311C4O2344",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "assert node:internal/assert:11:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 120,
    "tm": 100707,
    "source": {
      "script": 16,
      "start": 172,
      "end": 307,
      "positions": "C0O193C4O242C7O242C11O259C13O265C18O259C20O306",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "loadPreloadModules node:internal/bootstrap/pre_execution:474:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 121,
    "tm": 100815,
    "source": {
      "script": 92,
      "start": 15267,
      "end": 15587,
      "positions": "C0O15354C8O15354C13O15385C15O15422C21O15429C26O15505C32O15505C37O15505C42O15472C47O15549C52O15586",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._preloadModules node:internal/modules/cjs/loader:1257:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 122,
    "tm": 100905,
    "source": {
      "script": 99,
      "start": 39364,
      "end": 39938,
      "positions": "C0O39379C5O39384C11O39412C12O39419C13O39423C17O39436C23O39631C33O39631C42O39681C45O39703C53O39728C58O39728C63O39703C68O39694C85O39756C88O39762C95O39767C100O39789C106O39802C114O39817C116O39817C119O39851C121O39867C125O39856C130O39891C137O39907C141O39891C146O39876C151O39838C154O39915C158O39928C165O39937",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module node:internal/modules/cjs/loader:172:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 123,
    "tm": 101012,
    "source": {
      "script": 99,
      "start": 5284,
      "end": 5521,
      "positions": "C14O5306C16O5314C20O5322C22O5334C25O5339C30O5339C35O5332C39O5354C40O5367C44O5375C49O5393C54O5393C60O5414C71O5414C76O5453C77O5467C81O5477C82O5489C86O5500C88O5514C93O5520",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "dirname node:path:1275:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 124,
    "tm": 101119,
    "source": {
      "script": 35,
      "start": 38742,
      "end": 39411,
      "positions": "C0O38755C8O38755C13O38798C19O38805C24O38818C26O38829C27O38850C34O38850C42O38889C44O38885C48O38923C51O38950C53O38978C57O38985C61O38992C63O38992C68O39011C73O39015C81O39054C83O39050C88O39084C92O39115C97O39134C101O39221C103O39000C108O38960C111O39262C113O39270C118O39284C128O39311C129O39316C135O39335C140O39348C142O39360C143O39365C156O39372C161O39407",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "updateChildren node:internal/modules/cjs/loader:165:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 125,
    "tm": 101234,
    "source": {
      "script": 99,
      "start": 5049,
      "end": 5222,
      "positions": "C0O5092C7O5098C15O5112C19O5130C23O5138C26O5138C33O5184C38O5184C44O5221",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._nodeModulePaths node:internal/modules/cjs/loader:629:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 126,
    "tm": 101343,
    "source": {
      "script": 99,
      "start": 18791,
      "end": 19922,
      "positions": "C0O18846C5O18858C10O18858C17O19037C19O19046C24O19061C28O19086C29O19301C32O19327C36O19334C40O19343C42O19358C47O19368C48O19368C53O19400C58O19400C64O19442C66O19455C68O19451C73O19485C75O19495C77O19491C82O19512C89O19563C100O19563C108O19599C112O19512C117O19638C120O19656C124O19676C126O19682C131O19700C138O19711C144O19715C149O19737C156O19769C159O19376C164O19309C167O19856C175O19856C180O19905C182O19918",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module.require node:internal/modules/cjs/loader:997:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 127,
    "tm": 101489,
    "source": {
      "script": 99,
      "start": 31204,
      "end": 31495,
      "positions": "C0O31213C8O31213C13O31241C15O31248C20O31262C36O31268C41O31262C42O31377C51O31389C60O31405C63O31419C76O31419C93O31474C102O31486C126O31494",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._load node:internal/modules/cjs/loader:757:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 128,
    "tm": 101662
  },
  {
    "name": "logger node:internal/util/debuglog:96:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 129,
    "tm": 101796,
    "source": {
      "script": 40,
      "start": 2899,
      "end": 3124,
      "positions": "C0O2899C3O2931C30O2955C35O2962C38O2970C39O2985C45O3002C49O2992C53O3007C54O3022C60O3039C66O3048C70O3029C75O3053C76O3069C80O3076C87O3089C92O3085C98O3076C103O3114",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/per_context/primordials:276:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 130,
    "tm": 101877,
    "source": {
      "script": 6,
      "start": 7920,
      "end": 7949,
      "positions": "C0O7931C2O7943",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "debug node:internal/util/debuglog:76:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 131,
    "tm": 101954,
    "source": {
      "script": 40,
      "start": 2357,
      "end": 2781,
      "positions": "C0O2357C3O2376C6O2376C9O2484C16O2505C22O2492C30O2490C36O2524C42O2560C47O2563C50O2560C54O2588C81O2612C86O2619C89O2627C90O2642C96O2659C100O2649C104O2664C105O2679C111O2696C117O2705C121O2686C126O2710C127O2726C131O2733C138O2746C143O2742C149O2733C154O2771",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "init node:internal/util/debuglog:72:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 132,
    "tm": 102019,
    "source": {
      "script": 40,
      "start": 2259,
      "end": 2342,
      "positions": "C0O2268C10O2274C14O2272C16O2311C26O2321C33O2319C40O2341",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "testEnabled node:internal/util/debuglog:32:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 133,
    "tm": 102067,
    "source": {
      "script": 40,
      "start": 973,
      "end": 984,
      "positions": "C0O979C1O984",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "debuglogImpl node:internal/util/debuglog:49:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 134,
    "tm": 102141,
    "source": {
      "script": 40,
      "start": 1451,
      "end": 1995,
      "positions": "C0O1451C9O1470C18O1484C23O1511C34O1544C39O1552C43O1544C45O1563C55O1563C59O1595C71O1606C75O1611C83O1934C97O1952C99O1950C103O1970C112O1987C115O1993",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/loader:272:66",
    "type": "JS",
    "kind": "Unopt",
    "func": 135,
    "tm": 102201,
    "source": {
      "script": 99,
      "start": 7709,
      "end": 7734,
      "positions": "C0O7721C2O7727C9O7733",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "noop node:internal/util/debuglog:47:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 136,
    "tm": 102242,
    "source": {
      "script": 40,
      "start": 1419,
      "end": 1427,
      "positions": "C1O1426",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._resolveFilename node:internal/modules/cjs/loader:848:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 137,
    "tm": 102436
  },
  {
    "name": "canBeRequiredByUsers node:internal/bootstrap/loaders:240:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 138,
    "tm": 102614,
    "source": {
      "script": 9,
      "start": 7353,
      "end": 7449,
      "positions": "C0O7376C5O7389C10O7393C15O7393C21O7406C23O7424C27O7445",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._resolveLookupPaths node:internal/modules/cjs/loader:667:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 139,
    "tm": 102723,
    "source": {
      "script": 99,
      "start": 19964,
      "end": 21141,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "trySelfParentPath node:internal/modules/cjs/loader:427:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 140,
    "tm": 102848,
    "source": {
      "script": 99,
      "start": 12270,
      "end": 12533,
      "positions": "C0O12283C4O12296C5O12309C6O12324C12O12354C16O12363C17O12384C24O12387C29O12410C36O12413C44O12455C47O12470C52O12470C59O12478C62O12483C66O12476C69O12487C72O12508C73O12521C75O12532",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "trySelf node:internal/modules/cjs/loader:441:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 141,
    "tm": 102953,
    "source": {
      "script": 99,
      "start": 12551,
      "end": 13384,
      "positions": "C0O12577C4O12594C5O12607C6O12648C9O12648C17O12625C22O12636C27O12686C31O12702C37O12725C38O12738C39O12756C47O12775C48O12788C49O12796C51O12829C55O12821C60O12841C65O12867C70O12913C82O12871C89O12929C94O12947C97O12981C102O12986C107O12947C112O12945C118O13010C119O13023C123O13041C128O13070C133O13099C138O13121C142O13099C149O13163C152O13163C159O13190C168O13070C183O13048C188O13236C200O13257C203O13263C210O13268C215O13302C222O13346C226O13308C231O13302C232O13370C234O13370",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readPackageScope node:internal/modules/cjs/loader:321:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 142,
    "tm": 103054,
    "source": {
      "script": 99,
      "start": 8919,
      "end": 9437,
      "positions": "C0O8962C7O8996C10O8962C16O9008C18O9035C25O9090C28O9052C34O9100C47O9112C54O9168C61O9207C66O9211C70O9172C77O9236C78O9249C79O9268C84O9292C86O9290C90O9268C95O9302C97O9313C104O9334C110O9353C116O9370C117O9397C119O9397C124O9026C127O9422C128O9435",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readPackage node:internal/modules/cjs/loader:290:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 143,
    "tm": 103179,
    "source": {
      "script": 99,
      "start": 8102,
      "end": 8892,
      "positions": "C0O8137C5O8142C13O8142C20O8200C25O8217C30O8217C36O8234C38O8262C40O8278C41O8297C46O8315C51O8315C57O8353C63O8366C72O8392C77O8402C79O8432C84O8449C91O8449C97O8475C98O8488C102O8521C107O8521C112O8559C117O8580C125O8605C133O8633C141O8664C149O8692C160O8708C165O8725C170O8725C176O8754C178O8770C190O8791C195O8798C199O8814C207O8843C213O8854C220O8865C224O8861C227O8824C231O8878C233O8878",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "read node:internal/modules/package_json_reader:16:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 144,
    "tm": 103311,
    "source": {
      "script": 100,
      "start": 292,
      "end": 954,
      "positions": "C0O307C5O317C10O317C17O338C22O351C27O351C32O365C33O412C40O440C43O440C48O412C53O384C59O395C66O489C73O491C79O499C86O544C92O544C97O525C102O575C106O607C112O643C115O654C127O704C132O738C142O652C148O774C154O821C159O821C164O852C169O861C174O861C180O907C185O913C190O913C196O938C198O952",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toNamespacedPath node:path:1266:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 145,
    "tm": 103379,
    "source": {
      "script": 35,
      "start": 38609,
      "end": 38669,
      "positions": "C0O38653C2O38665",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._findPath node:internal/modules/cjs/loader:494:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 146,
    "tm": 103648,
    "source": {
      "script": 99,
      "start": 14327,
      "end": 16931,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isAbsolute node:path:1156:13",
    "type": "JS",
    "kind": "Unopt",
    "func": 147,
    "tm": 103834,
    "source": {
      "script": 35,
      "start": 35448,
      "end": 35594,
      "positions": "C0O35461C8O35461C13O35507C19O35514C26O35532C31O35532C39O35571C41O35567C44O35590",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "stat node:internal/modules/cjs/loader:151:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 148,
    "tm": 104066,
    "source": {
      "script": 99,
      "start": 4627,
      "end": 5024,
      "positions": "C0O4642C5O4658C10O4658C17O4688C23O4733C28O4743C33O4743C39O4762C41O4788C43O4802C44O4824C49O4824C54O4856C61O4889C66O4969C71O4979C76O4979C82O5008C84O5022",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryExtensions node:internal/modules/cjs/loader:400:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 149,
    "tm": 104174,
    "source": {
      "script": 99,
      "start": 11501,
      "end": 11685,
      "positions": "C0O11536C2O11548C6O11541C11O11584C16O11600C19O11594C23O11584C29O11619C31O11641C33O11657C34O11557C39O11523C42O11670C43O11683",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryFile node:internal/modules/cjs/loader:384:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 150,
    "tm": 104241,
    "source": {
      "script": 99,
      "start": 11077,
      "end": 11271,
      "positions": "C0O11114C3O11114C8O11135C9O11142C14O11149C15O11156C16O11159C24O11184C26O11198C31O11210C36O11210C41O11231C42O11238C45O11245C49O11269",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toRealPath node:internal/modules/cjs/loader:393:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 151,
    "tm": 104316,
    "source": {
      "script": 99,
      "start": 11292,
      "end": 11404,
      "positions": "C0O11310C5O11320C10O11333C17O11353C20O11364C28O11383C35O11320C41O11402",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "realpathSync node:fs:2408:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 152,
    "tm": 104680
  },
  {
    "name": "getOptions node:internal/fs/utils:314:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 153,
    "tm": 112294,
    "source": {
      "script": 78,
      "start": 7218,
      "end": 7841,
      "positions": "C0O7248C14O7340C16O7362C17O7370C23O7409C29O7453C31O7477C35O7492C42O7527C48O7566C66O7572C71O7566C72O7659C79O7668C84O7686C87O7709C92O7686C96O7735C102O7763C107O7791C115O7763C120O7824C122O7839",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "assertEncoding node:internal/fs/utils:151:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 154,
    "tm": 114735,
    "source": {
      "script": 78,
      "start": 3527,
      "end": 3704,
      "positions": "C0O3542C6O3559C9O3566C14O3566C21O3609C24O3636C40O3642C45O3636C47O3703",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toPathIfFileURL node:internal/url:1496:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 155,
    "tm": 114879,
    "source": {
      "script": 33,
      "start": 41461,
      "end": 41582,
      "positions": "C0O41481C3O41486C9O41520C11O41541C12O41544C15O41551C19O41580",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isURLInstance node:internal/url:1492:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 156,
    "tm": 118844,
    "source": {
      "script": 33,
      "start": 41338,
      "end": 41435,
      "positions": "C0O41358C3O41379C6O41404C12O41426C16O41433",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:668:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 157,
    "tm": 118992,
    "source": {
      "script": 78,
      "start": 18141,
      "end": 18411,
      "positions": "C14O18174C22O18207C25O18207C31O18233C36O18264C49O18239C54O18233C55O18329C68O18329C74O18366C76O18395C78O18395C80O18410",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:357:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 158,
    "tm": 119079,
    "source": {
      "script": 78,
      "start": 8569,
      "end": 9158,
      "positions": "C16O8633C21O8686C26O8686C31O8780C37O8803C41O8831C45O8848C51O8848C60O8899C64O8920C69O8920C76O8965C77O8972C78O8992C94O8992C100O9106C104O9128C106O9128C107O9145C109O9156",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isUint8Array node:internal/util/types:13:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 159,
    "tm": 119140,
    "source": {
      "script": 15,
      "start": 257,
      "end": 342,
      "positions": "C0O269C5O276C12O323C15O340",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "splitRoot node:fs:2362:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 160,
    "tm": 119438,
    "source": {
      "script": 77,
      "start": 62796,
      "end": 62988,
      "positions": "C0O62821C2O62832C6O62826C11O62853C16O62857C24O62895C26O62891C31O62923C44O62930C49O62962C50O62842C55O62808C58O62973C60O62984",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "nextPart node:fs:2395:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 161,
    "tm": 119492,
    "source": {
      "script": 77,
      "start": 63703,
      "end": 63761,
      "positions": "C0O63716C14O63723C19O63757",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "handleErrorFromBinding node:internal/fs/utils:340:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 162,
    "tm": 119590,
    "source": {
      "script": 78,
      "start": 7930,
      "end": 8428,
      "positions": "C0O7948C6O8011C11O8011C16O8033C24O8033C29O8090C31O8090C32O8115C38O8343C43O8370C51O8343C56O8416C60O8406C62O8427",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isFileType node:fs:205:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 163,
    "tm": 119650,
    "source": {
      "script": 77,
      "start": 5285,
      "end": 5526,
      "positions": "C0O5419C2O5424C6O5431C10O5465C15O5472C20O5488C22O5503C24O5501C30O5511C33O5524",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "encodeRealpathResult node:fs:2371:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 164,
    "tm": 119916,
    "source": {
      "script": 77,
      "start": 63022,
      "end": 63280,
      "positions": "C0O63044C4O63069C10O63089C17O63098C22O63114C24O63128C25O63148C30O63155C35O63155C41O63183C48O63192C53O63212C55O63228C56O63251C61O63268C66O63251C71O63278",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "loadNativeModule node:internal/modules/cjs/helpers:44:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 165,
    "tm": 119993,
    "source": {
      "script": 98,
      "start": 1151,
      "end": 1431,
      "positions": "C0O1187C5O1200C10O1204C15O1204C21O1221C26O1228C35O1258C43O1258C48O1384C53O1384C57O1414C59O1425C61O1430",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module.load node:internal/modules/cjs/loader:969:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 166,
    "tm": 120103,
    "source": {
      "script": 99,
      "start": 30265,
      "end": 31078,
      "positions": "C0O30280C8O30326C16O30280C21O30334C26O30347C32O30334C36O30358C38O30372C42O30386C45O30406C52O30423C55O30428C60O30428C66O30406C71O30397C75O30469C78O30469C83O30546C91O30550C101O30603C106O30614C112O30628C124O30634C129O30628C130O30674C133O30681C140O30692C144O30703C150O30723C151O30735C155O30764C160O30773C165O30875C170O30910C175O30921C187O30961C192O30968C197O30968C204O30982C206O30980C211O31014C216O31023C221O31023C228O31048C233O31057C238O31057C245O31077",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "dirname node:path:1275:10",
    "type": "JS",
    "kind": "Baseline",
    "func": 124,
    "tm": 120209,
    "source": {
      "script": 35,
      "start": 38742,
      "end": 39411,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._nodeModulePaths node:internal/modules/cjs/loader:629:37",
    "type": "JS",
    "kind": "Baseline",
    "func": 126,
    "tm": 120255,
    "source": {
      "script": 99,
      "start": 18791,
      "end": 19922,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toNamespacedPath node:path:1266:19",
    "type": "JS",
    "kind": "Baseline",
    "func": 145,
    "tm": 120280,
    "source": {
      "script": 35,
      "start": 38609,
      "end": 38669,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "nextPart node:fs:2395:31",
    "type": "JS",
    "kind": "Baseline",
    "func": 161,
    "tm": 120303,
    "source": {
      "script": 77,
      "start": 63703,
      "end": 63761,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isFileType node:fs:205:20",
    "type": "JS",
    "kind": "Baseline",
    "func": 163,
    "tm": 120335,
    "source": {
      "script": 77,
      "start": 5285,
      "end": 5526,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "findLongestRegisteredExtension node:internal/modules/cjs/loader:413:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 167,
    "tm": 120431,
    "source": {
      "script": 99,
      "start": 11813,
      "end": 12242,
      "positions": "C0O11841C5O11846C10O11846C16O11872C18O11896C20O11922C22O11990C36O11943C44O11990C49O12004C51O12023C55O12032C56O12042C61O12049C63O12096C68O12115C74O12154C77O12165C84O12176C89O12196C91O12220C92O11927C95O12227C97O12240",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "basename node:path:1306:11",
    "type": "JS",
    "kind": "Unopt",
    "func": 168,
    "tm": 120556,
    "source": {
      "script": 35,
      "start": 39512,
      "end": 41904,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._extensions..js node:internal/modules/cjs/loader:1110:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 169,
    "tm": 120740,
    "source": {
      "script": 99,
      "start": 34668,
      "end": 36368,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readFileSync node:fs:450:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 170,
    "tm": 120911,
    "source": {
      "script": 77,
      "start": 11355,
      "end": 12732,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isEncoding node:buffer:529:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 171,
    "tm": 121027,
    "source": {
      "script": 18,
      "start": 14774,
      "end": 14906,
      "positions": "C0O14789C6O14837C12O14844C20O14862C23O14862C28O14890C29O14904",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "normalizeEncoding node:internal/util:160:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 172,
    "tm": 121119,
    "source": {
      "script": 12,
      "start": 4206,
      "end": 4311,
      "positions": "C0O4216C7O4239C14O4257C19O4270C21O4284C22O4287C25O4294C29O4309",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isUint32 node:internal/validators:39:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 173,
    "tm": 121167,
    "source": {
      "script": 17,
      "start": 777,
      "end": 822,
      "positions": "C0O789C2O813C5O802C8O820",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "openSync node:fs:576:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 174,
    "tm": 121233,
    "source": {
      "script": 77,
      "start": 14426,
      "end": 14805,
      "positions": "C0O14450C5O14457C11O14503C16O14503C21O14527C37O14534C44O14585C51O14587C58O14612C63O14620C70O14625C73O14636C78O14636C95O14620C101O14758C106O14758C110O14789C112O14803",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:680:42",
    "type": "JS",
    "kind": "Unopt",
    "func": 175,
    "tm": 121287,
    "source": {
      "script": 78,
      "start": 18456,
      "end": 18591,
      "positions": "C14O18511C19O18511C24O18545C29O18545C34O18577C36O18589",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "stringToFlags node:internal/fs/utils:555:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 176,
    "tm": 121377,
    "source": {
      "script": 78,
      "start": 15047,
      "end": 16281,
      "positions": "C14O15075C20O15112C25O15112C30O15144C32O15157C33O15165C38O15190C42O15206C43O15214C202O15246C206O15262C207O15312C214O15330C216O15328C219O15337C220O15354C224O15368C225O15420C232O15436C234O15434C237O15443C238O15460C245O15477C247O15475C253O15487C255O15485C258O15496C259O15546C266O15563C268O15561C274O15573C276O15571C282O15584C284O15582C287O15591C288O15609C295O15626C297O15624C303O15636C305O15634C308O15643C309O15693C316O15710C318O15708C324O15720C326O15718C332O15729C334O15727C337O15736C338O15753C345O15771C347O15769C353O15781C355O15779C358O15790C359O15840C366O15858C368O15856C374O15868C376O15866C382O15879C384O15877C387O15886C388O15936C395O15954C397O15952C403O15964C405O15962C411O15975C413O15973C416O15982C417O16000C424O16018C426O16016C432O16028C434O16026C437O16035C438O16085C445O16103C447O16101C453O16113C455O16111C461O16122C463O16120C466O16129C467O16179C474O16197C476O16195C482O16207C484O16205C490O16216C492O16214C495O16223C496O16231C509O16237C514O16231",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "parseFileMode node:internal/validators:58:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 177,
    "tm": 121488,
    "source": {
      "script": 17,
      "start": 1468,
      "end": 1764,
      "positions": "C0O1491C11O1508C17O1545C24O1570C27O1550C34O1596C41O1641C52O1602C57O1596C58O1662C66O1670C73O1703C89O1703C94O1749C96O1762",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:83:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 178,
    "tm": 121562,
    "source": {
      "script": 17,
      "start": 2236,
      "end": 2817,
      "positions": "C36O2377C39O2382C45O2406C51O2447C67O2453C72O2447C73O2516C78O2521C84O2555C100O2561C105O2555C106O2624C116O2663C129O2676C142O2630C147O2624C148O2701C150O2711C157O2726C162O2741C172O2780C185O2793C198O2747C203O2741C205O2816",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isInt32 node:internal/validators:35:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 179,
    "tm": 121615,
    "source": {
      "script": 17,
      "start": 715,
      "end": 758,
      "positions": "C0O727C2O751C5O740C8O756",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryStatSync node:fs:404:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 180,
    "tm": 121721,
    "source": {
      "script": 77,
      "start": 10330,
      "end": 10540,
      "positions": "C0O10361C2O10381C7O10389C22O10389C28O10433C36O10457C38O10473C43O10476C48O10476C53O10495C58O10501C62O10495C63O10525C65O10538",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryCreateBuffer node:fs:414:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 181,
    "tm": 121831,
    "source": {
      "script": 77,
      "start": 10566,
      "end": 10853,
      "positions": "C0O10603C2O10615C7O10635C9O10646C11O10644C16O10668C23O10674C28O10668C29O10717C34O10733C39O10733C45O10756C57O10762C58O10789C65O10803C67O10813C72O10816C77O10816C93O10837C95O10851",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "allocUnsafe node:buffer:372:42",
    "type": "JS",
    "kind": "Unopt",
    "func": 182,
    "tm": 121897,
    "source": {
      "script": 18,
      "start": 10871,
      "end": 10926,
      "positions": "C0O10882C5O10882C9O10902C12O10909C16O10924",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:buffer:348:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 183,
    "tm": 121944,
    "source": {
      "script": 18,
      "start": 10169,
      "end": 10324,
      "positions": "C0O10183C8O10183C13O10215C14O10226C21O10242C23O10239C28O10261C33O10293C46O10267C51O10261C53O10323",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "validateNumber node:internal/validators:122:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 184,
    "tm": 121989,
    "source": {
      "script": 17,
      "start": 3532,
      "end": 3641,
      "positions": "C0O3550C6O3585C22O3591C27O3585C29O3640",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "allocate node:buffer:397:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 185,
    "tm": 122046,
    "source": {
      "script": 18,
      "start": 11573,
      "end": 11888,
      "positions": "C0O11584C1O11593C6O11605C11O11612C16O11629C17O11636C20O11655C24O11664C27O11645C32O11678C34O11690C39O11701C41O11699C44O11687C49O11720C52O11720C55O11748C62O11763C67O11774C75O11748C81O11797C88O11811C94O11808C100O11821C103O11821C106O11838C108O11847C109O11854C114O11861C118O11886",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryReadSync node:fs:429:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 186,
    "tm": 122123,
    "source": {
      "script": 77,
      "start": 10875,
      "end": 11110,
      "positions": "C0O10924C2O10936C7O10959C12O10974C29O10974C35O11010C47O11016C48O11043C55O11057C57O11067C62O11070C67O11070C83O11091C85O11108",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readSync node:fs:684:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 187,
    "tm": 122211,
    "source": {
      "script": 77,
      "start": 17128,
      "end": 18059,
      "positions": "C0O17128C2O17171C7O17176C13O17199C18O17199C22O17240C29O17247C34O17318C40O17340C52O17352C58O17368C64O17380C70O17410C75O17436C80O17463C93O17463C98O17508C105O17524C106O17535C111O17548C112O17557C113O17576C119O17587C124O17600C140O17606C145O17600C146O17728C151O17776C162O17728C167O17792C172O17818C176O17836C184O17836C189O17891C191O17912C196O17920C221O17920C227O18012C232O18012C236O18043C238O18057",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:686:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 188,
    "tm": 122281,
    "source": {
      "script": 78,
      "start": 18634,
      "end": 18755,
      "positions": "C14O18663C22O18667C29O18691C30O18700C31O18708C44O18708C49O18743C51O18753",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:190:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 189,
    "tm": 122376,
    "source": {
      "script": 17,
      "start": 5662,
      "end": 5892,
      "positions": "C14O5695C19O5700C25O5733C30O5764C43O5739C48O5733C50O5891",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:72:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 190,
    "tm": 122437,
    "source": {
      "script": 17,
      "start": 1809,
      "end": 2190,
      "positions": "C12O1829C25O1859C32O1892C38O1929C54O1935C59O1929C60O1988C65O1993C71O2023C87O2029C92O2023C93O2082C95O2092C102O2107C107O2120C117O2159C130O2172C143O2126C148O2120C150O2189",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:636:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 191,
    "tm": 122511,
    "source": {
      "script": 78,
      "start": 17258,
      "end": 17637,
      "positions": "C0O17298C1O17309C6O17322C22O17328C27O17322C28O17386C29O17397C34O17410C50O17416C55O17410C56O17474C58O17485C64O17494C69O17518C82O17607C95O17524C100O17518C102O17636",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:886:42",
    "type": "JS",
    "kind": "Unopt",
    "func": 192,
    "tm": 122590,
    "source": {
      "script": 78,
      "start": 23965,
      "end": 24523,
      "positions": "C0O23989C6O24029C14O24029C21O24077C27O24117C32O24140C35O24135C37O24132C47O24166C53O24173C56O24160C61O24188C77O24271C80O24266C98O24291C104O24298C117O24194C122O24188C125O24371C143O24377C148O24371C150O24522",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "closeSync node:fs:526:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 193,
    "tm": 122665,
    "source": {
      "script": 77,
      "start": 13295,
      "end": 13417,
      "positions": "C0O13304C5O13309C11O13344C13O13350C18O13358C31O13358C36O13387C41O13387C46O13416",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toString node:buffer:782:46",
    "type": "JS",
    "kind": "Unopt",
    "func": 194,
    "tm": 122769,
    "source": {
      "script": 18,
      "start": 23264,
      "end": 23826,
      "positions": "C0O23264C2O23305C8O23312C13O23337C20O23355C25O23337C31O23363C32O23388C37O23399C38O23409C43O23419C48O23437C50O23447C55O23459C57O23469C58O23481C65O23496C71O23525C76O23536C83O23558C90O23571C92O23579C97O23593C99O23603C100O23607C104O23651C109O23651C115O23673C116O23689C119O23689C124O23717C126O23744C133O23750C138O23744C139O23800C156O23800C161O23824",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getEncodingOps node:buffer:678:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 195,
    "tm": 122909
  },
  {
    "name": "slice node:buffer:593:12",
    "type": "JS",
    "kind": "Unopt",
    "func": 196,
    "tm": 123028,
    "source": {
      "script": 18,
      "start": 16602,
      "end": 16648,
      "positions": "C0O16627C5O16627C11O16648",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._compile node:internal/modules/cjs/loader:1055:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 197,
    "tm": 123430,
    "source": {
      "script": 99,
      "start": 32760,
      "end": 34601,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "maybeCacheSourceMap node:internal/source_map/source_map_cache:74:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 198,
    "tm": 123595,
    "source": {
      "script": 96,
      "start": 2239,
      "end": 3273,
      "positions": "C0O2308C3O2308C7O2334C10O2348C15O2352C23O2372C25O2392C26O2399C30O2412C35O2423C44O2421C54O2564C64O2574C69O2564C73O2586C74O2593C75O2614C80O2640C85O2614C91O2717C93O2747C96O2775C101O2782C106O2747C112O2817C117O2837C122O2844C127O2866C131O2897C136O2915C141O2919C148O2948C155O2979C165O3009C171O3023C175O2915C183O3149C188O3167C193O3171C201O3204C211O3234C217O3248C221O3167C228O3272",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getSourceMapsEnabled node:internal/source_map/source_map_cache:43:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 199,
    "tm": 123671,
    "source": {
      "script": 96,
      "start": 1418,
      "end": 1563,
      "positions": "C0O1425C6O1468C11O1489C17O1489C22O1468C26O1536C30O1561",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setSourceMapsEnabled node:internal/source_map/source_map_cache:50:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 200,
    "tm": 123736,
    "source": {
      "script": 96,
      "start": 1594,
      "end": 2209,
      "positions": "C0O1604C8O1604C13O1709C19O1709C24O1648C29O1674C34O1738C38O1767C42O1822C48O1822C53O1796C58O1878C64O1936C70O2095C76O2095C81O2068C86O2127C90O2183C92O2201C99O2208",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "validateBoolean node:internal/validators:138:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 201,
    "tm": 123809,
    "source": {
      "script": 17,
      "start": 4042,
      "end": 4153,
      "positions": "C0O4060C6O4096C22O4102C27O4096C29O4152",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "wrapSafe node:internal/modules/cjs/loader:1017:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 202,
    "tm": 123937,
    "source": {
      "script": 99,
      "start": 31692,
      "end": 32552,
      "positions": "C0O31692C9O31735C17O31770C22O31777C27O31777C33O31796C40O31806C45O31823C52O31840C56O31929C64O31806C70O32084C74O32101C81O32111C86O32127C98O32242C102O32258C113O32111C118O32427C130O32450C135O32462C142O32473C147O32502C157O32502C162O32536C164O32536",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "compileFunction node:vm:308:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 203,
    "tm": 124134,
    "source": {
      "script": 85,
      "start": 9562,
      "end": 11817,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:167:39",
    "type": "JS",
    "kind": "Unopt",
    "func": 204,
    "tm": 125480,
    "source": {
      "script": 17,
      "start": 4966,
      "end": 5244,
      "positions": "C16O5002C21O5007C27O5034C43O5040C48O5034C49O5104C56O5111C61O5145C66O5168C71O5185C87O5191C92O5185C94O5243",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:vm:313:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 205,
    "tm": 125546,
    "source": {
      "script": 85,
      "start": 9752,
      "end": 9803,
      "positions": "C0O9766C10O9798C21O9766C26O9803",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:100:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 206,
    "tm": 125619,
    "source": {
      "script": 17,
      "start": 2861,
      "end": 3371,
      "positions": "C0O2892C3O2897C9O2920C15O2959C31O2965C36O2959C37O3024C42O3029C48O3061C64O3067C69O3061C70O3138C80O3190C90O3229C109O3196C114O3190C115O3266C120O3288C125O3301C141O3307C146O3301C148O3370",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/iramgutierrez/.nvm/versions/node/v16.13.2/lib/node_modules/0x/lib/preload/no-cluster.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 207,
    "tm": 125727,
    "source": {
      "script": 115,
      "start": 0,
      "end": 119,
      "positions": "C0O0C4O119",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/iramgutierrez/.nvm/versions/node/v16.13.2/lib/node_modules/0x/lib/preload/no-cluster.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 208,
    "tm": 125788,
    "source": {
      "script": 115,
      "start": 0,
      "end": 119,
      "positions": "C0O16C3O16C8O44C21O44C28O118",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "importModuleDynamicallyWrap node:internal/vm/module:435:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 209,
    "tm": 125946,
    "source": {
      "script": 113,
      "start": 11705,
      "end": 12148,
      "positions": "C0O11705C13O11774C18O12146",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "makeRequireFunction node:internal/modules/cjs/helpers:58:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 210,
    "tm": 126066,
    "source": {
      "script": 98,
      "start": 1708,
      "end": 3678,
      "positions": "C0O1708C22O1744C25O1748C29O1744C31O1768C33O1779C53O1811C58O1815C69O1831C73O1811C75O1858C81O1858C83O1885C89O1894C95O1922C104O3082C109O3313C111O3329C115O3469C117O3483C121O3495C126O3518C130O3508C134O3583C137O3611C141O3602C145O3627C148O3650C152O3641C156O3661C158O3676",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "require node:internal/modules/cjs/helpers:101:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 211,
    "tm": 126158,
    "source": {
      "script": 98,
      "start": 3108,
      "end": 3154,
      "positions": "C0O3123C3O3134C8O3134C13O3148",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/helpers:29:66",
    "type": "JS",
    "kind": "Unopt",
    "func": 212,
    "tm": 126223,
    "source": {
      "script": 98,
      "start": 810,
      "end": 835,
      "positions": "C0O822C2O828C9O834",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "compileForPublicLoader node:internal/bootstrap/loaders:246:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 213,
    "tm": 126295,
    "source": {
      "script": 9,
      "start": 7543,
      "end": 8215,
      "positions": "C0O7562C6O7706C16O7749C33O7712C38O7706C39O7786C44O7786C48O7828C54O8017C61O8048C69O8017C75O8072C80O8090C90O8106C93O8122C98O8106C102O8088C106O8147C111O8147C115O8172C120O8172C124O8203C128O8211",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:cluster:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 214,
    "tm": 126399,
    "source": {
      "script": 116,
      "start": 0,
      "end": 1291,
      "positions": "C0O0C4O1291",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:cluster:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 215,
    "tm": 126564,
    "source": {
      "script": 116,
      "start": 0,
      "end": 1291,
      "positions": "C0O1172C3O1200C7O1189C19O1227C24O1272C29O1244C33O1242C38O1290",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/primary:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 216,
    "tm": 127011,
    "source": {
      "script": 117,
      "start": 0,
      "end": 10794,
      "positions": "C0O0C4O10794",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/primary:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 217,
    "tm": 128070
  },
  {
    "name": " node:child_process:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 218,
    "tm": 128913,
    "source": {
      "script": 118,
      "start": 0,
      "end": 24635,
      "positions": "C0O0C4O24635",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:child_process:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 219,
    "tm": 131280,
    "source": {
      "script": 118,
      "start": 0,
      "end": 24635,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/child_process:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 220,
    "tm": 132502,
    "source": {
      "script": 119,
      "start": 0,
      "end": 30803,
      "positions": "C0O0C4O30803",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/child_process:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 221,
    "tm": 135574
  },
  {
    "name": "<instance_members_initializer> node:internal/child_process:524:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 222,
    "tm": 135705,
    "source": {
      "script": 119,
      "start": 13654,
      "end": 13711,
      "positions": "C3O13665C16O13681C26O13706C34O13711",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:net:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 223,
    "tm": 137169,
    "source": {
      "script": 120,
      "start": 0,
      "end": 47747,
      "positions": "C0O0C4O47747",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:net:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 224,
    "tm": 141644
  },
  {
    "name": " node:internal/net:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 225,
    "tm": 142288,
    "source": {
      "script": 121,
      "start": 0,
      "end": 1749,
      "positions": "C0O0C4O1749",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/net:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 226,
    "tm": 142496,
    "source": {
      "script": 121,
      "start": 0,
      "end": 1749,
      "positions": "C0O0C45O25C50O35C56O58C61O99C64O99C69O116C73O99C75O149C78O149C83O133C89O187C92O187C96O187C98O246C101O316C106O320C119O335C124O360C129O375C142O360C147O360C149O417C152O457C160O483C173O499C183O473C192O521C205O537C218O547C228O511C237O569C250O586C263O597C273O559C282O625C295O643C308O658C321O669C331O615C340O697C353O715C366O730C379O741C389O687C398O769C411O787C424O802C437O813C447O759C456O841C469O859C482O874C495O885C505O831C514O919C527O934C540O947C550O903C556O965C562O457C567O457C569O1633C576O1654C582O1662C588O1672C594O1682C601O1721C611O1648C616O1748",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/dtrace:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 227,
    "tm": 142880,
    "source": {
      "script": 122,
      "start": 0,
      "end": 568,
      "positions": "C0O0C4O568",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/dtrace:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 228,
    "tm": 142989,
    "source": {
      "script": 122,
      "start": 0,
      "end": 568,
      "positions": "C0O30C3O30C8O322C17O334C25O68C36O109C47O151C58O192C69O234C80O277C91O368C98O389C104O419C110O450C116O480C122O511C128O543C134O383C139O567",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "protoGetter node:net:718:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 229,
    "tm": 143254,
    "source": {
      "script": 120,
      "start": 18631,
      "end": 18771,
      "positions": "C0O18652C8O18680C13O18691C20O18755C27O18652C33O18770",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:dgram:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 230,
    "tm": 144085,
    "source": {
      "script": 123,
      "start": 0,
      "end": 27703,
      "positions": "C0O0C4O27703",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:dgram:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 231,
    "tm": 146580
  },
  {
    "name": " node:internal/dgram:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 232,
    "tm": 146989,
    "source": {
      "script": 124,
      "start": 0,
      "end": 1849,
      "positions": "C0O0C4O1849",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/dgram:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 233,
    "tm": 147186,
    "source": {
      "script": 124,
      "start": 0,
      "end": 1849,
      "positions": "C0O0C56O25C62O50C67O94C73O94C78O84C83O138C86O138C91O130C97O195C100O195C105O175C111O263C117O263C122O230C128O241C134O317C137O317C142O303C148O350C154O403C157O403C162O431C163O431C165O1776C172O1797C178O1813C184O1836C190O1791C195O1848",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/socket_list:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 234,
    "tm": 147563,
    "source": {
      "script": 125,
      "start": 0,
      "end": 2705,
      "positions": "C0O0C4O2705",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/socket_list:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 235,
    "tm": 147836,
    "source": {
      "script": 125,
      "start": 0,
      "end": 2705,
      "positions": "C0O0C8O57C11O57C16O83C21O23C27O113C30O113C35O218C73O1525C101O2649C108O2668C114O2684C120O2664C125O2704",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "customPromiseExecFunction node:child_process:231:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 236,
    "tm": 148064,
    "source": {
      "script": 118,
      "start": 6605,
      "end": 6969,
      "positions": "C0O6605C9O6619C13O6967",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/round_robin_handle:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 237,
    "tm": 148238,
    "source": {
      "script": 126,
      "start": 0,
      "end": 3155,
      "positions": "C0O0C4O3155",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/round_robin_handle:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 238,
    "tm": 148512,
    "source": {
      "script": 126,
      "start": 0,
      "end": 3155,
      "positions": "C0O0C37O25C43O41C49O63C55O86C61O97C67O139C70O139C74O139C76O179C79O179C83O179C85O218C88O218C93O203C99O275C102O275C107O261C113O305C115O320C119O1146C128O1160C132O1811C141O1828C145O2175C154O2196C158O2563C167O2581C172O3154",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/utils:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 239,
    "tm": 148669,
    "source": {
      "script": 127,
      "start": 0,
      "end": 1053,
      "positions": "C0O0C4O1053",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/utils:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 240,
    "tm": 148785,
    "source": {
      "script": 127,
      "start": 0,
      "end": 1053,
      "positions": "C0O0C24O25C30O41C35O68C42O89C48O103C54O83C58O134C60O134C65O134C67O159C68O159C71O1052",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/shared_handle:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 241,
    "tm": 148971,
    "source": {
      "script": 128,
      "start": 0,
      "end": 1102,
      "positions": "C0O0C4O1102",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/shared_handle:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 242,
    "tm": 149089,
    "source": {
      "script": 128,
      "start": 0,
      "end": 1102,
      "positions": "C0O0C22O22C28O62C31O62C35O62C37O104C40O104C44O104C46O143C49O143C53O143C55O160C57O175C61O685C70O699C74O861C83O878C88O1101",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/worker:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 243,
    "tm": 149246,
    "source": {
      "script": 129,
      "start": 0,
      "end": 1315,
      "positions": "C0O0C4O1315",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/worker:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 244,
    "tm": 149392,
    "source": {
      "script": 129,
      "start": 0,
      "end": 1315,
      "positions": "C0O0C17O25C22O49C28O102C31O102C35O102C37O122C39O137C43O812C46O840C54O864C59O812C64O876C70O876C75O921C78O928C87O943C91O1009C94O1016C103O1031C107O1117C110O1124C119O1141C123O1235C126O1242C135O1264C140O1314",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "EventEmitter node:events:84:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 245,
    "tm": 149486,
    "source": {
      "script": 13,
      "start": 2479,
      "end": 2527,
      "positions": "C0O2490C3O2503C8O2508C13O2508C20O2526",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "EventEmitter.init node:events:194:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 246,
    "tm": 149553,
    "source": {
      "script": 13,
      "start": 5579,
      "end": 6168,
      "positions": "C0O5600C6O5636C13O5648C16O5648C21O5674C25O5644C30O5690C32O5705C37O5705C41O5703C45O5729C46O5747C50O5785C60O5778C64O5817C71O5825C80O5852C85O5873C93O5852C98O5926C100O5931C105O5943C108O5956C113O5943C117O5941C123O6112C125O6117C131O6142C138O6152C140O6151C143O6127C148O6167",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getESMFacade node:internal/bootstrap/loaders:264:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 247,
    "tm": 149697,
    "source": {
      "script": 9,
      "start": 8231,
      "end": 8860,
      "positions": "C0O8231C8O8249C14O8269C18O8276C19O8304C29O8304C34O8289C39O8352C42O8365C51O8396C53O8396C55O8426C62O8451C67O8426C72O8468C82O8468C87O8516C89O8568C102O8530C107O8528C111O8774C116O8781C121O8781C125O8805C130O8812C140O8812C146O8849C150O8856",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/bootstrap/loaders:273:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 248,
    "tm": 149814,
    "source": {
      "script": 9,
      "start": 8595,
      "end": 8700,
      "positions": "C0O8608C5O8621C10O8621C14O8649C24O8670C27O8683C32O8649C39O8699",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "syncExports node:internal/bootstrap/loaders:287:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 249,
    "tm": 149875,
    "source": {
      "script": 9,
      "start": 9167,
      "end": 9500,
      "positions": "C0O9195C5O9220C11O9249C13O9262C17O9254C22O9304C24O9309C28O9322C30O9337C35O9352C37O9375C42O9382C51O9434C54O9446C59O9472C67O9434C73O9382C79O9271C84O9236C88O9499",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getOwn node:internal/bootstrap/loaders:180:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 250,
    "tm": 149927,
    "source": {
      "script": 9,
      "start": 5498,
      "end": 5652,
      "positions": "C0O5534C5O5541C14O5595C26O5595C34O5650",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "syncExports node:internal/bootstrap/loaders:287:14",
    "type": "JS",
    "kind": "Baseline",
    "func": 249,
    "tm": 149997,
    "source": {
      "script": 9,
      "start": 9167,
      "end": 9500,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "validateString node:internal/validators:117:24",
    "type": "JS",
    "kind": "Baseline",
    "func": 14,
    "tm": 150029,
    "source": {
      "script": 17,
      "start": 3398,
      "end": 3507,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "internalBinding node:internal/bootstrap/loaders:164:45",
    "type": "JS",
    "kind": "Baseline",
    "func": 8,
    "tm": 150057,
    "source": {
      "script": 9,
      "start": 5115,
      "end": 5353,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "deprecate node:internal/util:96:19",
    "type": "JS",
    "kind": "Baseline",
    "func": 113,
    "tm": 150091,
    "source": {
      "script": 12,
      "start": 2408,
      "end": 3584,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getOwn node:internal/bootstrap/loaders:180:16",
    "type": "JS",
    "kind": "Baseline",
    "func": 250,
    "tm": 150129,
    "source": {
      "script": 9,
      "start": 5498,
      "end": 5652,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "(?:^|\\/)\\.?\\.$",
    "timestamp": 150330,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": " /Users/iramgutierrez/.nvm/versions/node/v16.13.2/lib/node_modules/0x/lib/preload/redir-stdout.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 251,
    "tm": 150678,
    "source": {
      "script": 130,
      "start": 0,
      "end": 494,
      "positions": "C0O0C4O494",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/iramgutierrez/.nvm/versions/node/v16.13.2/lib/node_modules/0x/lib/preload/redir-stdout.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 252,
    "tm": 150760,
    "source": {
      "script": 130,
      "start": 0,
      "end": 494,
      "positions": "C0O25C3O25C8O56C13O118C16O130C21O155C30O127C42O185C53O227C65O219C70O219C72O294C76O301C81O316C93O392C101O301C106O412C110O419C115O434C119O442C135O476C140O484C148O419C156O493",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get BlockList node:net:1779:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 253,
    "tm": 150868,
    "source": {
      "script": 120,
      "start": 47366,
      "end": 47455,
      "positions": "C0O47375C14O47389C19O47418C26O47385C32O47434C36O47451",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/blocklist:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 254,
    "tm": 151065,
    "source": {
      "script": 131,
      "start": 0,
      "end": 3877,
      "positions": "C0O0C4O3877",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/blocklist:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 255,
    "tm": 151421,
    "source": {
      "script": 131,
      "start": 0,
      "end": 3877,
      "positions": "C0O0C35O25C41O36C46O60C51O127C54O127C59O106C65O204C68O204C73O190C78O293C81O293C86O241C92O267C98O385C101O385C106O339C111O357C116O367C121O450C124O450C129O438C135O501C138O501C142O501C144O545C147O545C152O528C158O611C161O611C166O637C171O584C177O688C180O688C185O654C191O669C197O745C204O884C241O3223C251O3384C278O3519C301O3691C306O3725C311O3735C315O3713C319O3787C324O3808C329O3748C334O3821C341O3842C347O3855C353O3836C358O3876",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/socketaddress:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 256,
    "tm": 151709,
    "source": {
      "script": 132,
      "start": 0,
      "end": 3207,
      "positions": "C0O0C4O3207",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/socketaddress:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 257,
    "tm": 151993,
    "source": {
      "script": 132,
      "start": 0,
      "end": 3207,
      "positions": "C0O0C38O25C43O49C48O143C51O143C56O100C62O118C68O129C74O257C77O257C82O185C88O203C94O221C100O237C106O345C109O345C114O345C119O313C125O419C128O419C133O405C138O466C141O466C146O454C152O557C155O557C160O511C165O529C170O539C175O618C178O618C182O618C184O653C187O653C191O653C193O701C226O2071C236O2313C246O2482C279O2877C302O2988C307O3028C312O3038C316O3010C320O3094C325O3119C330O3051C335O3132C342O3153C348O3170C354O3195C360O3147C365O3206",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get SocketAddress node:net:1783:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 258,
    "tm": 152145,
    "source": {
      "script": 120,
      "start": 47476,
      "end": 47581,
      "positions": "C0O47485C14O47503C19O47536C26O47499C32O47556C36O47577",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:worker_threads:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 259,
    "tm": 152244,
    "source": {
      "script": 133,
      "start": 0,
      "end": 686,
      "positions": "C0O0C4O686",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:worker_threads:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 260,
    "tm": 152338,
    "source": {
      "script": 133,
      "start": 0,
      "end": 686,
      "positions": "C0O139C3O139C8O25C13O41C18O54C23O72C28O94C33O116C38O128C43O285C46O285C51O178C56O193C61O211C66O239C71O263C76O353C79O353C84O327C89O382C96O403C102O419C108O434C114O452C120O476C126O504C132O528C138O546C144O558C150O571C156O621C162O641C168O663C174O397C179O685",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/worker:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 261,
    "tm": 152774,
    "source": {
      "script": 134,
      "start": 0,
      "end": 15348,
      "positions": "C0O0C4O15348",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/worker:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 262,
    "tm": 153867
  },
  {
    "name": " node:internal/error_serdes:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 263,
    "tm": 154233,
    "source": {
      "script": 135,
      "start": 0,
      "end": 4030,
      "positions": "C0O0C4O4030",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/error_serdes:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 264,
    "tm": 154551,
    "source": {
      "script": 135,
      "start": 0,
      "end": 4030,
      "positions": "C0O0C100O30C106O30C111O47C115O30C117O66C123O91C128O100C133O113C139O138C145O154C151O170C157O194C163O228C169O257C175O281C180O295C186O322C191O336C196O354C201O365C207O386C212O401C217O414C222O467C223O467C225O496C227O496C229O523C231O523C233O542C240O546C246O553C252O564C258O576C264O586C270O599C276O615C282O542C284O658C287O670C294O658C299O658C301O2038C302O2038C304O2235C305O2235C307O3156C308O3156C310O3975C317O3994C323O4010C329O3990C334O4029",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Socket node:net:283:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 265,
    "tm": 154908
  },
  {
    "name": "Duplex node:internal/streams/duplex:52:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 266,
    "tm": 155048,
    "source": {
      "script": 48,
      "start": 1951,
      "end": 2360,
      "positions": "C0O1965C2O1976C7O2000C12O2007C17O2027C18O2031C23O2040C28O2040C34O2063C39O2072C44O2072C50O2095C51O2114C55O2125C59O2156C65O2165C70O2182C71O2196C75O2222C81O2231C86O2248C87O2262C91O2288C97O2302C102O2321C103O2340C108O2359",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Readable node:internal/streams/readable:181:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 267,
    "tm": 155476,
    "source": {
      "script": 49,
      "start": 6246,
      "end": 7126,
      "positions": "C0O6246C9O6260C16O6271C21O6297C28O6304C33O6326C34O6481C41O6497C44O6504C48O6486C52O6515C71O6537C76O6535C80O6584C84O6622C92O6649C95O6670C99O6660C103O6700C111O6730C114O6754C118O6744C122O6787C130O6819C133O6845C137O6835C141O6872C149O6883C151O6899C158O6932C166O6899C171O6954C178O6961C186O6961C192O6985C199O6997C212O6997C219O7125",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Stream node:internal/streams/legacy:10:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 268,
    "tm": 158450,
    "source": {
      "script": 50,
      "start": 127,
      "end": 160,
      "positions": "C0O138C5O141C10O141C17O159",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "ReadableState node:internal/streams/readable:78:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 269,
    "tm": 158917,
    "source": {
      "script": 49,
      "start": 2519,
      "end": 6226,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getHighWaterMark node:internal/streams/state:19:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 270,
    "tm": 159028,
    "source": {
      "script": 53,
      "start": 424,
      "end": 832,
      "positions": "C0O478C12O478C18O529C21O552C26O557C33O585C38O611C47O633C56O678C69O684C74O678C75O732C80O739C84O754C85O781C88O818C93O788C97O830",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "highWaterMarkFrom node:internal/streams/state:10:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 271,
    "tm": 159146,
    "source": {
      "script": 53,
      "start": 168,
      "end": 309,
      "positions": "C0O218C7O250C15O270C19O288C25O307",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getDefaultHighWaterMark node:internal/streams/state:15:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 272,
    "tm": 159180,
    "source": {
      "script": 53,
      "start": 343,
      "end": 397,
      "positions": "C0O360C12O395",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "BufferList node:internal/streams/buffer_list:14:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 273,
    "tm": 159226,
    "source": {
      "script": 52,
      "start": 265,
      "end": 338,
      "positions": "C0O274C1O284C5O296C6O306C10O318C11O330C16O337",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "construct node:internal/streams/destroy:225:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 274,
    "tm": 159624,
    "source": {
      "script": 47,
      "start": 4626,
      "end": 5014,
      "positions": "C0O4661C8O4694C9O4701C10O4726C15O4761C20O4780C24O4793C25O4807C29O4822C33O4835C34O4849C38O4872C45O4877C48O4872C54O4908C61O4922C64O4908C72O4934C77O4959C78O4966C79O4974C82O4982C90O4982C97O5013",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Writable node:internal/streams/writable:219:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 275,
    "tm": 160262,
    "source": {
      "script": 56,
      "start": 7409,
      "end": 8929,
      "positions": "C0O7409C9O7983C16O8000C19O8007C23O7989C27O8019C33O8037C44O8037C51O8093C58O8100C63O8122C64O8126C83O8148C88O8146C92O8195C96O8233C104O8261C107O8283C111O8273C115O8314C123O8343C126O8366C130O8356C134O8398C142O8428C145O8452C149O8442C153O8485C161O8513C164O8535C168O8525C172O8566C180O8598C183O8624C187O8614C191O8651C197O8665C204O8698C212O8665C217O8720C224O8727C232O8727C238O8751C245O8763C258O8763C265O8928",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "WritableState node:internal/streams/writable:77:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 276,
    "tm": 162047,
    "source": {
      "script": 56,
      "start": 2482,
      "end": 6983,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "resetBuffer node:internal/streams/writable:202:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 277,
    "tm": 162153,
    "source": {
      "script": 56,
      "start": 7005,
      "end": 7117,
      "positions": "C0O7017C2O7032C6O7040C7O7060C11O7067C12O7084C16O7094C17O7108C22O7116",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "set node:internal/streams/readable:1175:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 278,
    "tm": 162216,
    "source": {
      "script": 49,
      "start": 35837,
      "end": 35964,
      "positions": "C0O35887C6O35918C13O35946C15O35942C20O35963",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createHandle node:net:137:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 279,
    "tm": 162274,
    "source": {
      "script": 120,
      "start": 3597,
      "end": 3957,
      "positions": "C0O3617C13O3617C18O3660C23O3660C28O3683C30O3692C35O3710C42O3733C46O3745C49O3759C57O3768C60O3782C67O3717C72O3795C73O3803C75O3812C80O3829C87O3851C91O3863C94O3876C102O3885C105O3898C112O3836C117O3911C118O3919C125O3925C130O3919",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "set node:net:1707:6",
    "type": "JS",
    "kind": "Unopt",
    "func": 280,
    "tm": 162390,
    "source": {
      "script": 120,
      "start": 45570,
      "end": 45603,
      "positions": "C0O45576C2O45588C7O45597C13O45601",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:net:1706:6",
    "type": "JS",
    "kind": "Unopt",
    "func": 281,
    "tm": 162553,
    "source": {
      "script": 120,
      "start": 45535,
      "end": 45563,
      "positions": "C0O45540C2O45552C4O45551C7O45561",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Readable.on node:internal/streams/readable:875:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 282,
    "tm": 162732,
    "source": {
      "script": 49,
      "start": 27773,
      "end": 28672,
      "positions": "C0O27798C5O27805C10O27815C15O27818C29O27818C35O27859C40O27878C42O27885C47O28067C55O28067C62O28093C65O28060C69O28186C75O28194C80O28216C85O28216C91O28235C93O28242C98O28275C104O28296C110O28323C112O28368C118O28347C122O28382C123O28396C127O28411C128O28433C132O28448C140O28475C145O28489C150O28448C155O28515C161O28533C164O28533C170O28577C176O28596C179O28604C187O28604C193O28659C195O28670",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initSocketHandle node:net:254:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 283,
    "tm": 162826,
    "source": {
      "script": 120,
      "start": 6321,
      "end": 6899,
      "positions": "C0O6337C5O6337C9O6353C10O6368C14O6454C20O6474C27O6482C32O6496C36O6513C43O6530C45O6528C49O6548C51O6553C57O6591C62O6572C66O6570C70O6620C72O6625C74O6624C78O6639C80O6675C82O6680C84O6679C88O6699C90O6740C94O6758C99O6763C105O6796C106O6803C107O6812C109O6817C114O6826C118O6856C123O6864C128O6864C134O6898",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "undestroy node:internal/streams/destroy:160:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 284,
    "tm": 162892,
    "source": {
      "script": 47,
      "start": 3064,
      "end": 3661,
      "positions": "C0O3086C5O3119C10O3138C14O3151C15O3165C19O3177C20O3186C24O3199C25O3214C29O3227C30O3239C34O3252C35O3262C39O3274C40O3289C44O3302C45O3312C49O3325C50O3333C54O3346C55O3359C59O3375C63O3388C64O3402C68O3414C69O3426C73O3439C74O3448C78O3461C79O3476C83O3489C84O3499C88O3511C89O3526C93O3539C94O3547C98O3560C99O3569C103O3582C104O3596C108O3609C109O3623C113O3636C114O3647C119O3660",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getNewAsyncId node:net:156:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 285,
    "tm": 162974,
    "source": {
      "script": 120,
      "start": 3982,
      "end": 4098,
      "positions": "C0O3995C4O4028C14O4061C17O4061C22O4083C27O4083C31O4096",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/bootstrap/pre_execution:314:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 286,
    "tm": 163025,
    "source": {
      "script": 92,
      "start": 10085,
      "end": 10118,
      "positions": "C0O10096C4O10112",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get /Users/iramgutierrez/.nvm/versions/node/v16.13.2/lib/node_modules/0x/lib/preload/redir-stdout.js:19:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 287,
    "tm": 163066,
    "source": {
      "script": 130,
      "start": 392,
      "end": 404,
      "positions": "C0O398C4O404",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "realpathSync node:fs:2408:22",
    "type": "JS",
    "kind": "Baseline",
    "func": 152,
    "tm": 163321,
    "source": {
      "script": 77,
      "start": 63994,
      "end": 67905,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:vm:313:27",
    "type": "JS",
    "kind": "Baseline",
    "func": 205,
    "tm": 163351,
    "source": {
      "script": 85,
      "start": 9752,
      "end": 9803,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "noop node:internal/util/debuglog:47:14",
    "type": "JS",
    "kind": "Baseline",
    "func": 136,
    "tm": 163370,
    "source": {
      "script": 40,
      "start": 1419,
      "end": 1427,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "debuglog node:internal/util/debuglog:71:18",
    "type": "JS",
    "kind": "Baseline",
    "func": 53,
    "tm": 163397,
    "source": {
      "script": 40,
      "start": 2232,
      "end": 3279,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "canBeRequiredByUsers node:internal/bootstrap/loaders:240:30",
    "type": "JS",
    "kind": "Baseline",
    "func": 138,
    "tm": 163418,
    "source": {
      "script": 9,
      "start": 7353,
      "end": 7449,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/iramgutierrez/.nvm/versions/node/v16.13.2/lib/node_modules/0x/lib/preload/soft-exit.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 288,
    "tm": 163653,
    "source": {
      "script": 136,
      "start": 0,
      "end": 85,
      "positions": "C0O0C4O85",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/iramgutierrez/.nvm/versions/node/v16.13.2/lib/node_modules/0x/lib/preload/soft-exit.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 289,
    "tm": 163733,
    "source": {
      "script": 136,
      "start": 0,
      "end": 85,
      "positions": "C0O14C4O22C12O35C16O43C21O22C27O49C31O57C39O71C43O79C48O57C55O84",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:466:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 290,
    "tm": 163868,
    "source": {
      "script": 92,
      "start": 15016,
      "end": 15238,
      "positions": "C0O15023C8O15027C14O15072C17O15080C28O15080C34O15192C40O15192C45O15229C49O15237",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "executeUserEntryPoint node:internal/modules/run_main:74:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 291,
    "tm": 163931,
    "source": {
      "script": 114,
      "start": 2320,
      "end": 2625,
      "positions": "C7O2336C14O2340C22O2370C25O2370C30O2416C33O2416C38O2452C40O2476C45O2487C50O2476C56O2588C61O2595C73O2595C79O2624",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "resolveMainPath node:internal/modules/run_main:11:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 292,
    "tm": 163982,
    "source": {
      "script": 114,
      "start": 296,
      "end": 710,
      "positions": "C0O468C5O475C12O485C15O490C20O490C30O475C36O520C38O539C39O546C40O579C48O579C53O625C55O656C60O667C65O692C67O708",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "shouldUseESMLoader node:internal/modules/run_main:26:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 293,
    "tm": 164177,
    "source": {
      "script": 114,
      "start": 739,
      "end": 1299,
      "positions": "C0O773C8O773C13O816C15O836C16O848C17O891C25O891C30O948C32O980C37O996C38O1008C39O1056C45O1072C51O1072C58O1119C59O1131C60O1134C66O1151C72O1151C79O1198C80O1211C81O1226C86O1226C91O1256C93O1274C98O1279C105O1284C108O1297",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "prepareStackTrace node:internal/errors:90:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 294,
    "tm": 165488,
    "source": {
      "script": 11,
      "start": 2163,
      "end": 3651,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "maybeOverridePrepareStackTrace node:internal/errors:135:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 295,
    "tm": 169789,
    "source": {
      "script": 11,
      "start": 3693,
      "end": 4400,
      "positions": "C0O3921C7O3926C18O3986C23O3992C28O3992C34O4024C35O4247C40O4275C48O4315C53O4339C58O4339C64O4371C65O4379C69O4398",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "enrichCJSError node:internal/modules/esm/translators:152:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 296,
    "tm": 169955,
    "source": {
      "script": 111,
      "start": 4306,
      "end": 4821,
      "positions": "C0O4335C7O4354C10O4354C17O4384C19O4380C26O4414C31O4427C35O4438C41O4438C47O4414C53O4683C63O4779C67O4683C72O4820",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "hasEsmSyntax node:internal/modules/cjs/helpers:204:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 297,
    "tm": 170048,
    "source": {
      "script": 98,
      "start": 6103,
      "end": 6584,
      "positions": "C0O6114C8O6114C12O6165C18O6165C23O6212C28O6227C33O6259C38O6265C43O6259C53O6250C54O6337C55O6350C56O6358C61O6389C71O6365C76O6582",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/deps/acorn/acorn/dist/acorn:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 298,
    "tm": 177520,
    "source": {
      "script": 138,
      "start": 0,
      "end": 215059,
      "positions": "C0O0C4O215059",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/deps/acorn/acorn/dist/acorn:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 299,
    "tm": 195601,
    "source": {
      "script": 138,
      "start": 0,
      "end": 215059,
      "positions": "C0O0C13O0C23O250C29O215058",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/deps/acorn/acorn/dist/acorn:5:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 300,
    "tm": 195628
  },
  {
    "name": " node:internal/deps/acorn/acorn/dist/acorn:273:44",
    "type": "JS",
    "kind": "Unopt",
    "func": 301,
    "tm": 196149,
    "source": {
      "script": 138,
      "start": 19318,
      "end": 19385,
      "positions": "C0O19326C3O19348C8O19348C16O19358C19O19383",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/deps/acorn/acorn/dist/acorn:1:11",
    "type": "JS",
    "kind": "Unopt",
    "func": 302,
    "tm": 196357,
    "source": {
      "script": 138,
      "start": 10,
      "end": 250,
      "positions": "C0O32C15O95C28O148C32O155C47O161C56O204C58O214C63O228C65O241C69O220C74O249",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "TokenType node:internal/deps/acorn/acorn/dist/acorn:118:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 303,
    "tm": 197451,
    "source": {
      "script": 138,
      "start": 13711,
      "end": 14114,
      "positions": "C0O13731C4O13754C7O13770C9O13781C13O13814C17O13807C21O13852C27O13843C31O13893C37O13884C41O13930C47O13921C51O13965C57O13956C61O14000C67O13991C71O14034C77O14025C81O14065C91O14058C95O14084C96O14103C101O14113",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "binop node:internal/deps/acorn/acorn/dist/acorn:133:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 304,
    "tm": 197678,
    "source": {
      "script": 138,
      "start": 14133,
      "end": 14215,
      "positions": "C0O14152C3O14173C10O14205C19O14159C24O14211",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "kw node:internal/deps/acorn/acorn/dist/acorn:143:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 305,
    "tm": 197787,
    "source": {
      "script": 138,
      "start": 14415,
      "end": 14568,
      "positions": "C0O14437C4O14463C7O14482C9O14498C13O14510C27O14536C33O14534C39O14564",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "kw node:internal/deps/acorn/acorn/dist/acorn:143:14",
    "type": "JS",
    "kind": "Baseline",
    "func": 305,
    "tm": 197876,
    "source": {
      "script": 138,
      "start": 14415,
      "end": 14568,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isInt32 node:internal/validators:35:17",
    "type": "JS",
    "kind": "Baseline",
    "func": 179,
    "tm": 197903,
    "source": {
      "script": 17,
      "start": 715,
      "end": 758,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readPackageScope node:internal/modules/cjs/loader:321:26",
    "type": "JS",
    "kind": "Baseline",
    "func": 142,
    "tm": 197984,
    "source": {
      "script": 99,
      "start": 8919,
      "end": 9437,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isUint32 node:internal/validators:39:18",
    "type": "JS",
    "kind": "Baseline",
    "func": 173,
    "tm": 198006,
    "source": {
      "script": 17,
      "start": 777,
      "end": 822,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isUint8Array node:internal/util/types:13:22",
    "type": "JS",
    "kind": "Baseline",
    "func": 159,
    "tm": 198070,
    "source": {
      "script": 15,
      "start": 257,
      "end": 342,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "TokenType node:internal/deps/acorn/acorn/dist/acorn:118:37",
    "type": "JS",
    "kind": "Baseline",
    "func": 303,
    "tm": 198141,
    "source": {
      "script": 138,
      "start": 13711,
      "end": 14114,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "binop node:internal/deps/acorn/acorn/dist/acorn:133:17",
    "type": "JS",
    "kind": "Baseline",
    "func": 304,
    "tm": 198176,
    "source": {
      "script": 138,
      "start": 14133,
      "end": 14215,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "TokContext node:internal/deps/acorn/acorn/dist/acorn:2172:39",
    "type": "JS",
    "kind": "Unopt",
    "func": 306,
    "tm": 198407,
    "source": {
      "script": 138,
      "start": 90757,
      "end": 90972,
      "positions": "C0O90815C2O90826C6O90839C8O90855C10O90851C14O90867C16O90890C18O90886C22O90909C24O90923C28O90939C30O90958C32O90954C37O90971",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "buildUnicodeData node:internal/deps/acorn/acorn/dist/acorn:3606:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 307,
    "tm": 198530,
    "source": {
      "script": 138,
      "start": 151417,
      "end": 151939,
      "positions": "C0O151445C3O151450C16O151516C22O151530C28O151536C32O151481C40O151586C51O151614C67O151704C71O151673C87O151463C94O151740C99O151772C104O151782C108O151768C112O151797C117O151814C122O151824C126O151810C130O151848C135O151865C140O151875C144O151861C148O151889C153O151907C158O151917C162O151903C167O151938",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "wordsRegexp node:internal/deps/acorn/acorn/dist/acorn:277:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 308,
    "tm": 198603,
    "source": {
      "script": 138,
      "start": 19411,
      "end": 19488,
      "positions": "C0O19425C7O19458C20O19458C26O19450C32O19477C38O19432C43O19484",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "parse node:internal/deps/acorn/acorn/dist/acorn:620:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 309,
    "tm": 199283,
    "source": {
      "script": 138,
      "start": 34125,
      "end": 34191,
      "positions": "C0O34148C8O34155C14O34180C19O34180C23O34187",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Parser node:internal/deps/acorn/acorn/dist/acorn:489:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 310,
    "tm": 199425
  },
  {
    "name": "getOptions node:internal/deps/acorn/acorn/dist/acorn:416:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 311,
    "tm": 199569,
    "source": {
      "script": 138,
      "start": 25662,
      "end": 26708,
      "positions": "C0O25662C5O25689C7O25714C22O25707C35O25707C36O25738C44O25753C51O25761C60O25782C72O25804C75O25751C82O25698C85O25830C92O25842C97O25864C103O25884C109O25914C116O25943C129O26005C133O26013C139O26029C140O26052C144O26068C148O26076C156O26076C161O26214C163O26234C169O26263C178O26275C183O26292C193O26312C197O26344C204O26407C211O26419C214O26397C218O26431C223O26451C228O26435C234O26490C238O26482C240O26505C244O26521C248O26582C253O26602C258O26586C264O26622C269O26671C274O26642C279O26640C283O26690C285O26704",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "has node:internal/deps/acorn/acorn/dist/acorn:269:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 312,
    "tm": 199636,
    "source": {
      "script": 138,
      "start": 19206,
      "end": 19273,
      "positions": "C0O19228C3O19250C8O19250C14O19269",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$5.curPosition node:internal/deps/acorn/acorn/dist/acorn:3423:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 313,
    "tm": 199825,
    "source": {
      "script": 138,
      "start": 141198,
      "end": 141313,
      "positions": "C0O141216C5O141224C11O141243C14O141268C19O141282C24O141293C28O141286C34O141250C39O141303C41O141312",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$3.initialContext node:internal/deps/acorn/acorn/dist/acorn:2195:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 314,
    "tm": 199872,
    "source": {
      "script": 138,
      "start": 91584,
      "end": 91620,
      "positions": "C0O91593C10O91609C20O91616",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$6.enterScope node:internal/deps/acorn/acorn/dist/acorn:3445:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 315,
    "tm": 199927,
    "source": {
      "script": 138,
      "start": 141972,
      "end": 142029,
      "positions": "C0O141991C5O142002C15O142007C21O142002C27O142028",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Scope node:internal/deps/acorn/acorn/dist/acorn:3431:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 316,
    "tm": 199980,
    "source": {
      "script": 138,
      "start": 141376,
      "end": 141807,
      "positions": "C0O141390C2O141401C6O141479C8O141488C12O141569C14O141582C18O141683C20O141698C24O141773C25O141795C30O141806",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "parse node:internal/deps/acorn/acorn/dist/acorn:576:43",
    "type": "JS",
    "kind": "Unopt",
    "func": 317,
    "tm": 200033,
    "source": {
      "script": 138,
      "start": 31912,
      "end": 32035,
      "positions": "C0O31937C5O31945C11O31961C16O31961C21O31983C26O31983C30O32012C35O32012C40O32031",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$7.startNode node:internal/deps/acorn/acorn/dist/acorn:3538:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 318,
    "tm": 200071,
    "source": {
      "script": 138,
      "start": 145381,
      "end": 145442,
      "positions": "C0O145390C3O145417C8O145429C18O145397C23O145438",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Node node:internal/deps/acorn/acorn/dist/acorn:3522:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 319,
    "tm": 200118,
    "source": {
      "script": 138,
      "start": 144930,
      "end": 145268,
      "positions": "C0O144955C2O144965C6O144975C8O144986C12O144997C13O145006C17O145026C22O145034C28O145053C39O145064C44O145062C48O145114C53O145122C59O145173C64O145181C68O145164C72O145216C77O145224C83O145240C92O145254C98O145251C103O145267",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.nextToken node:internal/deps/acorn/acorn/dist/acorn:4747:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 320,
    "tm": 200183,
    "source": {
      "script": 138,
      "start": 186206,
      "end": 186626,
      "positions": "C0O186237C5O186237C10O186255C12O186286C18O186308C23O186308C27O186346C31O186339C35O186364C40O186372C46O186406C51O186406C55O186399C59O186436C64O186448C69O186454C73O186440C78O186476C86O186494C91O186476C96O186498C97O186521C103O186551C108O186551C113O186565C114O186584C119O186599C124O186599C129O186584C135O186625",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$3.curContext node:internal/deps/acorn/acorn/dist/acorn:2199:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 321,
    "tm": 200231,
    "source": {
      "script": 138,
      "start": 91651,
      "end": 91708,
      "positions": "C0O91672C5O91685C10O91693C14O91700C17O91679C20O91704",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.skipSpace node:internal/deps/acorn/acorn/dist/acorn:4808:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 322,
    "tm": 200300,
    "source": {
      "script": 138,
      "start": 188604,
      "end": 189562,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.fullCharCodeAtPos node:internal/deps/acorn/acorn/dist/acorn:4768:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 323,
    "tm": 200374,
    "source": {
      "script": 138,
      "start": 186984,
      "end": 187235,
      "positions": "C0O187009C5O187015C10O187031C15O187015C21O187041C27O187050C38O187068C43O187081C45O187092C46O187115C51O187121C56O187137C60O187141C64O187121C70O187151C76O187163C87O187181C98O187206C104O187213C107O187220C117O187231",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.readToken node:internal/deps/acorn/acorn/dist/acorn:4759:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 324,
    "tm": 200427,
    "source": {
      "script": 138,
      "start": 186656,
      "end": 186946,
      "positions": "C0O186785C3O186818C8O186826C15O186838C19O186789C28O186852C33O186890C38O186890C42O186900C43O186920C48O186920C53O186942",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isIdentifierStart node:internal/deps/acorn/acorn/dist/acorn:71:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 325,
    "tm": 200477,
    "source": {
      "script": 138,
      "start": 11704,
      "end": 12088,
      "positions": "C0O11725C2O11734C7O11742C9O11754C12O11760C13O11767C15O11776C20O11784C21O11795C22O11802C24O11811C29O11819C31O11831C34O11837C35O11844C37O11853C42O11862C43O11873C44O11880C50O11889C55O11902C59O11914C67O11949C72O11954C76O11961C81O11961C87O11949C92O11980C93O11987C94O11998C99O12011C100O12023C101O12030C107O12037C112O12084",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.readWord node:internal/deps/acorn/acorn/dist/acorn:5486:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 326,
    "tm": 200532,
    "source": {
      "script": 138,
      "start": 212472,
      "end": 212653,
      "positions": "C0O212497C5O212497C10O212525C13O212531C18O212550C23O212559C28O212559C35O212579C40O212596C44O212626C49O212626C55O212649",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.readWord1 node:internal/deps/acorn/acorn/dist/acorn:5455:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 327,
    "tm": 200650,
    "source": {
      "script": 138,
      "start": 211321,
      "end": 212349,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isIdentifierChar node:internal/deps/acorn/acorn/dist/acorn:83:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 328,
    "tm": 200753,
    "source": {
      "script": 138,
      "start": 12180,
      "end": 12676,
      "positions": "C0O12201C2O12210C7O12218C9O12230C12O12236C13O12243C15O12252C20O12260C21O12271C22O12278C24O12287C29O12295C30O12307C31O12314C33O12323C38O12331C39O12342C40O12349C42O12358C47O12366C49O12378C52O12384C53O12391C55O12400C60O12409C61O12420C62O12427C68O12436C73O12449C77O12461C85O12491C90O12496C94O12503C99O12503C105O12491C110O12522C111O12529C112O12540C117O12553C118O12565C119O12572C125O12579C138O12630C143O12672",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.finishToken node:internal/deps/acorn/acorn/dist/acorn:4853:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 329,
    "tm": 200979,
    "source": {
      "script": 138,
      "start": 189813,
      "end": 190034,
      "positions": "C0O189847C4O189840C8O189865C13O189873C19O189905C24O189905C28O189898C32O189946C37O189956C39O189966C43O189978C45O189989C49O190006C54O190006C60O190033",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$3.updateContext node:internal/deps/acorn/acorn/dist/acorn:2233:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 330,
    "tm": 201041,
    "source": {
      "script": 138,
      "start": 92985,
      "end": 93255,
      "positions": "C0O93026C5O93045C14O93075C18O93065C23O93088C24O93105C30O93143C35O93136C37O93173C42O93173C50O93238C54O93231C59O93254",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$1.parseTopLevel node:internal/deps/acorn/acorn/dist/acorn:794:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 331,
    "tm": 201121,
    "source": {
      "script": 138,
      "start": 39950,
      "end": 40602,
      "positions": "C0O39977C4O39984C11O39984C17O40012C23O40020C25O40030C29O40054C37O40069C41O40059C46O40098C61O40098C67O40146C72O40151C77O40151C82O40042C85O40182C91O40213C93O40223C97O40230C102O40240C107O40230C113O40268C117O40261C122O40315C124O40319C128O40340C133O40362C140O40378C144O40385C154O40404C160O40411C164O40340C170O40278C176O40200C179O40456C184O40484C189O40456C194O40500C199O40500C203O40535C208O40543C212O40528C216O40571C224O40571C230O40598",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$1.parseStatement node:internal/deps/acorn/acorn/dist/acorn:862:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 332,
    "tm": 201287
  },
  {
    "name": "pp$1.isLet node:internal/deps/acorn/acorn/dist/acorn:816:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 333,
    "tm": 201453,
    "source": {
      "script": 138,
      "start": 40695,
      "end": 41810,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp.isContextual node:internal/deps/acorn/acorn/dist/acorn:680:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 334,
    "tm": 201521,
    "source": {
      "script": 138,
      "start": 36002,
      "end": 36094,
      "positions": "C0O36027C8O36042C12O36032C17O36055C24O36061C29O36079C34O36090",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*",
    "timestamp": 201592,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": "pp$1.parseImport node:internal/deps/acorn/acorn/dist/acorn:1768:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 335,
    "tm": 201643,
    "source": {
      "script": 138,
      "start": 76263,
      "end": 76700,
      "positions": "C0O76281C5O76281C9O76322C17O76337C21O76327C26O76353C28O76369C32O76403C37O76403C41O76396C47O76462C52O76462C56O76455C60O76498C68O76498C73O76549C81O76564C85O76554C93O76578C98O76578C104O76601C109O76601C113O76542C117O76630C122O76630C126O76659C134O76659C140O76696",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.next node:internal/deps/acorn/acorn/dist/acorn:4707:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 336,
    "tm": 201709,
    "source": {
      "script": 138,
      "start": 185040,
      "end": 185504,
      "positions": "C0O185078C4O185121C9O185126C15O185142C21O185168C26O185190C34O185234C39O185239C43O185227C47O185168C53O185264C58O185272C64O185294C69O185302C79O185310C85O185302C90O185358C94O185351C98O185392C102O185385C106O185429C110O185422C114O185469C118O185462C122O185488C127O185488C132O185503",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "^(?:break|case|catch|continue|debugger|default|do|else|finally|for|function|if|return|switch|throw|try|var|while|with|null|true|false|instanceof|typeof|void|delete|new|in|this|const|class|extends|export|import|super)$",
    "timestamp": 201826,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": "types.name.updateContext node:internal/deps/acorn/acorn/dist/acorn:2314:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 337,
    "tm": 201897,
    "source": {
      "script": 138,
      "start": 95742,
      "end": 96033,
      "positions": "C0O95773C2O95793C7O95801C14O95813C22O95840C26O95830C31O95862C38O95868C43O95886C49O95916C56O95922C61O95942C66O95942C72O95974C74O96002C76O96019C81O96032",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$1.parseImportSpecifiers node:internal/deps/acorn/acorn/dist/acorn:1785:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 338,
    "tm": 202007,
    "source": {
      "script": 138,
      "start": 76797,
      "end": 78130,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseIdent node:internal/deps/acorn/acorn/dist/acorn:3331:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 339,
    "tm": 202136,
    "source": {
      "script": 138,
      "start": 138089,
      "end": 139165,
      "positions": "C0O138132C5O138132C10O138158C18O138173C22O138163C27O138204C31O138197C37O138231C42O138236C48O138270C53O138275C57O138263C61O138681C68O138686C73O138706C80O138711C85O138746C90O138766C94O138779C97O138757C102O138791C107O138797C112O138813C117O138797C125O138827C130O138851C135O138859C140O138859C146O138898C151O138898C155O138927C162O138934C165O138927C170O138953C178O138953C184O138989C188O139016C193O139016C198O139054C205O139059C210O139080C216O139131C220O139124C224O139150C226O139161",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$7.finishNode node:internal/deps/acorn/acorn/dist/acorn:3558:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 340,
    "tm": 202223,
    "source": {
      "script": 138,
      "start": 145852,
      "end": 145954,
      "positions": "C0O145871C3O145891C8O145919C13O145936C27O145891C32O145950",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "finishNodeAt node:internal/deps/acorn/acorn/dist/acorn:3548:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 341,
    "tm": 202269,
    "source": {
      "script": 138,
      "start": 145614,
      "end": 145822,
      "positions": "C0O145643C2O145653C6O145665C8O145674C12O145694C17O145702C23O145726C30O145734C34O145756C39O145764C45O145785C55O145794C59O145807C61O145818",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.checkUnreserved node:internal/deps/acorn/acorn/dist/acorn:3302:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 342,
    "tm": 202355,
    "source": {
      "script": 138,
      "start": 136652,
      "end": 137902,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "prototypeAccessors.inGenerator.get node:internal/deps/acorn/acorn/dist/acorn:583:49",
    "type": "JS",
    "kind": "Unopt",
    "func": 343,
    "tm": 202421,
    "source": {
      "script": 138,
      "start": 32200,
      "end": 32310,
      "positions": "C0O32218C5O32218C10O32235C17O32242C22O32261C27O32274C32O32274C37O32291C42O32308",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$6.currentVarScope node:internal/deps/acorn/acorn/dist/acorn:3507:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 344,
    "tm": 202465,
    "source": {
      "script": 138,
      "start": 144419,
      "end": 144576,
      "positions": "C0O144446C5O144457C9O144464C13O144500C20O144510C24O144531C31O144537C36O144552C38O144564C39O144471C44O144428C48O144575",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "prototypeAccessors.inAsync.get node:internal/deps/acorn/acorn/dist/acorn:584:45",
    "type": "JS",
    "kind": "Unopt",
    "func": 345,
    "tm": 202506,
    "source": {
      "script": 138,
      "start": 32356,
      "end": 32462,
      "positions": "C0O32374C5O32374C10O32391C17O32398C22O32413C27O32426C32O32426C37O32443C42O32460",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$6.currentThisScope node:internal/deps/acorn/acorn/dist/acorn:3515:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 346,
    "tm": 202549,
    "source": {
      "script": 138,
      "start": 144712,
      "end": 144901,
      "positions": "C0O144739C5O144750C9O144757C13O144793C20O144803C24O144824C31O144830C36O144853C43O144859C48O144877C50O144889C51O144764C56O144721C60O144900",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "prototypeAccessors.inClassStaticBlock.get node:internal/deps/acorn/acorn/dist/acorn:607:56",
    "type": "JS",
    "kind": "Unopt",
    "func": 347,
    "tm": 202589,
    "source": {
      "script": 138,
      "start": 33751,
      "end": 33832,
      "positions": "C0O33773C5O33773C10O33790C17O33797C22O33825C25O33828",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$2.checkLValSimple node:internal/deps/acorn/acorn/dist/acorn:2085:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 348,
    "tm": 202739,
    "source": {
      "script": 138,
      "start": 87869,
      "end": 89323,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$6.declareName node:internal/deps/acorn/acorn/dist/acorn:3460:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 349,
    "tm": 202919
  },
  {
    "name": "pp$6.currentScope node:internal/deps/acorn/acorn/dist/acorn:3503:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 350,
    "tm": 203001,
    "source": {
      "script": 138,
      "start": 144320,
      "end": 144383,
      "positions": "C0O144341C5O144357C10O144368C14O144375C17O144351C20O144379",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp.eat node:internal/deps/acorn/acorn/dist/acorn:669:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 351,
    "tm": 203044,
    "source": {
      "script": 138,
      "start": 35796,
      "end": 35913,
      "positions": "C0O35818C7O35823C12O35846C17O35846C21O35860C22O35871C23O35891C24O35903",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp.expectContextual node:internal/deps/acorn/acorn/dist/acorn:694:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 352,
    "tm": 203084,
    "source": {
      "script": 138,
      "start": 36368,
      "end": 36438,
      "positions": "C0O36391C5O36391C12O36419C17O36419C22O36437",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp.eatContextual node:internal/deps/acorn/acorn/dist/acorn:686:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 353,
    "tm": 203120,
    "source": {
      "script": 138,
      "start": 36173,
      "end": 36269,
      "positions": "C0O36196C5O36196C12O36218C13O36230C14O36242C19O36242C23O36254C24O36265",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.getTokenFromCode node:internal/deps/acorn/acorn/dist/acorn:5005:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 354,
    "tm": 203265
  },
  {
    "name": "pp$9.readString node:internal/deps/acorn/acorn/dist/acorn:5253:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 355,
    "tm": 203412,
    "source": {
      "script": 138,
      "start": 205022,
      "end": 205957,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isNewLine node:internal/deps/acorn/acorn/dist/acorn:255:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 356,
    "tm": 203480,
    "source": {
      "script": 138,
      "start": 18821,
      "end": 18909,
      "positions": "C0O18834C2O18846C9O18861C18O18876C27O18895C30O18905",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseExprAtom node:internal/deps/acorn/acorn/dist/acorn:2684:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 357,
    "tm": 203652
  },
  {
    "name": "pp$4.parseLiteral node:internal/deps/acorn/acorn/dist/acorn:2849:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 358,
    "tm": 203822,
    "source": {
      "script": 138,
      "start": 118152,
      "end": 118455,
      "positions": "C0O118182C5O118182C10O118199C12O118210C16O118239C21O118245C26O118256C31O118268C36O118245C42O118232C46O118287C51O118291C56O118307C61O118311C65O118318C69O118291C77O118323C82O118353C87O118357C97O118357C104O118369C117O118370C123O118346C127O118400C132O118400C136O118424C144O118424C150O118451",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp.semicolon node:internal/deps/acorn/acorn/dist/acorn:717:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 359,
    "tm": 203906,
    "source": {
      "script": 138,
      "start": 37082,
      "end": 37171,
      "positions": "C0O37101C8O37111C13O37101C20O37126C25O37126C31O37152C36O37152C41O37170",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp.insertSemicolon node:internal/deps/acorn/acorn/dist/acorn:706:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 360,
    "tm": 203949,
    "source": {
      "script": 138,
      "start": 36731,
      "end": 36927,
      "positions": "C0O36749C5O36749C11O36788C16O36796C22O36832C27O36840C32O36865C37O36882C42O36840C48O36906C49O36917C51O36926",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp.canInsertSemicolon node:internal/deps/acorn/acorn/dist/acorn:700:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 361,
    "tm": 203991,
    "source": {
      "script": 138,
      "start": 36547,
      "end": 36697,
      "positions": "C0O36568C8O36583C12O36573C17O36601C25O36616C29O36606C37O36642C42O36652C47O36658C52O36669C57O36686C62O36658C69O36642C74O36693",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.readWord1 node:internal/deps/acorn/acorn/dist/acorn:5455:28",
    "type": "JS",
    "kind": "Baseline",
    "func": 327,
    "tm": 204093,
    "source": {
      "script": 138,
      "start": 211321,
      "end": 212349,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "TokContext node:internal/deps/acorn/acorn/dist/acorn:2172:39",
    "type": "JS",
    "kind": "Baseline",
    "func": 306,
    "tm": 204125,
    "source": {
      "script": 138,
      "start": 90757,
      "end": 90972,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "wordsRegexp node:internal/deps/acorn/acorn/dist/acorn:277:23",
    "type": "JS",
    "kind": "Baseline",
    "func": 308,
    "tm": 204147,
    "source": {
      "script": 138,
      "start": 19411,
      "end": 19488,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "has node:internal/deps/acorn/acorn/dist/acorn:269:15",
    "type": "JS",
    "kind": "Baseline",
    "func": 312,
    "tm": 204168,
    "source": {
      "script": 138,
      "start": 19206,
      "end": 19273,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.fullCharCodeAtPos node:internal/deps/acorn/acorn/dist/acorn:4768:36",
    "type": "JS",
    "kind": "Baseline",
    "func": 323,
    "tm": 204192,
    "source": {
      "script": 138,
      "start": 186984,
      "end": 187235,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isIdentifierChar node:internal/deps/acorn/acorn/dist/acorn:83:28",
    "type": "JS",
    "kind": "Baseline",
    "func": 328,
    "tm": 204222,
    "source": {
      "script": 138,
      "start": 12180,
      "end": 12676,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "^(?:enum|await|implements|interface|let|package|private|protected|public|static|yield)$",
    "timestamp": 204330,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": "^(?:enum|await|implements|interface|let|package|private|protected|public|static|yield|eval|arguments)$",
    "timestamp": 204384,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": "\\r\\n?|\\n|\\u2028|\\u2029",
    "timestamp": 204465,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": "types.braceL.updateContext node:internal/deps/acorn/acorn/dist/acorn:2264:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 362,
    "tm": 204522,
    "source": {
      "script": 138,
      "start": 93943,
      "end": 94074,
      "positions": "C0O93965C5O93973C10O93983C15O93983C25O94016C34O94033C39O93973C44O94046C45O94063C50O94073",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$3.braceIsBlock node:internal/deps/acorn/acorn/dist/acorn:2203:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 363,
    "tm": 204605,
    "source": {
      "script": 138,
      "start": 91741,
      "end": 92710,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp.expect node:internal/deps/acorn/acorn/dist/acorn:734:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 364,
    "tm": 204675,
    "source": {
      "script": 138,
      "start": 37591,
      "end": 37644,
      "positions": "C0O37609C5O37609C12O37627C17O37627C22O37643",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "types.parenR.updateContext.types.braceR.updateContext node:internal/deps/acorn/acorn/dist/acorn:2252:69",
    "type": "JS",
    "kind": "Unopt",
    "func": 365,
    "tm": 204746,
    "source": {
      "script": 138,
      "start": 93622,
      "end": 93901,
      "positions": "C0O93640C5O93648C12O93655C17O93670C18O93687C22O93701C23O93707C24O93733C29O93741C34O93741C39O93752C42O93772C46O93760C51O93787C56O93787C61O93799C68O93806C73O93841C78O93849C83O93849C88O93890C93O93883C98O93900",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$7.finishNode node:internal/deps/acorn/acorn/dist/acorn:3558:29",
    "type": "JS",
    "kind": "Baseline",
    "func": 340,
    "tm": 204805,
    "source": {
      "script": 138,
      "start": 145852,
      "end": 145954,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isNewLine node:internal/deps/acorn/acorn/dist/acorn:255:21",
    "type": "JS",
    "kind": "Baseline",
    "func": 356,
    "tm": 204832,
    "source": {
      "script": 138,
      "start": 18821,
      "end": 18909,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$7.startNode node:internal/deps/acorn/acorn/dist/acorn:3538:28",
    "type": "JS",
    "kind": "Baseline",
    "func": 318,
    "tm": 204853,
    "source": {
      "script": 138,
      "start": 145381,
      "end": 145442,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$3.curContext node:internal/deps/acorn/acorn/dist/acorn:2199:29",
    "type": "JS",
    "kind": "Baseline",
    "func": 321,
    "tm": 204874,
    "source": {
      "script": 138,
      "start": 91651,
      "end": 91708,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.finishToken node:internal/deps/acorn/acorn/dist/acorn:4853:30",
    "type": "JS",
    "kind": "Baseline",
    "func": 329,
    "tm": 204896,
    "source": {
      "script": 138,
      "start": 189813,
      "end": 190034,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.readToken node:internal/deps/acorn/acorn/dist/acorn:4759:28",
    "type": "JS",
    "kind": "Baseline",
    "func": 324,
    "tm": 204918,
    "source": {
      "script": 138,
      "start": 186656,
      "end": 186946,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.nextToken node:internal/deps/acorn/acorn/dist/acorn:4747:28",
    "type": "JS",
    "kind": "Baseline",
    "func": 320,
    "tm": 204945,
    "source": {
      "script": 138,
      "start": 186206,
      "end": 186626,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$1.parseVarStatement node:internal/deps/acorn/acorn/dist/acorn:1146:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 366,
    "tm": 205056,
    "source": {
      "script": 138,
      "start": 54416,
      "end": 54567,
      "positions": "C0O54440C5O54440C9O54457C25O54457C30O54495C35O54495C39O54524C47O54524C53O54563",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$1.parseVar node:internal/deps/acorn/acorn/dist/acorn:1277:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 367,
    "tm": 205146,
    "source": {
      "script": 138,
      "start": 58797,
      "end": 59600,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$1.parseVarId node:internal/deps/acorn/acorn/dist/acorn:1298:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 368,
    "tm": 205218,
    "source": {
      "script": 138,
      "start": 59631,
      "end": 59773,
      "positions": "C0O59665C5O59665C9O59658C13O59694C18O59716C25O59725C42O59694C48O59772",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$2.parseBindingAtom node:internal/deps/acorn/acorn/dist/acorn:1965:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 369,
    "tm": 205270,
    "source": {
      "script": 138,
      "start": 83072,
      "end": 83465,
      "positions": "C0O83090C5O83098C12O83110C17O83137C25O83162C37O83376C48O83196C53O83196C58O83222C63O83222C67O83259C75O83282C87O83259C92O83252C96O83325C104O83325C110O83357C111O83404C118O83404C123O83418C124O83449C129O83449C133O83461",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.readToken_eq_excl node:internal/deps/acorn/acorn/dist/acorn:4962:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 370,
    "tm": 205443,
    "source": {
      "script": 138,
      "start": 193778,
      "end": 194180,
      "positions": "C0O193815C5O193821C10O193837C14O193841C18O193821C24O193851C26O193860C31O193882C39O193897C44O193912C49O193918C54O193934C58O193938C62O193918C70O193943C85O193882C91O193958C92O193965C94O193974C101O193989C106O194004C111O194012C118O194024C123O194046C130O194055C134O194079C142O194097C147O194079C152O194103C153O194126C160O194140C171O194155C180O194166C188O194126C194O194176",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.finishOp node:internal/deps/acorn/acorn/dist/acorn:5084:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 371,
    "tm": 205538,
    "source": {
      "script": 138,
      "start": 198073,
      "end": 198211,
      "positions": "C0O198107C5O198113C10O198124C15O198134C22O198138C26O198113C33O198151C40O198163C43O198160C47O198185C52O198185C58O198207",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.next node:internal/deps/acorn/acorn/dist/acorn:4707:23",
    "type": "JS",
    "kind": "Baseline",
    "func": 336,
    "tm": 205608,
    "source": {
      "script": 138,
      "start": 185040,
      "end": 185504,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.readWord node:internal/deps/acorn/acorn/dist/acorn:5486:27",
    "type": "JS",
    "kind": "Baseline",
    "func": 326,
    "tm": 205664,
    "source": {
      "script": 138,
      "start": 212472,
      "end": 212653,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.skipSpace node:internal/deps/acorn/acorn/dist/acorn:4808:28",
    "type": "JS",
    "kind": "Baseline",
    "func": 322,
    "tm": 205747,
    "source": {
      "script": 138,
      "start": 188604,
      "end": 189562,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$3.updateContext node:internal/deps/acorn/acorn/dist/acorn:2233:32",
    "type": "JS",
    "kind": "Baseline",
    "func": 330,
    "tm": 205813,
    "source": {
      "script": 138,
      "start": 92985,
      "end": 93255,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$2.checkLValPattern node:internal/deps/acorn/acorn/dist/acorn:2123:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 372,
    "tm": 205910,
    "source": {
      "script": 138,
      "start": 89360,
      "end": 90021,
      "positions": "C0O89400C4O89430C8O89473C29O89526C31O89541C36O89562C40O89555C45O89599C47O89603C51O89620C68O89620C73O89572C79O89513C82O89690C84O89743C86O89760C91O89783C95O89774C100O89822C102O89828C106O89842C108O89859C125O89859C130O89795C136O89728C139O89931C141O89962C158O89962C164O90020",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseMaybeAssign node:internal/deps/acorn/acorn/dist/acorn:2410:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 373,
    "tm": 206143,
    "source": {
      "script": 138,
      "start": 99328,
      "end": 101677,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "DestructuringErrors node:internal/deps/acorn/acorn/dist/acorn:744:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 374,
    "tm": 206275,
    "source": {
      "script": 138,
      "start": 37824,
      "end": 37977,
      "positions": "C0O37833C3O37962C9O37939C15O37910C21O37879C27O37854C32O37976",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseMaybeConditional node:internal/deps/acorn/acorn/dist/acorn:2463:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 375,
    "tm": 206346,
    "source": {
      "script": 138,
      "start": 101770,
      "end": 102342,
      "positions": "C0O101830C5O101853C10O101883C15O101883C22O101943C27O101943C34O101992C36O102003C37O102019C45O102029C50O102019C57O102064C62O102064C69O102103C71O102113C75O102150C80O102150C84O102143C88O102181C96O102194C101O102181C106O102230C111O102230C116O102223C120O102275C128O102275C134O102316C135O102327C137O102338",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseExprOps node:internal/deps/acorn/acorn/dist/acorn:2480:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 376,
    "tm": 206499,
    "source": {
      "script": 138,
      "start": 102410,
      "end": 102809,
      "positions": "C0O102470C5O102493C10O102523C28O102523C34O102600C39O102600C46O102649C48O102660C49O102679C56O102685C61O102706C68O102711C77O102755C100O102755C105O102805",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseMaybeUnary node:internal/deps/acorn/acorn/dist/acorn:2528:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 377,
    "tm": 206624
  },
  {
    "name": "pp$4.parseExprSubscripts node:internal/deps/acorn/acorn/dist/acorn:2581:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 378,
    "tm": 206730,
    "source": {
      "script": 138,
      "start": 107147,
      "end": 107976,
      "positions": "C0O107207C5O107230C10O107260C15O107260C22O107321C29O107326C34O107364C39O107370C44O107381C49O107400C54O107370C63O107412C68O107429C70O107440C71O107465C93O107465C99O107528C103O107565C110O107570C115O107629C120O107659C124O107649C129O107668C131O107711C135O107752C140O107780C144O107770C149O107789C151O107830C155O107871C160O107895C164O107885C169O107904C171O107941C175O107959C177O107972",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "types.parenL.updateContext node:internal/deps/acorn/acorn/dist/acorn:2274:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 379,
    "tm": 206805,
    "source": {
      "script": 138,
      "start": 94240,
      "end": 94493,
      "positions": "C0O94279C3O94298C7O94288C15O94324C19O94314C27O94351C31O94341C39O94379C43O94369C47O94396C52O94404C59O94409C64O94435C73O94452C78O94404C83O94465C84O94482C89O94492",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseSubscripts node:internal/deps/acorn/acorn/dist/acorn:2595:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 380,
    "tm": 206891,
    "source": {
      "script": 138,
      "start": 108012,
      "end": 108902,
      "positions": "C0O108090C5O108098C12O108110C17O108123C24O108128C29O108153C36O108158C41O108186C46O108206C50O108197C55O108219C60O108219C67O108248C72O108259C76O108252C82O108265C87O108287C92O108313C96O108304C100O108346C102O108398C131O108398C137O108511C143O108523C145O108555C147O108567C152O108587C159O108592C164O108633C168O108687C173O108687C180O108730C182O108751C186O108787C194O108787C201O108847C203O108861C204O108877C209O108358C213O108901",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseSubscript node:internal/deps/acorn/acorn/dist/acorn:2618:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 381,
    "tm": 207038
  },
  {
    "name": "pp$4.parseExprList node:internal/deps/acorn/acorn/dist/acorn:3279:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 382,
    "tm": 207205,
    "source": {
      "script": 138,
      "start": 135807,
      "end": 136616,
      "positions": "C0O135888C3O135900C5O135923C10O135923C17O135943C21O135970C29O135983C34O135970C39O135999C43O136030C48O136030C55O136059C59O136082C61O136116C63O136132C67O136155C75O136170C79O136160C84O136187C88O136221C96O136236C100O136226C105O136267C110O136267C116O136312C120O136347C128O136362C132O136352C137O136394C143O136408C148O136469C152O136462C158O136512C165O136512C172O136580C177O136580C182O135910C185O136601C187O136612",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.readToken_dot node:internal/deps/acorn/acorn/dist/acorn:4872:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 383,
    "tm": 207378,
    "source": {
      "script": 138,
      "start": 190353,
      "end": 190766,
      "positions": "C0O190378C5O190384C10O190400C14O190404C18O190384C24O190414C26O190423C33O190437C38O190458C45O190458C50O190474C51O190498C56O190504C61O190520C65O190524C69O190504C75O190543C80O190551C87O190563C94O190576C101O190592C106O190624C113O190633C117O190657C125O190675C130O190657C135O190684C136O190704C142O190711C146O190734C154O190752C159O190734C164O190756",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$7.startNodeAt node:internal/deps/acorn/acorn/dist/acorn:3542:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 384,
    "tm": 207476,
    "source": {
      "script": 138,
      "start": 145474,
      "end": 145526,
      "positions": "C0O145491C14O145498C19O145522",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.readNumber node:internal/deps/acorn/acorn/dist/acorn:5200:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 385,
    "tm": 207625
  },
  {
    "name": "pp$9.readInt node:internal/deps/acorn/acorn/dist/acorn:5132:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 386,
    "tm": 207771,
    "source": {
      "script": 138,
      "start": 199884,
      "end": 201657,
      "positions": "C0O200050C5O200058C12O200070C21O200346C25O200385C30O200391C35O200407C40O200391C48O200412C52O200442C57O200455C59O200469C61O200489C63O200496C68O200510C76O200528C78O200528C83O200574C88O200580C93O200596C98O200580C104O200608C106O200625C112O200653C117O200671C121O200711C126O200733C134O200711C140O200818C142O200831C147O200846C152O200868C160O200846C166O200936C167O200942C172O200956C177O200978C185O200956C191O201053C196O201078C198O201102C200O201111C205O201120C207O201131C210O201136C216O201160C218O201169C223O201178C225O201189C228O201194C234O201218C236O201227C243O201241C248O201250C250O201261C256O201289C260O201313C262O201321C267O201333C269O201347C272O201370C274O201384C280O201392C284O200545C289O200535C295O200545C299O200476C302O201410C308O201442C313O201457C318O201479C322O201483C329O201457C335O201562C342O201566C352O201599C359O201603C365O201611C370O201622C371O201633C372O201641C374O201653",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "stringToNumber node:internal/deps/acorn/acorn/dist/acorn:5168:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 387,
    "tm": 207863,
    "source": {
      "script": 138,
      "start": 201685,
      "end": 201946,
      "positions": "C0O201726C4O201767C11O201774C16O201790C17O201902C21O201924C34O201924C41O201909C45O201942",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseExpression node:internal/deps/acorn/acorn/dist/acorn:2395:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 388,
    "tm": 207937,
    "source": {
      "script": 138,
      "start": 98707,
      "end": 99197,
      "positions": "C0O98767C5O98790C10O98820C15O98820C22O98884C30O98899C34O98889C39O98930C44O98930C51O98969C60O98989C66O98986C70O99014C78O99024C83O99014C90O99039C95O99051C100O99061C105O99061C112O99051C117O99002C120O99133C128O99133C134O99171C135O99182C137O99193",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp.checkExpressionErrors node:internal/deps/acorn/acorn/dist/acorn:761:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 389,
    "tm": 208023,
    "source": {
      "script": 138,
      "start": 38504,
      "end": 39043,
      "positions": "C0O38545C4O38576C5O38588C6O38640C11O38702C16O38719C20O38736C21O38759C27O38779C30O38783C31O38790C32O38810C37O38829C45O38829C51O38934C52O38950C57O38969C65O38969C72O39042",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseExprOp node:internal/deps/acorn/acorn/dist/acorn:2493:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 390,
    "tm": 208106,
    "source": {
      "script": 138,
      "start": 103178,
      "end": 104528,
      "positions": "C0O103253C5O103258C10O103269C15O103291C17O103307C25O103322C29O103312C34O103336C36O103345C41O103385C49O103400C53O103390C58O103418C66O103433C70O103423C74O103473C82O103488C86O103478C90O103506C92O103745C95O103758C100O103769C105O103808C110O103828C115O103828C119O103864C124O103887C129O103922C134O103939C151O103939C172O103922C178O104045C203O104102C208O104045C214O104132C218O104153C226O104168C230O104158C237O104182C239O104200C247O104215C251O104205C256O104233C264O104248C268O104238C273O104279C278O104301C286O104279C292O104431C315O104431C320O104494C321O104513C323O104524",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.readToken_pipe_amp node:internal/deps/acorn/acorn/dist/acorn:4908:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 391,
    "tm": 208235,
    "source": {
      "script": 138,
      "start": 191607,
      "end": 192110,
      "positions": "C0O191644C5O191650C10O191666C14O191670C18O191650C24O191680C26O191689C31O191716C36O191724C43O191736C48O191770C53O191776C58O191792C62O191796C66O191776C72O191810C74O191820C79O191842C87O191857C95O191842C101O191867C102O191896C109O191910C120O191926C129O191944C137O191896C143O191958C144O191969C146O191978C151O192000C159O192015C167O192000C173O192025C174O192044C181O192058C192O192074C201O192092C209O192044C215O192106",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.buildBinary node:internal/deps/acorn/acorn/dist/acorn:2518:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 392,
    "tm": 208342,
    "source": {
      "script": 138,
      "start": 104560,
      "end": 104820,
      "positions": "C0O104629C5O104629C12O104666C14O104676C18O104688C20O104702C24O104712C26O104723C30O104748C43O104765C52O104748C58O104816",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "types.name.updateContext node:internal/deps/acorn/acorn/dist/acorn:2314:38",
    "type": "JS",
    "kind": "Baseline",
    "func": 337,
    "tm": 208434,
    "source": {
      "script": 138,
      "start": 95742,
      "end": 96033,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$6.currentVarScope node:internal/deps/acorn/acorn/dist/acorn:3507:34",
    "type": "JS",
    "kind": "Baseline",
    "func": 344,
    "tm": 208466,
    "source": {
      "script": 138,
      "start": 144419,
      "end": 144576,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Node node:internal/deps/acorn/acorn/dist/acorn:3522:27",
    "type": "JS",
    "kind": "Baseline",
    "func": 319,
    "tm": 208491,
    "source": {
      "script": 138,
      "start": 144930,
      "end": 145268,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "finishNodeAt node:internal/deps/acorn/acorn/dist/acorn:3548:24",
    "type": "JS",
    "kind": "Baseline",
    "func": 341,
    "tm": 208513,
    "source": {
      "script": 138,
      "start": 145614,
      "end": 145822,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp.eat node:internal/deps/acorn/acorn/dist/acorn:669:20",
    "type": "JS",
    "kind": "Baseline",
    "func": 351,
    "tm": 208533,
    "source": {
      "script": 138,
      "start": 35796,
      "end": 35913,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp.isContextual node:internal/deps/acorn/acorn/dist/acorn:680:29",
    "type": "JS",
    "kind": "Baseline",
    "func": 334,
    "tm": 208554,
    "source": {
      "script": 138,
      "start": 36002,
      "end": 36094,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "types._function.updateContext.types._class.updateContext node:internal/deps/acorn/acorn/dist/acorn:2284:72",
    "type": "JS",
    "kind": "Unopt",
    "func": 393,
    "tm": 208698,
    "source": {
      "script": 138,
      "start": 94655,
      "end": 95151,
      "positions": "C0O94685C9O94718C13O94708C21O94756C25O94746C30O94769C35O94769C43O94794C47O94782C55O94834C59O94824C67O94855C72O94865C77O94871C82O94882C87O94899C92O94871C99O94855C109O94941C113O94931C121O94969C125O94959C130O94985C135O94985C143O95010C147O94998C152O95032C157O95040C165O95053C170O95040C177O95086C182O95094C190O95107C195O95094C200O95122C201O95139C206O95150",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$1.parseFunctionStatement node:internal/deps/acorn/acorn/dist/acorn:1037:41",
    "type": "JS",
    "kind": "Unopt",
    "func": 394,
    "tm": 208821,
    "source": {
      "script": 138,
      "start": 50441,
      "end": 50621,
      "positions": "C0O50489C5O50489C9O50513C25O50551C32O50548C41O50513C46O50617",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$1.parseFunction node:internal/deps/acorn/acorn/dist/acorn:1309:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 395,
    "tm": 208942,
    "source": {
      "script": 138,
      "start": 60061,
      "end": 61776,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.initFunction node:internal/deps/acorn/acorn/dist/acorn:3156:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 396,
    "tm": 209025,
    "source": {
      "script": 138,
      "start": 131017,
      "end": 131197,
      "positions": "C0O131030C1O131038C5O131059C10O131067C17O131079C22O131087C24O131120C30O131102C34O131144C39O131152C46O131164C51O131172C52O131183C57O131196",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "prototypeAccessors.treatFunctionsAsVar.get node:internal/deps/acorn/acorn/dist/acorn:600:57",
    "type": "JS",
    "kind": "Unopt",
    "func": 397,
    "tm": 209099,
    "source": {
      "script": 138,
      "start": 33356,
      "end": 33422,
      "positions": "C0O33373C5O33405C10O33405C15O33373C20O33420",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$6.treatFunctionsAsVarInScope node:internal/deps/acorn/acorn/dist/acorn:3456:45",
    "type": "JS",
    "kind": "Unopt",
    "func": 398,
    "tm": 209141,
    "source": {
      "script": 138,
      "start": 142313,
      "end": 142415,
      "positions": "C0O142341C7O142347C12O142374C19O142393C26O142399C29O142411",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "functionFlags node:internal/deps/acorn/acorn/dist/acorn:476:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 399,
    "tm": 209200,
    "source": {
      "script": 138,
      "start": 27561,
      "end": 27675,
      "positions": "C0O27586C5O27611C12O27608C18O27639C25O27636C28O27671",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$1.parseFunctionParams node:internal/deps/acorn/acorn/dist/acorn:1347:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 400,
    "tm": 209245,
    "source": {
      "script": 138,
      "start": 61816,
      "end": 61995,
      "positions": "C0O61834C8O61847C13O61834C18O61879C26O61902C33O61922C38O61930C45O61942C52O61879C57O61872C61O61958C66O61958C71O61994",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$2.parseBindingList node:internal/deps/acorn/acorn/dist/acorn:1981:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 401,
    "tm": 209323,
    "source": {
      "script": 138,
      "start": 83502,
      "end": 84351,
      "positions": "C0O83559C3O83571C5O83594C10O83594C17O83614C21O83627C25O83662C33O83675C38O83662C43O83691C47O83714C55O83729C59O83719C64O83751C71O83751C78O83776C82O83807C87O83807C94O83844C96O83872C104O83887C108O83877C113O83923C118O83923C123O83956C128O83956C133O83997C138O83997C143O84026C151O84041C155O84031C160O84055C165O84066C173O84055C179O84138C184O84138C189O84161C191O84206C196O84229C201O84241C206O84206C213O84265C218O84265C223O84306C228O84306C233O83581C236O84336C238O84347",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp.afterTrailingComma node:internal/deps/acorn/acorn/dist/acorn:721:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 402,
    "tm": 209389,
    "source": {
      "script": 138,
      "start": 37208,
      "end": 37457,
      "positions": "C0O37242C7O37247C12O37277C17O37285C23O37317C28O37325C33O37346C38O37365C43O37325C49O37391C53O37420C58O37420C62O37436C63O37447C65O37456",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$2.parseMaybeDefault node:internal/deps/acorn/acorn/dist/acorn:2012:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 403,
    "tm": 209443,
    "source": {
      "script": 138,
      "start": 84523,
      "end": 84847,
      "positions": "C0O84556C4O84576C9O84576C15O84609C20O84617C27O84629C32O84642C40O84652C45O84642C52O84659C54O84670C55O84693C60O84693C67O84730C69O84740C73O84770C78O84770C82O84763C86O84806C94O84806C100O84843",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$2.parseBindingListItem node:internal/deps/acorn/acorn/dist/acorn:2006:39",
    "type": "JS",
    "kind": "Unopt",
    "func": 404,
    "tm": 209511,
    "source": {
      "script": 138,
      "start": 84392,
      "end": 84422,
      "positions": "C0O84406C2O84418",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp.checkYieldAwaitInDefaultParams node:internal/deps/acorn/acorn/dist/acorn:772:47",
    "type": "JS",
    "kind": "Unopt",
    "func": 405,
    "tm": 209562,
    "source": {
      "script": 138,
      "start": 39092,
      "end": 39365,
      "positions": "C0O39110C6O39129C12O39146C17O39162C21O39155C26O39186C31O39197C39O39186C45O39269C51O39292C56O39303C64O39292C71O39364",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseFunctionBody node:internal/deps/acorn/acorn/dist/acorn:3213:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 406,
    "tm": 209646,
    "source": {
      "script": 138,
      "start": 133057,
      "end": 134826,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.isSimpleParamList node:internal/deps/acorn/acorn/dist/acorn:3250:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 407,
    "tm": 209722,
    "source": {
      "script": 138,
      "start": 134864,
      "end": 135052,
      "positions": "C0O134892C2O134902C7O134919C11O134912C16O134961C18O134965C22O134987C29O134992C34O135012C35O135024C36O134929C42O134879C45O135037C46O135048",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.checkParams node:internal/deps/acorn/acorn/dist/acorn:3263:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 408,
    "tm": 209778,
    "source": {
      "script": 138,
      "start": 135212,
      "end": 135474,
      "positions": "C0O135257C4O135264C11O135264C17O135295C19O135310C24O135327C28O135320C33O135369C35O135373C39O135390C55O135429C63O135390C68O135337C74O135282C78O135473",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$2.checkLValInnerPattern node:internal/deps/acorn/acorn/dist/acorn:2148:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 409,
    "tm": 209847,
    "source": {
      "script": 138,
      "start": 90063,
      "end": 90645,
      "positions": "C0O90103C4O90133C8O90176C36O90268C41O90295C55O90268C60O90336C62O90384C67O90406C81O90384C86O90446C88O90488C93O90510C107O90488C112O90554C114O90585C131O90585C137O90644",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$1.parseBlock node:internal/deps/acorn/acorn/dist/acorn:1209:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 410,
    "tm": 209917,
    "source": {
      "script": 138,
      "start": 56611,
      "end": 57176,
      "positions": "C0O56659C4O56699C7O56733C11O56768C16O56768C22O56786C24O56796C28O56811C36O56824C41O56811C46O56837C50O56871C57O56871C62O56904C70O56919C74O56909C79O56951C86O56951C92O56984C97O56989C102O56989C107O56892C110O57011C114O57029C115O57041C119O57061C124O57061C128O57073C132O57107C137O57107C141O57138C149O57138C155O57172",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$1.parseIfStatement node:internal/deps/acorn/acorn/dist/acorn:1042:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 411,
    "tm": 209988,
    "source": {
      "script": 138,
      "start": 50658,
      "end": 50984,
      "positions": "C0O50676C5O50676C9O50705C14O50705C18O50698C22O50832C30O50832C35O50825C39O50880C47O50890C52O50880C62O50904C70O50904C78O50873C82O50949C90O50949C96O50980",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseParenExpression node:internal/deps/acorn/acorn/dist/acorn:2858:39",
    "type": "JS",
    "kind": "Unopt",
    "func": 412,
    "tm": 210122,
    "source": {
      "script": 138,
      "start": 118496,
      "end": 118619,
      "positions": "C0O118510C8O118523C13O118510C18O118551C23O118551C28O118579C36O118592C41O118579C46O118605C48O118615",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$7.startNodeAt node:internal/deps/acorn/acorn/dist/acorn:3542:30",
    "type": "JS",
    "kind": "Baseline",
    "func": 384,
    "tm": 210269,
    "source": {
      "script": 138,
      "start": 145474,
      "end": 145526,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isIdentifierStart node:internal/deps/acorn/acorn/dist/acorn:71:29",
    "type": "JS",
    "kind": "Baseline",
    "func": 325,
    "tm": 210309,
    "source": {
      "script": 138,
      "start": 11704,
      "end": 12088,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp.checkExpressionErrors node:internal/deps/acorn/acorn/dist/acorn:761:38",
    "type": "JS",
    "kind": "Baseline",
    "func": 389,
    "tm": 210333,
    "source": {
      "script": 138,
      "start": 38504,
      "end": 39043,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "prototypeAccessors.inClassStaticBlock.get node:internal/deps/acorn/acorn/dist/acorn:607:56",
    "type": "JS",
    "kind": "Baseline",
    "func": 347,
    "tm": 210355,
    "source": {
      "script": 138,
      "start": 33751,
      "end": 33832,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$6.currentThisScope node:internal/deps/acorn/acorn/dist/acorn:3515:35",
    "type": "JS",
    "kind": "Baseline",
    "func": 346,
    "tm": 210379,
    "source": {
      "script": 138,
      "start": 144712,
      "end": 144901,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp.canInsertSemicolon node:internal/deps/acorn/acorn/dist/acorn:700:35",
    "type": "JS",
    "kind": "Baseline",
    "func": 361,
    "tm": 210401,
    "source": {
      "script": 138,
      "start": 36547,
      "end": 36697,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$1.parseReturnStatement node:internal/deps/acorn/acorn/dist/acorn:1051:39",
    "type": "JS",
    "kind": "Unopt",
    "func": 413,
    "tm": 210479,
    "source": {
      "script": 138,
      "start": 51025,
      "end": 51560,
      "positions": "C0O51048C6O51068C11O51076C17O51117C22O51128C30O51117C36O51179C41O51179C45O51365C53O51375C58O51365C65O51389C70O51389C76O51410C77O51424C83O51466C88O51466C92O51459C96O51490C101O51490C105O51521C113O51521C119O51556",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "prototypeAccessors.inFunction.get node:internal/deps/acorn/acorn/dist/acorn:582:48",
    "type": "JS",
    "kind": "Unopt",
    "func": 414,
    "tm": 210531,
    "source": {
      "script": 138,
      "start": 32085,
      "end": 32150,
      "positions": "C0O32103C5O32103C10O32120C17O32127C22O32145C25O32148",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseArrowExpression node:internal/deps/acorn/acorn/dist/acorn:3191:39",
    "type": "JS",
    "kind": "Unopt",
    "func": 415,
    "tm": 210712,
    "source": {
      "script": 138,
      "start": 132308,
      "end": 132971,
      "positions": "C0O132370C5O132399C10O132433C15O132458C25O132469C33O132499C37O132458C42O132524C47O132524C52O132557C57O132565C64O132577C69O132585C71O132600C73O132596C77O132616C78O132630C82O132639C83O132653C87O132662C88O132681C92O132710C99O132710C105O132703C109O132751C127O132751C132O132803C134O132817C138O132836C140O132850C144O132869C146O132888C150O132924C158O132924C164O132967",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$2.toAssignableList node:internal/deps/acorn/acorn/dist/acorn:1927:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 416,
    "tm": 210809,
    "source": {
      "script": 138,
      "start": 81928,
      "end": 82371,
      "positions": "C0O81975C5O82000C7O82005C9O82005C14O82035C16O82043C20O82054C22O82070C27O82070C33O82013C38O81987C41O82112C45O82140C47O82153C50O82148C54O82174C59O82182C66O82194C73O82203C77O82216C79O82229C86O82234C91O82260C96O82269C103O82274C108O82307C113O82323C118O82332C123O82307C128O82352C130O82367",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$2.toAssignable node:internal/deps/acorn/acorn/dist/acorn:1846:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 417,
    "tm": 210927
  },
  {
    "name": "pp$9.readToken_mult_modulo_exp node:internal/deps/acorn/acorn/dist/acorn:4892:44",
    "type": "JS",
    "kind": "Unopt",
    "func": 418,
    "tm": 211045,
    "source": {
      "script": 138,
      "start": 191086,
      "end": 191568,
      "positions": "C0O191123C5O191129C10O191145C14O191149C18O191129C24O191170C27O191193C29O191198C37O191213C46O191226C51O191290C56O191298C63O191310C70O191323C77O191338C82O191354C87O191368C90O191386C95O191414C100O191420C105O191436C109O191440C113O191420C119O191457C121O191466C126O191488C134O191503C141O191516C145O191488C151O191520C152O191539C157O191539C163O191564",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "prototypeAccessors.inGenerator.get node:internal/deps/acorn/acorn/dist/acorn:583:49",
    "type": "JS",
    "kind": "Baseline",
    "func": 343,
    "tm": 211106,
    "source": {
      "script": 138,
      "start": 32200,
      "end": 32310,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseExprOps node:internal/deps/acorn/acorn/dist/acorn:2480:31",
    "type": "JS",
    "kind": "Baseline",
    "func": 376,
    "tm": 211136,
    "source": {
      "script": 138,
      "start": 102410,
      "end": 102809,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "DestructuringErrors node:internal/deps/acorn/acorn/dist/acorn:744:31",
    "type": "JS",
    "kind": "Baseline",
    "func": 374,
    "tm": 211160,
    "source": {
      "script": 138,
      "start": 37824,
      "end": 37977,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseSubscripts node:internal/deps/acorn/acorn/dist/acorn:2595:34",
    "type": "JS",
    "kind": "Baseline",
    "func": 380,
    "tm": 211189,
    "source": {
      "script": 138,
      "start": 108012,
      "end": 108902,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "prototypeAccessors.inAsync.get node:internal/deps/acorn/acorn/dist/acorn:584:45",
    "type": "JS",
    "kind": "Baseline",
    "func": 345,
    "tm": 211211,
    "source": {
      "script": 138,
      "start": 32356,
      "end": 32462,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$6.exitScope node:internal/deps/acorn/acorn/dist/acorn:3449:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 419,
    "tm": 211395,
    "source": {
      "script": 138,
      "start": 142059,
      "end": 142094,
      "positions": "C0O142073C5O142084C10O142084C15O142093",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.readInt node:internal/deps/acorn/acorn/dist/acorn:5132:26",
    "type": "JS",
    "kind": "Baseline",
    "func": 386,
    "tm": 211595,
    "source": {
      "script": 138,
      "start": 199884,
      "end": 201657,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseLiteral node:internal/deps/acorn/acorn/dist/acorn:2849:31",
    "type": "JS",
    "kind": "Baseline",
    "func": 358,
    "tm": 211632,
    "source": {
      "script": 138,
      "start": 118152,
      "end": 118455,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseExprSubscripts node:internal/deps/acorn/acorn/dist/acorn:2581:38",
    "type": "JS",
    "kind": "Baseline",
    "func": 378,
    "tm": 211659,
    "source": {
      "script": 138,
      "start": 107147,
      "end": 107976,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$1.parseWhileStatement node:internal/deps/acorn/acorn/dist/acorn:1153:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 420,
    "tm": 211783,
    "source": {
      "script": 138,
      "start": 54607,
      "end": 54834,
      "positions": "C0O54625C5O54625C9O54654C14O54654C18O54647C22O54687C27O54694C35O54694C40O54732C48O54732C53O54725C57O54766C62O54773C67O54773C71O54796C79O54796C85O54830",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseParenAndDistinguishExpression node:internal/deps/acorn/acorn/dist/acorn:2865:53",
    "type": "JS",
    "kind": "Unopt",
    "func": 421,
    "tm": 211928
  },
  {
    "name": "pp$4.parseParenItem node:internal/deps/acorn/acorn/dist/acorn:2927:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 422,
    "tm": 212071,
    "source": {
      "script": 138,
      "start": 121267,
      "end": 121295,
      "positions": "C0O121280C2O121291",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.readToken_lt_gt node:internal/deps/acorn/acorn/dist/acorn:4943:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 423,
    "tm": 212140,
    "source": {
      "script": 138,
      "start": 192970,
      "end": 193740,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp.isSimpleAssignTarget node:internal/deps/acorn/acorn/dist/acorn:779:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 424,
    "tm": 212223,
    "source": {
      "script": 138,
      "start": 39404,
      "end": 39599,
      "positions": "C0O39426C7O39431C12O39482C17O39508C22O39482C27O39519C28O39538C35O39543C40O39568C47O39573C50O39595",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseMaybeConditional node:internal/deps/acorn/acorn/dist/acorn:2463:40",
    "type": "JS",
    "kind": "Baseline",
    "func": 375,
    "tm": 212305,
    "source": {
      "script": 138,
      "start": 101770,
      "end": 102342,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$6.currentScope node:internal/deps/acorn/acorn/dist/acorn:3503:31",
    "type": "JS",
    "kind": "Baseline",
    "func": 350,
    "tm": 212346,
    "source": {
      "script": 138,
      "start": 144320,
      "end": 144383,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.finishOp node:internal/deps/acorn/acorn/dist/acorn:5084:27",
    "type": "JS",
    "kind": "Baseline",
    "func": 371,
    "tm": 212371,
    "source": {
      "script": 138,
      "start": 198073,
      "end": 198211,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseIdent node:internal/deps/acorn/acorn/dist/acorn:3331:29",
    "type": "JS",
    "kind": "Baseline",
    "func": 339,
    "tm": 212401,
    "source": {
      "script": 138,
      "start": 138089,
      "end": 139165,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp.expect node:internal/deps/acorn/acorn/dist/acorn:734:23",
    "type": "JS",
    "kind": "Baseline",
    "func": 364,
    "tm": 212423,
    "source": {
      "script": 138,
      "start": 37591,
      "end": 37644,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$1.isAsyncFunction node:internal/deps/acorn/acorn/dist/acorn:842:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 425,
    "tm": 212607,
    "source": {
      "script": 138,
      "start": 41981,
      "end": 42487,
      "positions": "C0O41999C5O42007C12O42019C17O42032C25O42032C32O42063C33O42075C34O42083C37O42115C41O42108C45O42135C48O42150C53O42160C58O42150C64O42188C70O42198C74O42202C78O42192C82O42221C85O42239C90O42249C95O42255C100O42266C105O42255C112O42239C120O42292C125O42298C132O42315C136O42298C145O42320C152O42350C156O42363C161O42369C165O42354C173O42418C178O42424C185O42440C189O42424C195O42388C207O42455C218O42473C222O42483",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.readToken_plus_min node:internal/deps/acorn/acorn/dist/acorn:4927:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 426,
    "tm": 212701,
    "source": {
      "script": 138,
      "start": 192361,
      "end": 192934,
      "positions": "C0O192398C5O192404C10O192420C14O192424C18O192404C24O192434C26O192443C31O192461C33O192470C38O192486C44O192503C49O192509C54O192525C58O192529C62O192509C70O192534C75O192560C81O192571C89O192590C94O192600C99O192606C104O192617C109O192634C114O192606C121O192590C128O192689C136O192689C141O192722C146O192722C150O192755C155O192755C159O192766C160O192793C168O192808C176O192793C182O192818C183O192829C185O192838C190O192860C198O192875C206O192860C212O192885C213O192904C221O192919C229O192904C235O192930",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$1.parseExpressionStatement node:internal/deps/acorn/acorn/dist/acorn:1199:43",
    "type": "JS",
    "kind": "Unopt",
    "func": 427,
    "tm": 212800,
    "source": {
      "script": 138,
      "start": 56300,
      "end": 56424,
      "positions": "C0O56319C2O56335C6O56352C11O56352C15O56381C23O56381C29O56420",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseSubscript node:internal/deps/acorn/acorn/dist/acorn:2618:33",
    "type": "JS",
    "kind": "Baseline",
    "func": 381,
    "tm": 212902,
    "source": {
      "script": 138,
      "start": 108937,
      "end": 111940,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "stringToNumber node:internal/deps/acorn/acorn/dist/acorn:5168:26",
    "type": "JS",
    "kind": "Baseline",
    "func": 387,
    "tm": 212933,
    "source": {
      "script": 138,
      "start": 201685,
      "end": 201946,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseMaybeAssign node:internal/deps/acorn/acorn/dist/acorn:2410:35",
    "type": "JS",
    "kind": "Baseline",
    "func": 373,
    "tm": 212969,
    "source": {
      "script": 138,
      "start": 99328,
      "end": 101677,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.getTokenFromCode node:internal/deps/acorn/acorn/dist/acorn:5005:35",
    "type": "JS",
    "kind": "Baseline",
    "func": 354,
    "tm": 213082,
    "source": {
      "script": 138,
      "start": 195336,
      "end": 198044,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$1.adaptDirectivePrologue node:internal/deps/acorn/acorn/dist/acorn:1826:41",
    "type": "JS",
    "kind": "Unopt",
    "func": 428,
    "tm": 213196,
    "source": {
      "script": 138,
      "start": 78248,
      "end": 78441,
      "positions": "C0O78280C2O78298C6O78285C11O78313C18O78344C22O78313C29O78363C31O78373C37O78399C41O78403C46O78414C51O78418C62O78418C68O78387C72O78352C77O78267C81O78440",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$1.isDirectiveCandidate node:internal/deps/acorn/acorn/dist/acorn:1831:39",
    "type": "JS",
    "kind": "Unopt",
    "func": 429,
    "tm": 213252,
    "source": {
      "script": 138,
      "start": 78481,
      "end": 78795,
      "positions": "C0O78524C7O78529C12O78574C17O78585C24O78590C29O78630C34O78641C42O78714C47O78730C51O78719C57O78737C62O78754C67O78770C71O78759C77O78777C80O78791",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.checkUnreserved node:internal/deps/acorn/acorn/dist/acorn:3302:34",
    "type": "JS",
    "kind": "Baseline",
    "func": 342,
    "tm": 213345,
    "source": {
      "script": 138,
      "start": 136652,
      "end": 137902,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.buildBinary node:internal/deps/acorn/acorn/dist/acorn:2518:30",
    "type": "JS",
    "kind": "Baseline",
    "func": 392,
    "tm": 213374,
    "source": {
      "script": 138,
      "start": 104560,
      "end": 104820,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "types.parenR.updateContext.types.braceR.updateContext node:internal/deps/acorn/acorn/dist/acorn:2252:69",
    "type": "JS",
    "kind": "Baseline",
    "func": 365,
    "tm": 213398,
    "source": {
      "script": 138,
      "start": 93622,
      "end": 93901,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp.semicolon node:internal/deps/acorn/acorn/dist/acorn:717:26",
    "type": "JS",
    "kind": "Baseline",
    "func": 359,
    "tm": 213420,
    "source": {
      "script": 138,
      "start": 37082,
      "end": 37171,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "types.backQuote.updateContext node:internal/deps/acorn/acorn/dist/acorn:2295:43",
    "type": "JS",
    "kind": "Unopt",
    "func": 430,
    "tm": 213600,
    "source": {
      "script": 138,
      "start": 95196,
      "end": 95364,
      "positions": "C0O95214C5O95214C13O95239C17O95227C22O95260C27O95268C32O95268C38O95299C43O95307C51O95320C56O95307C61O95335C62O95352C67O95363",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseTemplate node:internal/deps/acorn/acorn/dist/acorn:2994:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 431,
    "tm": 213687,
    "source": {
      "script": 138,
      "start": 123902,
      "end": 124602,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "types$1.q_tmpl node:internal/deps/acorn/acorn/dist/acorn:2186:54",
    "type": "JS",
    "kind": "Unopt",
    "func": 432,
    "tm": 213747,
    "source": {
      "script": 138,
      "start": 91245,
      "end": 91285,
      "positions": "C0O91260C5O91260C9O91283",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.tryReadTemplateToken node:internal/deps/acorn/acorn/dist/acorn:5283:39",
    "type": "JS",
    "kind": "Unopt",
    "func": 433,
    "tm": 213790,
    "source": {
      "script": 138,
      "start": 206077,
      "end": 206354,
      "positions": "C0O206086C1O206109C8O206138C13O206138C30O206181C37O206189C42O206239C47O206239C53O206290C55O206290C58O206319C59O206342C64O206353",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.readTmplToken node:internal/deps/acorn/acorn/dist/acorn:5306:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 434,
    "tm": 213979
  },
  {
    "name": "pp$4.parseTemplateElement node:internal/deps/acorn/acorn/dist/acorn:2971:39",
    "type": "JS",
    "kind": "Unopt",
    "func": 435,
    "tm": 214140,
    "source": {
      "script": 138,
      "start": 123272,
      "end": 123868,
      "positions": "C0O123303C5O123334C10O123334C15O123360C23O123375C27O123365C32O123400C36O123430C41O123452C49O123430C55O123526C60O123559C70O123537C76O123615C81O123648C86O123654C91O123665C96O123677C101O123654C108O123681C121O123682C131O123728C141O123626C145O123758C150O123758C154O123787C162O123802C166O123792C169O123780C173O123829C181O123829C187O123864",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "types.dollarBraceL.updateContext node:internal/deps/acorn/acorn/dist/acorn:2269:46",
    "type": "JS",
    "kind": "Unopt",
    "func": 436,
    "tm": 214242,
    "source": {
      "script": 138,
      "start": 94122,
      "end": 94198,
      "positions": "C0O94136C5O94144C13O94157C18O94144C23O94170C24O94187C29O94197",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "\\r\\n?",
    "timestamp": 214401,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": "pp$4.parseMaybeUnary node:internal/deps/acorn/acorn/dist/acorn:2528:34",
    "type": "JS",
    "kind": "Baseline",
    "func": 377,
    "tm": 214594,
    "source": {
      "script": 138,
      "start": 104910,
      "end": 106821,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseExprOp node:internal/deps/acorn/acorn/dist/acorn:2493:30",
    "type": "JS",
    "kind": "Baseline",
    "func": 390,
    "tm": 214635,
    "source": {
      "script": 138,
      "start": 103178,
      "end": 104528,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "types.parenL.updateContext node:internal/deps/acorn/acorn/dist/acorn:2274:40",
    "type": "JS",
    "kind": "Baseline",
    "func": 379,
    "tm": 214659,
    "source": {
      "script": 138,
      "start": 94240,
      "end": 94493,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$1.parseForStatement node:internal/deps/acorn/acorn/dist/acorn:990:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 437,
    "tm": 214779
  },
  {
    "name": "prototypeAccessors.canAwait.get node:internal/deps/acorn/acorn/dist/acorn:585:46",
    "type": "JS",
    "kind": "Unopt",
    "func": 438,
    "tm": 214904,
    "source": {
      "script": 138,
      "start": 32509,
      "end": 32900,
      "positions": "C0O32536C5O32547C9O32554C13O32561C14O32561C19O32597C26O32607C30O32628C36O32654C43O32660C48O32690C49O32702C50O32721C57O32727C62O32761C69O32767C74O32782C77O32785C78O32568C83O32518C86O32811C92O32828C97O32836C104O32848C109O32863C114O32871C118O32896",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "^in(stanceof)?$",
    "timestamp": 214984,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": "pp$1.parseFor node:internal/deps/acorn/acorn/dist/acorn:1230:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 439,
    "tm": 215184,
    "source": {
      "script": 138,
      "start": 57352,
      "end": 57771,
      "positions": "C0O57371C2O57381C6O57398C14O57411C19O57398C24O57439C32O57454C36O57444C47O57473C52O57473C56O57432C60O57501C68O57514C73O57501C78O57544C86O57559C90O57549C101O57580C106O57580C110O57537C114O57608C122O57621C127O57608C132O57651C140O57651C145O57644C149O57683C154O57683C158O57705C163O57712C168O57712C172O57735C180O57735C186O57767",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "types.incDec.updateContext node:internal/deps/acorn/acorn/dist/acorn:2280:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 440,
    "tm": 215308,
    "source": {
      "script": 138,
      "start": 94535,
      "end": 94581,
      "positions": "C1O94580",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.readToken_dot node:internal/deps/acorn/acorn/dist/acorn:4872:32",
    "type": "JS",
    "kind": "Baseline",
    "func": 383,
    "tm": 215514,
    "source": {
      "script": 138,
      "start": 190353,
      "end": 190766,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.readString node:internal/deps/acorn/acorn/dist/acorn:5253:29",
    "type": "JS",
    "kind": "Baseline",
    "func": 355,
    "tm": 215557,
    "source": {
      "script": 138,
      "start": 205022,
      "end": 205957,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Scope node:internal/deps/acorn/acorn/dist/acorn:3431:29",
    "type": "JS",
    "kind": "Baseline",
    "func": 316,
    "tm": 215580,
    "source": {
      "script": 138,
      "start": 141376,
      "end": 141807,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$6.enterScope node:internal/deps/acorn/acorn/dist/acorn:3445:29",
    "type": "JS",
    "kind": "Baseline",
    "func": 315,
    "tm": 215604,
    "source": {
      "script": 138,
      "start": 141972,
      "end": 142029,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseNew node:internal/deps/acorn/acorn/dist/acorn:2943:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 441,
    "tm": 215749,
    "source": {
      "script": 138,
      "start": 121825,
      "end": 123198,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp.checkPatternErrors node:internal/deps/acorn/acorn/dist/acorn:753:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 442,
    "tm": 216025,
    "source": {
      "script": 138,
      "start": 38013,
      "end": 38464,
      "positions": "C0O38054C4O38085C5O38091C6O38125C13O38139C18O38158C23O38198C31O38158C37O38282C41O38316C47O38361C52O38384C54O38395C59O38408C67O38408C74O38463",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseParenArrowList node:internal/deps/acorn/acorn/dist/acorn:2931:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 443,
    "tm": 216077,
    "source": {
      "script": 138,
      "start": 121335,
      "end": 121474,
      "positions": "C0O121393C5O121419C10O121419C26O121393C31O121470",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$1.parseVarId node:internal/deps/acorn/acorn/dist/acorn:1298:29",
    "type": "JS",
    "kind": "Baseline",
    "func": 368,
    "tm": 216197,
    "source": {
      "script": 138,
      "start": 59631,
      "end": 59773,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseExprList node:internal/deps/acorn/acorn/dist/acorn:3279:32",
    "type": "JS",
    "kind": "Baseline",
    "func": 382,
    "tm": 216236,
    "source": {
      "script": 138,
      "start": 135807,
      "end": 136616,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp.insertSemicolon node:internal/deps/acorn/acorn/dist/acorn:706:32",
    "type": "JS",
    "kind": "Baseline",
    "func": 360,
    "tm": 216259,
    "source": {
      "script": 138,
      "start": 36731,
      "end": 36927,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$1.parseBlock node:internal/deps/acorn/acorn/dist/acorn:1209:29",
    "type": "JS",
    "kind": "Baseline",
    "func": 410,
    "tm": 216285,
    "source": {
      "script": 138,
      "start": 56611,
      "end": 57176,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseExprAtom node:internal/deps/acorn/acorn/dist/acorn:2684:32",
    "type": "JS",
    "kind": "Baseline",
    "func": 357,
    "tm": 216691,
    "source": {
      "script": 138,
      "start": 112196,
      "end": 116337,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$1.parseStatement node:internal/deps/acorn/acorn/dist/acorn:862:33",
    "type": "JS",
    "kind": "Baseline",
    "func": 332,
    "tm": 216892,
    "source": {
      "script": 138,
      "start": 42779,
      "end": 46373,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "types.braceL.updateContext node:internal/deps/acorn/acorn/dist/acorn:2264:40",
    "type": "JS",
    "kind": "Baseline",
    "func": 362,
    "tm": 216924,
    "source": {
      "script": 138,
      "start": 93943,
      "end": 94074,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$4.parseExpression node:internal/deps/acorn/acorn/dist/acorn:2395:34",
    "type": "JS",
    "kind": "Baseline",
    "func": 388,
    "tm": 216951,
    "source": {
      "script": 138,
      "start": 98707,
      "end": 99197,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$1.parseExpressionStatement node:internal/deps/acorn/acorn/dist/acorn:1199:43",
    "type": "JS",
    "kind": "Baseline",
    "func": 427,
    "tm": 216972,
    "source": {
      "script": 138,
      "start": 56300,
      "end": 56424,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$6.exitScope node:internal/deps/acorn/acorn/dist/acorn:3449:28",
    "type": "JS",
    "kind": "Baseline",
    "func": 419,
    "tm": 216993,
    "source": {
      "script": 138,
      "start": 142059,
      "end": 142094,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "types$1.q_tmpl node:internal/deps/acorn/acorn/dist/acorn:2186:54",
    "type": "JS",
    "kind": "Baseline",
    "func": 432,
    "tm": 217135,
    "source": {
      "script": 138,
      "start": 91245,
      "end": 91285,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pp$9.readTmplToken node:internal/deps/acorn/acorn/dist/acorn:5306:32",
    "type": "JS",
    "kind": "Baseline",
    "func": 434,
    "tm": 217184,
    "source": {
      "script": 138,
      "start": 206617,
      "end": 208084,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/helpers:214:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 444,
    "tm": 217351,
    "source": {
      "script": 98,
      "start": 6395,
      "end": 6580,
      "positions": "C0O6414C7O6419C12O6462C19O6467C24O6508C31O6513C36O6549C43O6554C46O6580",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "emitWarningSync node:internal/process/warning:156:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 445,
    "tm": 217409,
    "source": {
      "script": 76,
      "start": 4175,
      "end": 4245,
      "positions": "C0O4189C3O4197C14O4213C19O4197C26O4244",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createWarningObject node:internal/process/warning:160:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 446,
    "tm": 217946,
    "source": {
      "script": 76,
      "start": 4275,
      "end": 4990,
      "positions": "C0O4315C10O4315C14O4511C19O4517C24O4536C29O4540C34O4574C40O4596C44O4654C51O4664C58O4686C63O4690C68O4724C75O4746C79O4765C81O4780C89O4787C94O4780C98O4778C102O4809C106O4833C108O4846C112O4856C116O4882C118O4897C122O4909C132O4941C137O4957C142O4909C147O4973C149O4988",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isErrorStackTraceLimitWritable node:internal/errors:198:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 447,
    "tm": 218018,
    "source": {
      "script": 11,
      "start": 5518,
      "end": 5775,
      "positions": "C0O5538C7O5569C13O5538C19O5598C21O5628C28O5654C31O5635C35O5661C36O5669C44O5676C51O5735C57O5755C62O5759C63O5773",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "onWarning node:internal/process/warning:79:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 448,
    "tm": 218202,
    "source": {
      "script": 76,
      "start": 1704,
      "end": 2835,
      "positions": "C0O1718C2O1743C4O1732C9O1751C10O1758C11O1791C18O1796C22O1824C27O1853C33O1868C34O1875C35O1892C38O1900C46O1941C51O1966C56O1997C62O2009C67O2017C85O2033C100O2056C106O2066C109O2085C130O2097C134O2118C140O2149C154O2201C165O2246C170O2246C179O2269C182O2269C190O2327C198O2354C201O2374C216O2390C222O2405C226O2449C237O2527C243O2527C248O2542C256O2560C268O2543C275O2590C280O2609C293O2618C306O2658C316O2691C320O2715C326O2749C329O2749C333O2765C335O2788C338O2795C342O2812C343O2819C346O2819C351O2834",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "lazyOption node:internal/process/warning:26:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 449,
    "tm": 218299,
    "source": {
      "script": 76,
      "start": 430,
      "end": 965,
      "positions": "C0O557C6O594C12O604C19O602C25O637C30O649C38O649C46O684C51O700C56O722C64O722C72O712C78O768C83O780C91O780C99O818C104O834C109O856C117O856C125O846C133O914C138O926C144O944C148O963",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "writeOut node:internal/process/warning:46:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 450,
    "tm": 218352,
    "source": {
      "script": 76,
      "start": 1083,
      "end": 1188,
      "positions": "C0O1097C6O1115C12O1123C17O1157C24O1121C30O1171C35O1171C40O1187",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "warn node:internal/console/constructor:364:7",
    "type": "JS",
    "kind": "Unopt",
    "func": 451,
    "tm": 218424,
    "source": {
      "script": 30,
      "start": 11101,
      "end": 11185,
      "positions": "C0O11101C3O11117C5O11122C7O11121C13O11139C18O11156C20O11155C24O11173C30O11138C37O11184",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "value node:internal/console/constructor:329:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 452,
    "tm": 220070,
    "source": {
      "script": 30,
      "start": 9825,
      "end": 9997,
      "positions": "C0O9853C2O9858C4O9857C8O9883C13O9877C19O9899C24O9899C29O9940C36O9960C44O9947C49O9991",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/console/constructor:212:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 453,
    "tm": 220114,
    "source": {
      "script": 30,
      "start": 6000,
      "end": 6096,
      "positions": "C0O6017C6O6032C9O6048C16O6039C22O6070C26O6084",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getStderr node:internal/bootstrap/switches/is_main_thread:133:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 454,
    "tm": 220173,
    "source": {
      "script": 88,
      "start": 3640,
      "end": 3953,
      "positions": "C0O3647C6O3659C10O3673C11O3676C17O3685C24O3683C30O3717C37O3738C40O3745C44O3736C48O3820C55O3836C59O3854C64O3865C70O3878C73O3886C86O3886C92O3937C96O3951",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createWritableStdioStream node:internal/bootstrap/switches/is_main_thread:41:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 455,
    "tm": 220753,
    "source": {
      "script": 88,
      "start": 1312,
      "end": 2845,
      "positions": "C0O1325C4O1403C7O1403C20O1395C53O1460C59O1460C64O1482C66O1499C73O1491C79O1522C81O1535C85O1550C87O1605C93O1605C98O1653C100O1682C110O1662C116O1715C118O1728C122O1742C124O1801C130O1801C135O2033C138O2045C147O2064C152O2072C159O2075C164O2120C170O2120C175O2101C180O2163C184O2180C199O2214C208O2172C216O2319C220O2336C232O2355C238O2328C244O2438C246O2451C250O2467C252O2610C258O2610C263O2597C268O2635C275O2667C285O2644C291O2783C293O2793C297O2802C298O2818C302O2829C304O2843",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:tty:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 456,
    "tm": 220996,
    "source": {
      "script": 139,
      "start": 0,
      "end": 5065,
      "positions": "C0O0C4O5065",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:tty:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 457,
    "tm": 221474,
    "source": {
      "script": 139,
      "start": 0,
      "end": 5065,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/tty:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 458,
    "tm": 221840,
    "source": {
      "script": 140,
      "start": 0,
      "end": 6446,
      "positions": "C0O0C4O6446",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/tty:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 459,
    "tm": 222339,
    "source": {
      "script": 140,
      "start": 0,
      "end": 6446,
      "positions": "C0O0C69O1186C75O1208C81O1231C87O1255C93O1329C99O1329C104O1309C110O1366C111O1366C113O1395C115O1395C117O1416C119O1416C121O1438C123O1438C125O1460C127O1460C129O1877C136O1890C142O1913C148O1937C154O1960C160O1983C166O2005C172O2026C178O2050C184O2074C190O2096C196O2119C202O2140C208O2163C214O2182C220O2287C226O2379C232O1877C234O2420C328O2420C330O2541C331O2541C333O6395C340O6416C346O6433C352O6410C357O6445",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "WriteStream node:tty:85:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 460,
    "tm": 222616,
    "source": {
      "script": 139,
      "start": 2514,
      "end": 3460,
      "positions": "C0O2523C2O2534C7O2563C12O2570C17O2590C18O2593C20O2600C26O2605C32O2618C37O2627C44O2633C49O2627C50O2672C52O2690C67O2690C73O2725C79O2751C86O2757C91O2751C92O2794C97O2798C102O2805C114O2830C118O2805C124O3271C129O3279C136O3279C141O3317C151O3317C157O3350C162O3358C167O3358C173O3384C175O3400C176O3422C179O3413C183O3431C185O3450C188O3441C193O3459",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "value node:internal/console/constructor:300:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 461,
    "tm": 224116,
    "source": {
      "script": 30,
      "start": 9013,
      "end": 9495,
      "positions": "C0O9042C2O9047C4O9046C8O9066C10O9076C15O9113C21O9148C29O9198C34O9198C41O9214C48O9258C53O9269C58O9269C64O9286C66O9321C72O9355C74O9370C78O9397C80O9412C81O9428C87O9443C93O9466C95O9489",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getColorDepth node:internal/tty:106:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 462,
    "tm": 224296
  },
  {
    "name": "formatWithOptions node:internal/util/inspect:1883:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 463,
    "tm": 224526,
    "source": {
      "script": 14,
      "start": 63655,
      "end": 63904,
      "positions": "C0O63655C8O63685C18O63758C34O63764C39O63758C40O63847C43O63854C48O63902",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "formatWithOptionsInternal node:internal/util/inspect:1891:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 464,
    "tm": 229939
  },
  {
    "name": "value node:internal/console/constructor:258:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 465,
    "tm": 230110,
    "source": {
      "script": 30,
      "start": 7494,
      "end": 8932,
      "positions": "C0O7551C5O7592C7O7597C9O7596C13O7637C15O7654C17O7650C21O7687C23O7704C29O7719C34O7755C38O7780C44O7807C49O7851C55O7858C60O7875C68O7879C75O7930C80O7962C90O7982C98O7939C105O8016C107O8037C112O8061C122O8084C123O8101C128O8126C133O8126C138O8140C145O8457C153O8457C160O8480C165O8504C176O8504C182O8541C187O8541C206O8737C216O8741C222O8776C224O8776C238O8881C239O8888C250O8888C268O8931",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "listenerCount node:events:722:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 466,
    "tm": 230191,
    "source": {
      "script": 13,
      "start": 20617,
      "end": 20885,
      "positions": "C0O20648C5O20660C7O20711C9O20717C13O20730C17O20776C19O20785C20O20797C24O20853C28O20860C29O20874C30O20883",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "once node:events:528:44",
    "type": "JS",
    "kind": "Unopt",
    "func": 467,
    "tm": 230236,
    "source": {
      "script": 13,
      "start": 15368,
      "end": 15481,
      "positions": "C0O15389C3O15389C7O15422C24O15431C30O15422C36O15467C38O15479",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "_onceWrap node:events:514:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 468,
    "tm": 230285,
    "source": {
      "script": 13,
      "start": 14941,
      "end": 15164,
      "positions": "C0O14984C6O15008C12O15019C18O15027C24O15033C31O15063C34O15075C39O15075C45O15090C47O15107C51O15121C53O15134C57O15147C59O15162",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Writable.write node:internal/streams/writable:333:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 469,
    "tm": 230374,
    "source": {
      "script": 56,
      "start": 10749,
      "end": 10827,
      "positions": "C0O10775C15O10782C22O10816C25O10825",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "_write node:internal/streams/writable:283:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 470,
    "tm": 230461,
    "source": {
      "script": 56,
      "start": 9383,
      "end": 10712,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "writeOrBuffer node:internal/streams/writable:365:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 471,
    "tm": 230567,
    "source": {
      "script": 56,
      "start": 11668,
      "end": 12659,
      "positions": "C0O11733C10O11756C15O11767C22O11783C25O11780C29O11848C34O11863C38O11855C42O11952C44O11966C45O11982C49O12003C55O12020C61O12036C67O12054C73O12079C78O12088C90O12095C96O12102C102O12112C106O12088C111O12139C119O12162C124O12184C125O12201C129O12230C137O12250C142O12267C143O12281C149O12311C151O12326C155O12337C157O12351C161O12367C162O12381C166O12393C167O12404C171O12423C176O12453C190O12423C195O12467C196O12478C200O12608C204O12629C211O12647C216O12657",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Socket._write node:net:806:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 472,
    "tm": 230640,
    "source": {
      "script": 120,
      "start": 20696,
      "end": 20769,
      "positions": "C0O20726C19O20726C25O20768",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Socket._writeGeneric node:net:769:42",
    "type": "JS",
    "kind": "Unopt",
    "func": 473,
    "tm": 230704,
    "source": {
      "script": 120,
      "start": 19806,
      "end": 20559,
      "positions": "C0O19806C21O20008C27O20026C29O20044C33O20056C35O20078C39O20099C52O20099C58O20202C59O20209C60O20216C61O20234C65O20244C67O20266C71O20285C77O20300C84O20307C87O20303C93O20300C97O20333C98O20346C99O20359C104O20359C108O20381C110O20388C114O20404C130O20410C138O20452C157O20458C163O20508C169O20519C173O20524C176O20551C180O20545C185O20558",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "_unrefTimer node:net:417:52",
    "type": "JS",
    "kind": "Unopt",
    "func": 474,
    "tm": 230772,
    "source": {
      "script": 120,
      "start": 11293,
      "end": 11403,
      "positions": "C0O11313C5O11321C9O11352C11O11358C13O11357C18O11375C20O11377C22O11376C26O11387C31O11387C35O11337C40O11300C44O11402",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "writeGeneric node:internal/stream_base_commons:151:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 475,
    "tm": 230834,
    "source": {
      "script": 84,
      "start": 3680,
      "end": 3864,
      "positions": "C0O3723C5O3744C7O3743C11O3723C17O3773C29O3773C35O3813C47O3813C52O3851C54O3862",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createWriteWrap node:internal/stream_base_commons:113:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 476,
    "tm": 231483,
    "source": {
      "script": 84,
      "start": 2802,
      "end": 3016,
      "positions": "C0O2837C5O2837C11O2857C13O2868C17O2880C19O2895C23O2916C24O2926C28O2937C29O2947C33O2954C34O2965C38O2975C40O2988C44O3003C46O3014",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "handleWriteReq node:internal/stream_base_commons:45:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 477,
    "tm": 231597,
    "source": {
      "script": 84,
      "start": 1174,
      "end": 2006,
      "positions": "C0O1208C5O1227C80O1297C85O1297C92O1327C99O1347C101O1346C106O1376C108O1387C112O1401C114O1412C115O1477C120O1477C126O1506C127O1562C132O1562C138O1589C139O1628C144O1628C150O1656C151O1753C156O1753C162O1780C163O1821C168O1828C173O1828C180O1875C185O1875C192O1907C199O1927C201O1926C206O1956C208O1967C212O1983C214O1994",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "afterWriteDispatched node:internal/stream_base_commons:159:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 478,
    "tm": 231694,
    "source": {
      "script": 84,
      "start": 3895,
      "end": 4169,
      "positions": "C0O3914C2O3926C7O3942C9O3941C12O3924C16O3960C18O3974C23O3990C25O3989C30O3970C34O4014C35O4022C40O4033C42O4043C48O4076C56O4043C62O4040C66O4084C67O4097C73O4117C81O4152C86O4152C91O4168",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "onwrite node:internal/streams/writable:425:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 479,
    "tm": 231813,
    "source": {
      "script": 56,
      "start": 13444,
      "end": 15067,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "nextTick node:internal/process/task_queues:104:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 480,
    "tm": 231952,
    "source": {
      "script": 25,
      "start": 2591,
      "end": 3435,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:221:42",
    "type": "JS",
    "kind": "Unopt",
    "func": 481,
    "tm": 232331,
    "source": {
      "script": 17,
      "start": 6796,
      "end": 6897,
      "positions": "C0O6814C6O6854C13O6860C18O6854C20O6896",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isEmpty node:internal/fixed_queue:95:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 482,
    "tm": 232377,
    "source": {
      "script": 28,
      "start": 3637,
      "end": 3677,
      "positions": "C0O3658C5O3663C10O3663C14O3673",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isEmpty node:internal/fixed_queue:67:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 483,
    "tm": 232760,
    "source": {
      "script": 28,
      "start": 3084,
      "end": 3129,
      "positions": "C0O3105C5O3118C9O3109C12O3125",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setHasTickScheduled node:internal/process/task_queues:52:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 484,
    "tm": 232803,
    "source": {
      "script": 25,
      "start": 1104,
      "end": 1162,
      "positions": "C0O1116C7O1125C12O1146C19O1144C24O1161",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "newAsyncId node:internal/async_hooks:415:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 485,
    "tm": 232871,
    "source": {
      "script": 24,
      "start": 14326,
      "end": 14377,
      "positions": "C0O14333C7O14358C16O14373C22O14375",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getDefaultTriggerAsyncId node:internal/async_hooks:431:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 486,
    "tm": 234448,
    "source": {
      "script": 24,
      "start": 14785,
      "end": 15042,
      "positions": "C0O14822C7O14838C9O14837C13O14931C14O14957C19O14966C26O14989C28O14988C31O15008C32O15011C34O15040",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initHooksExist node:internal/async_hooks:468:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 487,
    "tm": 234512,
    "source": {
      "script": 24,
      "start": 15781,
      "end": 15813,
      "positions": "C0O15788C5O15804C8O15795C12O15811",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "hasHooks node:internal/async_hooks:460:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 488,
    "tm": 234550,
    "source": {
      "script": 24,
      "start": 15649,
      "end": 15695,
      "positions": "C0O15659C7O15683C12O15689C15O15693",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "push node:internal/fixed_queue:99:7",
    "type": "JS",
    "kind": "Unopt",
    "func": 489,
    "tm": 234592,
    "source": {
      "script": 28,
      "start": 3685,
      "end": 3945,
      "positions": "C0O3707C5O3712C10O3712C16O3871C23O3887C26O3883C32O3881C38O3864C42O3925C47O3930C52O3930C58O3944",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isFull node:internal/fixed_queue:71:9",
    "type": "JS",
    "kind": "Unopt",
    "func": 490,
    "tm": 234633,
    "source": {
      "script": 28,
      "start": 3139,
      "end": 3200,
      "positions": "C0O3162C4O3166C10O3173C12O3171C16O3189C20O3180C23O3196",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "push node:internal/fixed_queue:75:7",
    "type": "JS",
    "kind": "Unopt",
    "func": 491,
    "tm": 234671,
    "source": {
      "script": 28,
      "start": 3208,
      "end": 3291,
      "positions": "C0O3226C5O3236C12O3241C16O3270C20O3274C26O3281C28O3279C31O3262C36O3290",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Readable.removeListener node:internal/streams/readable:905:45",
    "type": "JS",
    "kind": "Unopt",
    "func": 492,
    "tm": 234735,
    "source": {
      "script": 49,
      "start": 28775,
      "end": 29332,
      "positions": "C0O28800C5O28807C10O28817C15O28832C29O28832C35O28906C37O28913C42O29263C45O29271C53O29271C59O29319C61O29330",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "removeListener node:events:557:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 493,
    "tm": 234845,
    "source": {
      "script": 13,
      "start": 16114,
      "end": 17385,
      "positions": "C0O16139C3O16139C7O16191C12O16206C14O16240C16O16252C17O16273C19O16279C23O16293C25O16325C27O16337C28O16345C30O16354C35O16375C42O16384C47O16408C54O16419C59O16432C64O16449C66O16464C71O16464C75O16462C81O16509C83O16523C85O16551C91O16584C99O16618C114O16584C121O16664C127O16721C130O16752C134O16759C138O16766C139O16766C144O16789C146O16797C152O16801C159O16821C163O16825C170O16834C175O16862C180O16888C182O16773C187O16734C190O16926C191O16939C196O16954C198O16966C199O16976C200O16989C205O17011C210O17011C216O17045C222O17086C228O17098C233O17122C240O17096C246O17144C251O17144C256O17199C263O17206C268O17223C269O17242C272O17236C276O17267C282O17312C299O17312C304O17367C306O17379",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/process/execution:136:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 494,
    "tm": 234997,
    "source": {
      "script": 75,
      "start": 4290,
      "end": 6432,
      "positions": "C0O4454C5O4454C8O4745C13O4766C23O4819C29O4819C34O4854C37O4883C42O4883C48O4937C63O4971C74O5013C94O5105C96O4937C107O5230C118O5292C121O5300C135O5300C140O5348C145O5374C151O5402C156O5424C161O5424C168O5450C171O5463C185O5463C195O5671C198O5684C204O5706C208O5723C212O5741C217O5758C221O5773C224O5781C235O5781C247O5892C248O5905C249O6049C255O6049C260O6066C268O6067C273O6163C278O6167C283O6207C290O6217C293O6217C297O6207C301O6253C306O6253C311O6194C314O6390C319O6390C322O6416C323O6428",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "clearDefaultTriggerAsyncId node:internal/async_hooks:440:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 495,
    "tm": 235519,
    "source": {
      "script": 24,
      "start": 15080,
      "end": 15134,
      "positions": "C0O15087C7O15103C12O15127C17O15133",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "beforeInspector node:internal/errors:738:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 496,
    "tm": 235571,
    "source": {
      "script": 11,
      "start": 22107,
      "end": 22483,
      "positions": "C0O22121C2O22138C4O22137C11O22205C15O22211C19O22317C21O22337C23O22336C27O22366C31O22329C41O22473C45O22479",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "afterInspector node:internal/errors:752:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 497,
    "tm": 235653,
    "source": {
      "script": 11,
      "start": 22501,
      "end": 23889,
      "positions": "C0O22543C5O22570C7O23052C10O23064C17O23073C22O23107C28O23107C33O23128C38O23129C43O23167C50O23185C55O23210C62O23185C70O23257C73O23167C79O23272C80O23279C86O23283C93O23296C101O23300C106O23319C108O23456C111O23456C115O23370C125O23426C130O23502C140O23536C145O23559C153O23560C161O23579C172O23611C177O23634C182O23635C194O23717C201O23734C207O23787C210O23803C215O23818C223O23787C232O23709C237O23837C240O23858C242O23879",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "lazyInternalUtilInspect node:internal/errors:184:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 498,
    "tm": 235711,
    "source": {
      "script": 11,
      "start": 5224,
      "end": 5354,
      "positions": "C0O5231C6O5263C12O5285C19O5283C25O5325C29O5352",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "hasColors node:internal/tty:222:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 499,
    "tm": 235767,
    "source": {
      "script": 140,
      "start": 6138,
      "end": 6393,
      "positions": "C0O6155C18O6264C21O6281C27O6308C41O6308C46O6351C52O6372C56O6369C59O6364C62O6391",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/util/inspect:345:6",
    "type": "JS",
    "kind": "Unopt",
    "func": 500,
    "tm": 235835,
    "source": {
      "script": 14,
      "start": 10110,
      "end": 10152,
      "positions": "C0O10119C4O10148",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "inspect node:internal/util/inspect:286:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 501,
    "tm": 235932,
    "source": {
      "script": 14,
      "start": 8068,
      "end": 10015,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "formatValue node:internal/util/inspect:726:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 502,
    "tm": 236179,
    "source": {
      "script": 14,
      "start": 21561,
      "end": 24106,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "formatRaw node:internal/util/inspect:796:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 503,
    "tm": 236557
  },
  {
    "name": "getConstructorName node:internal/util/inspect:548:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 504,
    "tm": 236864,
    "source": {
      "script": 14,
      "start": 15972,
      "end": 17205,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isInstanceof node:internal/util/inspect:540:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 505,
    "tm": 236931,
    "source": {
      "script": 14,
      "start": 15846,
      "end": 15943,
      "positions": "C3O15876C5O15890C8O15907C11O15924C12O15937",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getKeys node:internal/util/inspect:669:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 506,
    "tm": 236998,
    "source": {
      "script": 14,
      "start": 19667,
      "end": 20642,
      "positions": "C0O19667C9O19695C11O19719C21O19719C26O19757C30O19779C40O19786C45O19836C51O19843C56O19856C63O19856C73O20216C83O20223C91O20221C101O20268C112O20275C118O20275C127O20301C134O20306C143O20343C151O20343C156O20268C160O20382C172O20389C179O20445C185O20452C190O20482C195O20546C206O20576C209O20576C215O20546C220O20628C222O20640",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isError node:internal/util:80:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 507,
    "tm": 237055,
    "source": {
      "script": 12,
      "start": 1846,
      "end": 2080,
      "positions": "C0O2032C5O2039C13O2072C15O2061C18O2078",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "formatError node:internal/util/inspect:1165:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 508,
    "tm": 237239
  },
  {
    "name": "exists node:internal/bootstrap/loaders:236:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 509,
    "tm": 237474,
    "source": {
      "script": 9,
      "start": 7275,
      "end": 7322,
      "positions": "C0O7286C5O7306C10O7310C15O7310C20O7318",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "stylizeWithColor node:internal/util/inspect:521:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 510,
    "tm": 237531,
    "source": {
      "script": 14,
      "start": 15408,
      "end": 15649,
      "positions": "C0O15443C3O15451C10O15457C14O15472C16O15517C19O15525C26O15531C30O15544C32O15575C36O15597C52O15604C65O15622C78O15629C79O15636C81O15647",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/util/inspect:409:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 511,
    "tm": 237571,
    "source": {
      "script": 14,
      "start": 12107,
      "end": 12144,
      "positions": "C0O12118C2O12129C5O12138",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "^    at (?:[^/\\\\(]+ \\(|)node:(.+):\\d+:\\d+\\)?$",
    "timestamp": 237654,
    "type": "CODE",
    "kind": "RegExp"
  }
],
  "functions": [
  {
    "name": " node:internal/main/run_main_module:1:1",
    "codes": [
      4369
    ]
  },
  {
    "name": " node:internal/main/run_main_module:1:1",
    "codes": [
      4370
    ]
  },
  {
    "name": "nativeModuleRequire node:internal/bootstrap/loaders:332:29",
    "codes": [
      4371,
      4489
    ]
  },
  {
    "name": "compileForInternalLoader node:internal/bootstrap/loaders:299:27",
    "codes": [
      4372,
      4490
    ]
  },
  {
    "name": " node:internal/bootstrap/pre_execution:1:1",
    "codes": [
      4373
    ]
  },
  {
    "name": " node:internal/bootstrap/pre_execution:1:1",
    "codes": [
      4374
    ]
  },
  {
    "name": " node:internal/options:1:1",
    "codes": [
      4375
    ]
  },
  {
    "name": " node:internal/options:1:1",
    "codes": [
      4376
    ]
  },
  {
    "name": "internalBinding node:internal/bootstrap/loaders:164:45",
    "codes": [
      4377,
      4636
    ]
  },
  {
    "name": "prepareMainThreadExecution node:internal/bootstrap/pre_execution:22:36",
    "codes": [
      4378
    ]
  },
  {
    "name": "reconnectZeroFillToggle node:internal/buffer:1072:33",
    "codes": [
      4379
    ]
  },
  {
    "name": "patchProcessObject node:internal/bootstrap/pre_execution:81:28",
    "codes": [
      4380
    ]
  },
  {
    "name": "getFastAPIs node:internal/process/per_thread:57:21",
    "codes": [
      4381
    ]
  },
  {
    "name": "resolve node:path:1091:10",
    "codes": [
      4382,
      4488
    ]
  },
  {
    "name": "validateString node:internal/validators:117:24",
    "codes": [
      4383,
      4635
    ]
  },
  {
    "name": " node:path:1082:10",
    "codes": [
      4384
    ]
  },
  {
    "name": "wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20",
    "codes": [
      4385
    ]
  },
  {
    "name": "normalizeString node:path:66:25",
    "codes": [
      4386,
      4411
    ]
  },
  {
    "name": "isPosixPathSeparator node:path:56:30",
    "codes": [
      4387,
      4410
    ]
  },
  {
    "name": "addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:129:33",
    "codes": [
      4388
    ]
  },
  {
    "name": "getOptionValue node:internal/options:39:24",
    "codes": [
      4389,
      4409
    ]
  },
  {
    "name": "getCLIOptionsFromBinding node:internal/options:18:34",
    "codes": [
      4390,
      4491
    ]
  },
  {
    "name": "setupTraceCategoryState node:internal/bootstrap/pre_execution:221:33",
    "codes": [
      4391
    ]
  },
  {
    "name": "toggleTraceCategoryState node:internal/process/per_thread:385:34",
    "codes": [
      4392
    ]
  },
  {
    "name": "setupPerfHooks node:internal/bootstrap/pre_execution:227:24",
    "codes": [
      4393
    ]
  },
  {
    "name": "refreshTimeOrigin node:internal/perf/performance:178:27",
    "codes": [
      4394
    ]
  },
  {
    "name": "refreshTimeOrigin node:internal/perf/utils:25:27",
    "codes": [
      4395
    ]
  },
  {
    "name": "setupInspectorHooks node:internal/bootstrap/pre_execution:232:29",
    "codes": [
      4396
    ]
  },
  {
    "name": " node:internal/inspector_async_hook:1:1",
    "codes": [
      4397
    ]
  },
  {
    "name": " node:internal/inspector_async_hook:1:1",
    "codes": [
      4398
    ]
  },
  {
    "name": "setupWarningHandler node:internal/bootstrap/pre_execution:141:29",
    "codes": [
      4399
    ]
  },
  {
    "name": "addListener node:events:486:58",
    "codes": [
      4400
    ]
  },
  {
    "name": "_addListener node:events:418:22",
    "codes": [
      4401
    ]
  },
  {
    "name": "checkListener node:events:127:23",
    "codes": [
      4402
    ]
  },
  {
    "name": " node:internal/validators:235:42",
    "codes": [
      4403
    ]
  },
  {
    "name": "emit node:events:340:44",
    "codes": [
      4404
    ]
  },
  {
    "name": "startListeningIfSignal node:internal/process/signal:22:32",
    "codes": [
      4405
    ]
  },
  {
    "name": "isSignal node:internal/process/signal:17:18",
    "codes": [
      4406
    ]
  },
  {
    "name": "setupDebugEnv node:internal/bootstrap/pre_execution:193:23",
    "codes": [
      4407
    ]
  },
  {
    "name": "initializeDebugEnv node:internal/util/debuglog:22:28",
    "codes": [
      4408
    ]
  },
  {
    "name": "setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:172:40",
    "codes": [
      4412
    ]
  },
  {
    "name": "initializeReport node:internal/bootstrap/pre_execution:182:26",
    "codes": [
      4413
    ]
  },
  {
    "name": " node:internal/process/report:1:1",
    "codes": [
      4414
    ]
  },
  {
    "name": " node:internal/process/report:1:1",
    "codes": [
      4415
    ]
  },
  {
    "name": "initializeReportSignalHandlers node:internal/bootstrap/pre_execution:201:40",
    "codes": [
      4416
    ]
  },
  {
    "name": "addSignalHandler node:internal/process/report:97:26",
    "codes": [
      4417
    ]
  },
  {
    "name": "initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:207:46",
    "codes": [
      4418
    ]
  },
  {
    "name": "setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:337:37",
    "codes": [
      4419
    ]
  },
  {
    "name": "initializePolicy node:internal/bootstrap/pre_execution:365:26",
    "codes": [
      4420
    ]
  },
  {
    "name": "initializeClusterIPC node:internal/bootstrap/pre_execution:356:30",
    "codes": [
      4421
    ]
  },
  {
    "name": "initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:460:38",
    "codes": [
      4422
    ]
  },
  {
    "name": " node:internal/source_map/source_map_cache:1:1",
    "codes": [
      4423
    ]
  },
  {
    "name": " node:internal/source_map/source_map_cache:1:1",
    "codes": [
      4424
    ]
  },
  {
    "name": "debuglog node:internal/util/debuglog:71:18",
    "codes": [
      4425,
      4680
    ]
  },
  {
    "name": " node:internal/util/iterable_weak_map:1:1",
    "codes": [
      4426
    ]
  },
  {
    "name": " node:internal/util/iterable_weak_map:1:1",
    "codes": [
      4427
    ]
  },
  {
    "name": "<instance_members_initializer> node:internal/util/iterable_weak_map:17:3",
    "codes": [
      4428
    ]
  },
  {
    "name": " node:internal/modules/cjs/helpers:1:1",
    "codes": [
      4429
    ]
  },
  {
    "name": " node:internal/modules/cjs/helpers:1:1",
    "codes": [
      4430
    ]
  },
  {
    "name": "SafeSet node:internal/per_context/primordials:364:16",
    "codes": [
      4431
    ]
  },
  {
    "name": "SafeMap node:internal/per_context/primordials:351:16",
    "codes": [
      4432,
      4493
    ]
  },
  {
    "name": "IterableWeakMap node:internal/util/iterable_weak_map:16:1",
    "codes": [
      4433
    ]
  },
  {
    "name": "SafeWeakMap node:internal/per_context/primordials:357:16",
    "codes": [
      4434
    ]
  },
  {
    "name": "SafeFinalizationRegistry node:internal/per_context/primordials:378:16",
    "codes": [
      4435
    ]
  },
  {
    "name": "initializeDeprecations node:internal/bootstrap/pre_execution:250:32",
    "codes": [
      4436
    ]
  },
  {
    "name": "initializeWASI node:internal/bootstrap/pre_execution:414:24",
    "codes": [
      4437
    ]
  },
  {
    "name": "initializeCJSLoader node:internal/bootstrap/pre_execution:421:29",
    "codes": [
      4438
    ]
  },
  {
    "name": " node:internal/modules/cjs/loader:1:1",
    "codes": [
      4439
    ]
  },
  {
    "name": " node:internal/modules/cjs/loader:1:1",
    "codes": [
      4440
    ]
  },
  {
    "name": " node:internal/modules/package_json_reader:1:1",
    "codes": [
      4441
    ]
  },
  {
    "name": " node:internal/modules/package_json_reader:1:1",
    "codes": [
      4442
    ]
  },
  {
    "name": " node:internal/process/esm_loader:1:1",
    "codes": [
      4443
    ]
  },
  {
    "name": " node:internal/process/esm_loader:1:1",
    "codes": [
      4444
    ]
  },
  {
    "name": " node:internal/modules/esm/loader:1:1",
    "codes": [
      4445
    ]
  },
  {
    "name": " node:internal/modules/esm/loader:1:1",
    "codes": [
      4446
    ]
  },
  {
    "name": "<instance_members_initializer> node:internal/modules/esm/loader:59:3",
    "codes": [
      4447
    ]
  },
  {
    "name": " node:internal/modules/esm/module_map:1:1",
    "codes": [
      4448
    ]
  },
  {
    "name": " node:internal/modules/esm/module_map:1:1",
    "codes": [
      4449
    ]
  },
  {
    "name": " node:internal/modules/esm/module_job:1:1",
    "codes": [
      4450
    ]
  },
  {
    "name": " node:internal/modules/esm/module_job:1:1",
    "codes": [
      4451
    ]
  },
  {
    "name": " node:internal/modules/esm/resolve:1:1",
    "codes": [
      4452
    ]
  },
  {
    "name": " node:internal/modules/esm/resolve:1:1",
    "codes": [
      4453
    ]
  },
  {
    "name": " node:internal/modules/esm/get_format:1:1",
    "codes": [
      4454
    ]
  },
  {
    "name": " node:internal/modules/esm/get_format:1:1",
    "codes": [
      4455
    ]
  },
  {
    "name": " node:internal/modules/esm/load:1:1",
    "codes": [
      4456
    ]
  },
  {
    "name": " node:internal/modules/esm/load:1:1",
    "codes": [
      4457
    ]
  },
  {
    "name": " node:internal/modules/esm/get_source:1:1",
    "codes": [
      4458
    ]
  },
  {
    "name": " node:internal/modules/esm/get_source:1:1",
    "codes": [
      4459
    ]
  },
  {
    "name": " node:internal/fs/promises:1:1",
    "codes": [
      4460
    ]
  },
  {
    "name": " node:internal/fs/promises:1:1",
    "codes": [
      4461
    ]
  },
  {
    "name": "<instance_members_initializer> node:internal/fs/promises:189:3",
    "codes": [
      4462
    ]
  },
  {
    "name": " node:internal/fs/rimraf:1:1",
    "codes": [
      4463
    ]
  },
  {
    "name": " node:internal/fs/rimraf:1:1",
    "codes": [
      4464
    ]
  },
  {
    "name": "from node:buffer:295:28",
    "codes": [
      4465
    ]
  },
  {
    "name": "fromString node:buffer:431:20",
    "codes": [
      4466
    ]
  },
  {
    "name": "fromStringFast node:buffer:412:24",
    "codes": [
      4467
    ]
  },
  {
    "name": "FastBuffer node:internal/buffer:958:14",
    "codes": [
      4468
    ]
  },
  {
    "name": "write node:buffer:592:12",
    "codes": [
      4469
    ]
  },
  {
    "name": "alignPool node:buffer:158:19",
    "codes": [
      4470
    ]
  },
  {
    "name": "promisify node:internal/util:324:19",
    "codes": [
      4471
    ]
  },
  {
    "name": "EventEmitterMixin node:internal/event_target:827:27",
    "codes": [
      4472
    ]
  },
  {
    "name": " node:internal/modules/esm/translators:1:1",
    "codes": [
      4473
    ]
  },
  {
    "name": " node:internal/modules/esm/translators:1:1",
    "codes": [
      4474
    ]
  },
  {
    "name": " node:internal/modules/esm/create_dynamic_module:1:1",
    "codes": [
      4475
    ]
  },
  {
    "name": " node:internal/modules/esm/create_dynamic_module:1:1",
    "codes": [
      4476
    ]
  },
  {
    "name": " node:internal/vm/module:1:1",
    "codes": [
      4477
    ]
  },
  {
    "name": " node:internal/vm/module:1:1",
    "codes": [
      4478
    ]
  },
  {
    "name": "<instance_members_initializer> node:internal/vm/module:256:3",
    "codes": [
      4479
    ]
  },
  {
    "name": "ESMLoader node:internal/modules/esm/loader:52:1",
    "codes": [
      4480
    ]
  },
  {
    "name": "ModuleMap node:internal/modules/esm/module_map:15:14",
    "codes": [
      4481
    ]
  },
  {
    "name": "desc.value node:internal/per_context/primordials:325:32",
    "codes": [
      4482
    ]
  },
  {
    "name": "SafeIterator node:internal/per_context/primordials:270:16",
    "codes": [
      4483
    ]
  },
  {
    "name": "next node:internal/per_context/primordials:273:9",
    "codes": [
      4484,
      4492
    ]
  },
  {
    "name": "deprecate node:internal/util:96:19",
    "codes": [
      4485,
      4637
    ]
  },
  {
    "name": "getEmbedderOptions node:internal/options:32:28",
    "codes": [
      4486
    ]
  },
  {
    "name": "Module._initPaths node:internal/modules/cjs/loader:1227:29",
    "codes": [
      4487
    ]
  },
  {
    "name": " node:internal/modules/run_main:1:1",
    "codes": [
      4494
    ]
  },
  {
    "name": " node:internal/modules/run_main:1:1",
    "codes": [
      4495
    ]
  },
  {
    "name": "initializeESMLoader node:internal/bootstrap/pre_execution:431:29",
    "codes": [
      4496
    ]
  },
  {
    "name": "get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32",
    "codes": [
      4497
    ]
  },
  {
    "name": "assert node:internal/assert:11:16",
    "codes": [
      4498
    ]
  },
  {
    "name": "loadPreloadModules node:internal/bootstrap/pre_execution:474:28",
    "codes": [
      4499
    ]
  },
  {
    "name": "Module._preloadModules node:internal/modules/cjs/loader:1257:34",
    "codes": [
      4500
    ]
  },
  {
    "name": "Module node:internal/modules/cjs/loader:172:16",
    "codes": [
      4501
    ]
  },
  {
    "name": "dirname node:path:1275:10",
    "codes": [
      4502,
      4545
    ]
  },
  {
    "name": "updateChildren node:internal/modules/cjs/loader:165:24",
    "codes": [
      4503
    ]
  },
  {
    "name": "Module._nodeModulePaths node:internal/modules/cjs/loader:629:37",
    "codes": [
      4504,
      4546
    ]
  },
  {
    "name": "Module.require node:internal/modules/cjs/loader:997:36",
    "codes": [
      4505
    ]
  },
  {
    "name": "Module._load node:internal/modules/cjs/loader:757:24",
    "codes": [
      4506
    ]
  },
  {
    "name": "logger node:internal/util/debuglog:96:18",
    "codes": [
      4507
    ]
  },
  {
    "name": " node:internal/per_context/primordials:276:21",
    "codes": [
      4508
    ]
  },
  {
    "name": "debug node:internal/util/debuglog:76:15",
    "codes": [
      4509
    ]
  },
  {
    "name": "init node:internal/util/debuglog:72:16",
    "codes": [
      4510
    ]
  },
  {
    "name": "testEnabled node:internal/util/debuglog:32:19",
    "codes": [
      4511
    ]
  },
  {
    "name": "debuglogImpl node:internal/util/debuglog:49:22",
    "codes": [
      4512
    ]
  },
  {
    "name": " node:internal/modules/cjs/loader:272:66",
    "codes": [
      4513
    ]
  },
  {
    "name": "noop node:internal/util/debuglog:47:14",
    "codes": [
      4514,
      4679
    ]
  },
  {
    "name": "Module._resolveFilename node:internal/modules/cjs/loader:848:35",
    "codes": [
      4515
    ]
  },
  {
    "name": "canBeRequiredByUsers node:internal/bootstrap/loaders:240:30",
    "codes": [
      4516,
      4681
    ]
  },
  {
    "name": "Module._resolveLookupPaths node:internal/modules/cjs/loader:667:38",
    "codes": [
      4517
    ]
  },
  {
    "name": "trySelfParentPath node:internal/modules/cjs/loader:427:27",
    "codes": [
      4518
    ]
  },
  {
    "name": "trySelf node:internal/modules/cjs/loader:441:17",
    "codes": [
      4519
    ]
  },
  {
    "name": "readPackageScope node:internal/modules/cjs/loader:321:26",
    "codes": [
      4520,
      4702
    ]
  },
  {
    "name": "readPackage node:internal/modules/cjs/loader:290:21",
    "codes": [
      4521
    ]
  },
  {
    "name": "read node:internal/modules/package_json_reader:16:14",
    "codes": [
      4522
    ]
  },
  {
    "name": "toNamespacedPath node:path:1266:19",
    "codes": [
      4523,
      4547
    ]
  },
  {
    "name": "Module._findPath node:internal/modules/cjs/loader:494:28",
    "codes": [
      4524
    ]
  },
  {
    "name": "isAbsolute node:path:1156:13",
    "codes": [
      4525
    ]
  },
  {
    "name": "stat node:internal/modules/cjs/loader:151:14",
    "codes": [
      4526
    ]
  },
  {
    "name": "tryExtensions node:internal/modules/cjs/loader:400:23",
    "codes": [
      4527
    ]
  },
  {
    "name": "tryFile node:internal/modules/cjs/loader:384:17",
    "codes": [
      4528
    ]
  },
  {
    "name": "toRealPath node:internal/modules/cjs/loader:393:20",
    "codes": [
      4529
    ]
  },
  {
    "name": "realpathSync node:fs:2408:22",
    "codes": [
      4530,
      4677
    ]
  },
  {
    "name": "getOptions node:internal/fs/utils:314:20",
    "codes": [
      4531
    ]
  },
  {
    "name": "assertEncoding node:internal/fs/utils:151:24",
    "codes": [
      4532
    ]
  },
  {
    "name": "toPathIfFileURL node:internal/url:1496:25",
    "codes": [
      4533
    ]
  },
  {
    "name": "isURLInstance node:internal/url:1492:23",
    "codes": [
      4534
    ]
  },
  {
    "name": " node:internal/fs/utils:668:38",
    "codes": [
      4535
    ]
  },
  {
    "name": " node:internal/fs/utils:357:35",
    "codes": [
      4536
    ]
  },
  {
    "name": "isUint8Array node:internal/util/types:13:22",
    "codes": [
      4537,
      4704
    ]
  },
  {
    "name": "splitRoot node:fs:2362:33",
    "codes": [
      4538
    ]
  },
  {
    "name": "nextPart node:fs:2395:31",
    "codes": [
      4539,
      4548
    ]
  },
  {
    "name": "handleErrorFromBinding node:internal/fs/utils:340:32",
    "codes": [
      4540
    ]
  },
  {
    "name": "isFileType node:fs:205:20",
    "codes": [
      4541,
      4549
    ]
  },
  {
    "name": "encodeRealpathResult node:fs:2371:30",
    "codes": [
      4542
    ]
  },
  {
    "name": "loadNativeModule node:internal/modules/cjs/helpers:44:26",
    "codes": [
      4543
    ]
  },
  {
    "name": "Module.load node:internal/modules/cjs/loader:969:33",
    "codes": [
      4544
    ]
  },
  {
    "name": "findLongestRegisteredExtension node:internal/modules/cjs/loader:413:40",
    "codes": [
      4550
    ]
  },
  {
    "name": "basename node:path:1306:11",
    "codes": [
      4551
    ]
  },
  {
    "name": "Module._extensions..js node:internal/modules/cjs/loader:1110:37",
    "codes": [
      4552
    ]
  },
  {
    "name": "readFileSync node:fs:450:22",
    "codes": [
      4553
    ]
  },
  {
    "name": "isEncoding node:buffer:529:40",
    "codes": [
      4554
    ]
  },
  {
    "name": "normalizeEncoding node:internal/util:160:27",
    "codes": [
      4555
    ]
  },
  {
    "name": "isUint32 node:internal/validators:39:18",
    "codes": [
      4556,
      4703
    ]
  },
  {
    "name": "openSync node:fs:576:18",
    "codes": [
      4557
    ]
  },
  {
    "name": " node:internal/fs/utils:680:42",
    "codes": [
      4558
    ]
  },
  {
    "name": "stringToFlags node:internal/fs/utils:555:23",
    "codes": [
      4559
    ]
  },
  {
    "name": "parseFileMode node:internal/validators:58:23",
    "codes": [
      4560
    ]
  },
  {
    "name": " node:internal/validators:83:3",
    "codes": [
      4561
    ]
  },
  {
    "name": "isInt32 node:internal/validators:35:17",
    "codes": [
      4562,
      4701
    ]
  },
  {
    "name": "tryStatSync node:fs:404:21",
    "codes": [
      4563
    ]
  },
  {
    "name": "tryCreateBuffer node:fs:414:25",
    "codes": [
      4564
    ]
  },
  {
    "name": "allocUnsafe node:buffer:372:42",
    "codes": [
      4565
    ]
  },
  {
    "name": " node:buffer:348:36",
    "codes": [
      4566
    ]
  },
  {
    "name": "validateNumber node:internal/validators:122:24",
    "codes": [
      4567
    ]
  },
  {
    "name": "allocate node:buffer:397:18",
    "codes": [
      4568
    ]
  },
  {
    "name": "tryReadSync node:fs:429:21",
    "codes": [
      4569
    ]
  },
  {
    "name": "readSync node:fs:684:18",
    "codes": [
      4570
    ]
  },
  {
    "name": " node:internal/fs/utils:686:40",
    "codes": [
      4571
    ]
  },
  {
    "name": " node:internal/validators:190:40",
    "codes": [
      4572
    ]
  },
  {
    "name": " node:internal/validators:72:3",
    "codes": [
      4573
    ]
  },
  {
    "name": " node:internal/fs/utils:636:3",
    "codes": [
      4574
    ]
  },
  {
    "name": " node:internal/fs/utils:886:42",
    "codes": [
      4575
    ]
  },
  {
    "name": "closeSync node:fs:526:19",
    "codes": [
      4576
    ]
  },
  {
    "name": "toString node:buffer:782:46",
    "codes": [
      4577
    ]
  },
  {
    "name": "getEncodingOps node:buffer:678:24",
    "codes": [
      4578
    ]
  },
  {
    "name": "slice node:buffer:593:12",
    "codes": [
      4579
    ]
  },
  {
    "name": "Module._compile node:internal/modules/cjs/loader:1055:37",
    "codes": [
      4580
    ]
  },
  {
    "name": "maybeCacheSourceMap node:internal/source_map/source_map_cache:74:29",
    "codes": [
      4581
    ]
  },
  {
    "name": "getSourceMapsEnabled node:internal/source_map/source_map_cache:43:30",
    "codes": [
      4582
    ]
  },
  {
    "name": "setSourceMapsEnabled node:internal/source_map/source_map_cache:50:30",
    "codes": [
      4583
    ]
  },
  {
    "name": "validateBoolean node:internal/validators:138:25",
    "codes": [
      4584
    ]
  },
  {
    "name": "wrapSafe node:internal/modules/cjs/loader:1017:18",
    "codes": [
      4585
    ]
  },
  {
    "name": "compileFunction node:vm:308:25",
    "codes": [
      4586
    ]
  },
  {
    "name": " node:internal/validators:167:39",
    "codes": [
      4587
    ]
  },
  {
    "name": " node:vm:313:27",
    "codes": [
      4588,
      4678
    ]
  },
  {
    "name": " node:internal/validators:100:40",
    "codes": [
      4589
    ]
  },
  {
    "name": " /Users/iramgutierrez/.nvm/versions/node/v16.13.2/lib/node_modules/0x/lib/preload/no-cluster.js:1:1",
    "codes": [
      4590
    ]
  },
  {
    "name": " /Users/iramgutierrez/.nvm/versions/node/v16.13.2/lib/node_modules/0x/lib/preload/no-cluster.js:1:1",
    "codes": [
      4591
    ]
  },
  {
    "name": "importModuleDynamicallyWrap node:internal/vm/module:435:37",
    "codes": [
      4592
    ]
  },
  {
    "name": "makeRequireFunction node:internal/modules/cjs/helpers:58:29",
    "codes": [
      4593
    ]
  },
  {
    "name": "require node:internal/modules/cjs/helpers:101:31",
    "codes": [
      4594
    ]
  },
  {
    "name": " node:internal/modules/cjs/helpers:29:66",
    "codes": [
      4595
    ]
  },
  {
    "name": "compileForPublicLoader node:internal/bootstrap/loaders:246:25",
    "codes": [
      4596
    ]
  },
  {
    "name": " node:cluster:1:1",
    "codes": [
      4597
    ]
  },
  {
    "name": " node:cluster:1:1",
    "codes": [
      4598
    ]
  },
  {
    "name": " node:internal/cluster/primary:1:1",
    "codes": [
      4599
    ]
  },
  {
    "name": " node:internal/cluster/primary:1:1",
    "codes": [
      4600
    ]
  },
  {
    "name": " node:child_process:1:1",
    "codes": [
      4601
    ]
  },
  {
    "name": " node:child_process:1:1",
    "codes": [
      4602
    ]
  },
  {
    "name": " node:internal/child_process:1:1",
    "codes": [
      4603
    ]
  },
  {
    "name": " node:internal/child_process:1:1",
    "codes": [
      4604
    ]
  },
  {
    "name": "<instance_members_initializer> node:internal/child_process:524:3",
    "codes": [
      4605
    ]
  },
  {
    "name": " node:net:1:1",
    "codes": [
      4606
    ]
  },
  {
    "name": " node:net:1:1",
    "codes": [
      4607
    ]
  },
  {
    "name": " node:internal/net:1:1",
    "codes": [
      4608
    ]
  },
  {
    "name": " node:internal/net:1:1",
    "codes": [
      4609
    ]
  },
  {
    "name": " node:internal/dtrace:1:1",
    "codes": [
      4610
    ]
  },
  {
    "name": " node:internal/dtrace:1:1",
    "codes": [
      4611
    ]
  },
  {
    "name": "protoGetter node:net:718:21",
    "codes": [
      4612
    ]
  },
  {
    "name": " node:dgram:1:1",
    "codes": [
      4613
    ]
  },
  {
    "name": " node:dgram:1:1",
    "codes": [
      4614
    ]
  },
  {
    "name": " node:internal/dgram:1:1",
    "codes": [
      4615
    ]
  },
  {
    "name": " node:internal/dgram:1:1",
    "codes": [
      4616
    ]
  },
  {
    "name": " node:internal/socket_list:1:1",
    "codes": [
      4617
    ]
  },
  {
    "name": " node:internal/socket_list:1:1",
    "codes": [
      4618
    ]
  },
  {
    "name": "customPromiseExecFunction node:child_process:231:35",
    "codes": [
      4619
    ]
  },
  {
    "name": " node:internal/cluster/round_robin_handle:1:1",
    "codes": [
      4620
    ]
  },
  {
    "name": " node:internal/cluster/round_robin_handle:1:1",
    "codes": [
      4621
    ]
  },
  {
    "name": " node:internal/cluster/utils:1:1",
    "codes": [
      4622
    ]
  },
  {
    "name": " node:internal/cluster/utils:1:1",
    "codes": [
      4623
    ]
  },
  {
    "name": " node:internal/cluster/shared_handle:1:1",
    "codes": [
      4624
    ]
  },
  {
    "name": " node:internal/cluster/shared_handle:1:1",
    "codes": [
      4625
    ]
  },
  {
    "name": " node:internal/cluster/worker:1:1",
    "codes": [
      4626
    ]
  },
  {
    "name": " node:internal/cluster/worker:1:1",
    "codes": [
      4627
    ]
  },
  {
    "name": "EventEmitter node:events:84:22",
    "codes": [
      4628
    ]
  },
  {
    "name": "EventEmitter.init node:events:194:29",
    "codes": [
      4629
    ]
  },
  {
    "name": "getESMFacade node:internal/bootstrap/loaders:264:15",
    "codes": [
      4630
    ]
  },
  {
    "name": " node:internal/bootstrap/loaders:273:15",
    "codes": [
      4631
    ]
  },
  {
    "name": "syncExports node:internal/bootstrap/loaders:287:14",
    "codes": [
      4632,
      4634
    ]
  },
  {
    "name": "getOwn node:internal/bootstrap/loaders:180:16",
    "codes": [
      4633,
      4638
    ]
  },
  {
    "name": " /Users/iramgutierrez/.nvm/versions/node/v16.13.2/lib/node_modules/0x/lib/preload/redir-stdout.js:1:1",
    "codes": [
      4640
    ]
  },
  {
    "name": " /Users/iramgutierrez/.nvm/versions/node/v16.13.2/lib/node_modules/0x/lib/preload/redir-stdout.js:1:1",
    "codes": [
      4641
    ]
  },
  {
    "name": "get BlockList node:net:1779:16",
    "codes": [
      4642
    ]
  },
  {
    "name": " node:internal/blocklist:1:1",
    "codes": [
      4643
    ]
  },
  {
    "name": " node:internal/blocklist:1:1",
    "codes": [
      4644
    ]
  },
  {
    "name": " node:internal/socketaddress:1:1",
    "codes": [
      4645
    ]
  },
  {
    "name": " node:internal/socketaddress:1:1",
    "codes": [
      4646
    ]
  },
  {
    "name": "get SocketAddress node:net:1783:20",
    "codes": [
      4647
    ]
  },
  {
    "name": " node:worker_threads:1:1",
    "codes": [
      4648
    ]
  },
  {
    "name": " node:worker_threads:1:1",
    "codes": [
      4649
    ]
  },
  {
    "name": " node:internal/worker:1:1",
    "codes": [
      4650
    ]
  },
  {
    "name": " node:internal/worker:1:1",
    "codes": [
      4651
    ]
  },
  {
    "name": " node:internal/error_serdes:1:1",
    "codes": [
      4652
    ]
  },
  {
    "name": " node:internal/error_serdes:1:1",
    "codes": [
      4653
    ]
  },
  {
    "name": "Socket node:net:283:16",
    "codes": [
      4654
    ]
  },
  {
    "name": "Duplex node:internal/streams/duplex:52:16",
    "codes": [
      4655
    ]
  },
  {
    "name": "Readable node:internal/streams/readable:181:18",
    "codes": [
      4656
    ]
  },
  {
    "name": "Stream node:internal/streams/legacy:10:16",
    "codes": [
      4657
    ]
  },
  {
    "name": "ReadableState node:internal/streams/readable:78:23",
    "codes": [
      4658
    ]
  },
  {
    "name": "getHighWaterMark node:internal/streams/state:19:26",
    "codes": [
      4659
    ]
  },
  {
    "name": "highWaterMarkFrom node:internal/streams/state:10:27",
    "codes": [
      4660
    ]
  },
  {
    "name": "getDefaultHighWaterMark node:internal/streams/state:15:33",
    "codes": [
      4661
    ]
  },
  {
    "name": "BufferList node:internal/streams/buffer_list:14:14",
    "codes": [
      4662
    ]
  },
  {
    "name": "construct node:internal/streams/destroy:225:19",
    "codes": [
      4663
    ]
  },
  {
    "name": "Writable node:internal/streams/writable:219:18",
    "codes": [
      4664
    ]
  },
  {
    "name": "WritableState node:internal/streams/writable:77:23",
    "codes": [
      4665
    ]
  },
  {
    "name": "resetBuffer node:internal/streams/writable:202:21",
    "codes": [
      4666
    ]
  },
  {
    "name": "set node:internal/streams/readable:1175:8",
    "codes": [
      4667
    ]
  },
  {
    "name": "createHandle node:net:137:22",
    "codes": [
      4668
    ]
  },
  {
    "name": "set node:net:1707:6",
    "codes": [
      4669
    ]
  },
  {
    "name": "get node:net:1706:6",
    "codes": [
      4670
    ]
  },
  {
    "name": "Readable.on node:internal/streams/readable:875:33",
    "codes": [
      4671
    ]
  },
  {
    "name": "initSocketHandle node:net:254:26",
    "codes": [
      4672
    ]
  },
  {
    "name": "undestroy node:internal/streams/destroy:160:19",
    "codes": [
      4673
    ]
  },
  {
    "name": "getNewAsyncId node:net:156:23",
    "codes": [
      4674
    ]
  },
  {
    "name": "get node:internal/bootstrap/pre_execution:314:8",
    "codes": [
      4675
    ]
  },
  {
    "name": "get /Users/iramgutierrez/.nvm/versions/node/v16.13.2/lib/node_modules/0x/lib/preload/redir-stdout.js:19:10",
    "codes": [
      4676
    ]
  },
  {
    "name": " /Users/iramgutierrez/.nvm/versions/node/v16.13.2/lib/node_modules/0x/lib/preload/soft-exit.js:1:1",
    "codes": [
      4682
    ]
  },
  {
    "name": " /Users/iramgutierrez/.nvm/versions/node/v16.13.2/lib/node_modules/0x/lib/preload/soft-exit.js:1:1",
    "codes": [
      4683
    ]
  },
  {
    "name": "initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:466:36",
    "codes": [
      4684
    ]
  },
  {
    "name": "executeUserEntryPoint node:internal/modules/run_main:74:31",
    "codes": [
      4685
    ]
  },
  {
    "name": "resolveMainPath node:internal/modules/run_main:11:25",
    "codes": [
      4686
    ]
  },
  {
    "name": "shouldUseESMLoader node:internal/modules/run_main:26:28",
    "codes": [
      4687
    ]
  },
  {
    "name": "prepareStackTrace node:internal/errors:90:27",
    "codes": [
      4688
    ]
  },
  {
    "name": "maybeOverridePrepareStackTrace node:internal/errors:135:40",
    "codes": [
      4689
    ]
  },
  {
    "name": "enrichCJSError node:internal/modules/esm/translators:152:24",
    "codes": [
      4690
    ]
  },
  {
    "name": "hasEsmSyntax node:internal/modules/cjs/helpers:204:22",
    "codes": [
      4691
    ]
  },
  {
    "name": " node:internal/deps/acorn/acorn/dist/acorn:1:1",
    "codes": [
      4692
    ]
  },
  {
    "name": " node:internal/deps/acorn/acorn/dist/acorn:1:1",
    "codes": [
      4693
    ]
  },
  {
    "name": " node:internal/deps/acorn/acorn/dist/acorn:5:19",
    "codes": [
      4694
    ]
  },
  {
    "name": " node:internal/deps/acorn/acorn/dist/acorn:273:44",
    "codes": [
      4695
    ]
  },
  {
    "name": " node:internal/deps/acorn/acorn/dist/acorn:1:11",
    "codes": [
      4696
    ]
  },
  {
    "name": "TokenType node:internal/deps/acorn/acorn/dist/acorn:118:37",
    "codes": [
      4697,
      4705
    ]
  },
  {
    "name": "binop node:internal/deps/acorn/acorn/dist/acorn:133:17",
    "codes": [
      4698,
      4706
    ]
  },
  {
    "name": "kw node:internal/deps/acorn/acorn/dist/acorn:143:14",
    "codes": [
      4699,
      4700
    ]
  },
  {
    "name": "TokContext node:internal/deps/acorn/acorn/dist/acorn:2172:39",
    "codes": [
      4707,
      4766
    ]
  },
  {
    "name": "buildUnicodeData node:internal/deps/acorn/acorn/dist/acorn:3606:28",
    "codes": [
      4708
    ]
  },
  {
    "name": "wordsRegexp node:internal/deps/acorn/acorn/dist/acorn:277:23",
    "codes": [
      4709,
      4767
    ]
  },
  {
    "name": "parse node:internal/deps/acorn/acorn/dist/acorn:620:33",
    "codes": [
      4710
    ]
  },
  {
    "name": "Parser node:internal/deps/acorn/acorn/dist/acorn:489:31",
    "codes": [
      4711
    ]
  },
  {
    "name": "getOptions node:internal/deps/acorn/acorn/dist/acorn:416:22",
    "codes": [
      4712
    ]
  },
  {
    "name": "has node:internal/deps/acorn/acorn/dist/acorn:269:15",
    "codes": [
      4713,
      4768
    ]
  },
  {
    "name": "pp$5.curPosition node:internal/deps/acorn/acorn/dist/acorn:3423:30",
    "codes": [
      4714
    ]
  },
  {
    "name": "pp$3.initialContext node:internal/deps/acorn/acorn/dist/acorn:2195:33",
    "codes": [
      4715
    ]
  },
  {
    "name": "pp$6.enterScope node:internal/deps/acorn/acorn/dist/acorn:3445:29",
    "codes": [
      4716,
      4905
    ]
  },
  {
    "name": "Scope node:internal/deps/acorn/acorn/dist/acorn:3431:29",
    "codes": [
      4717,
      4904
    ]
  },
  {
    "name": "parse node:internal/deps/acorn/acorn/dist/acorn:576:43",
    "codes": [
      4718
    ]
  },
  {
    "name": "pp$7.startNode node:internal/deps/acorn/acorn/dist/acorn:3538:28",
    "codes": [
      4719,
      4780
    ]
  },
  {
    "name": "Node node:internal/deps/acorn/acorn/dist/acorn:3522:27",
    "codes": [
      4720,
      4818
    ]
  },
  {
    "name": "pp$9.nextToken node:internal/deps/acorn/acorn/dist/acorn:4747:28",
    "codes": [
      4721,
      4784
    ]
  },
  {
    "name": "pp$3.curContext node:internal/deps/acorn/acorn/dist/acorn:2199:29",
    "codes": [
      4722,
      4781
    ]
  },
  {
    "name": "pp$9.skipSpace node:internal/deps/acorn/acorn/dist/acorn:4808:28",
    "codes": [
      4723,
      4793
    ]
  },
  {
    "name": "pp$9.fullCharCodeAtPos node:internal/deps/acorn/acorn/dist/acorn:4768:36",
    "codes": [
      4724,
      4769
    ]
  },
  {
    "name": "pp$9.readToken node:internal/deps/acorn/acorn/dist/acorn:4759:28",
    "codes": [
      4725,
      4783
    ]
  },
  {
    "name": "isIdentifierStart node:internal/deps/acorn/acorn/dist/acorn:71:29",
    "codes": [
      4726,
      4843
    ]
  },
  {
    "name": "pp$9.readWord node:internal/deps/acorn/acorn/dist/acorn:5486:27",
    "codes": [
      4727,
      4792
    ]
  },
  {
    "name": "pp$9.readWord1 node:internal/deps/acorn/acorn/dist/acorn:5455:28",
    "codes": [
      4728,
      4765
    ]
  },
  {
    "name": "isIdentifierChar node:internal/deps/acorn/acorn/dist/acorn:83:28",
    "codes": [
      4729,
      4770
    ]
  },
  {
    "name": "pp$9.finishToken node:internal/deps/acorn/acorn/dist/acorn:4853:30",
    "codes": [
      4730,
      4782
    ]
  },
  {
    "name": "pp$3.updateContext node:internal/deps/acorn/acorn/dist/acorn:2233:32",
    "codes": [
      4731,
      4794
    ]
  },
  {
    "name": "pp$1.parseTopLevel node:internal/deps/acorn/acorn/dist/acorn:794:32",
    "codes": [
      4732
    ]
  },
  {
    "name": "pp$1.parseStatement node:internal/deps/acorn/acorn/dist/acorn:862:33",
    "codes": [
      4733,
      4914
    ]
  },
  {
    "name": "pp$1.isLet node:internal/deps/acorn/acorn/dist/acorn:816:24",
    "codes": [
      4734
    ]
  },
  {
    "name": "pp.isContextual node:internal/deps/acorn/acorn/dist/acorn:680:29",
    "codes": [
      4735,
      4821
    ]
  },
  {
    "name": "pp$1.parseImport node:internal/deps/acorn/acorn/dist/acorn:1768:30",
    "codes": [
      4737
    ]
  },
  {
    "name": "pp$9.next node:internal/deps/acorn/acorn/dist/acorn:4707:23",
    "codes": [
      4738,
      4791
    ]
  },
  {
    "name": "types.name.updateContext node:internal/deps/acorn/acorn/dist/acorn:2314:38",
    "codes": [
      4740,
      4816
    ]
  },
  {
    "name": "pp$1.parseImportSpecifiers node:internal/deps/acorn/acorn/dist/acorn:1785:40",
    "codes": [
      4741
    ]
  },
  {
    "name": "pp$4.parseIdent node:internal/deps/acorn/acorn/dist/acorn:3331:29",
    "codes": [
      4742,
      4871
    ]
  },
  {
    "name": "pp$7.finishNode node:internal/deps/acorn/acorn/dist/acorn:3558:29",
    "codes": [
      4743,
      4778
    ]
  },
  {
    "name": "finishNodeAt node:internal/deps/acorn/acorn/dist/acorn:3548:24",
    "codes": [
      4744,
      4819
    ]
  },
  {
    "name": "pp$4.checkUnreserved node:internal/deps/acorn/acorn/dist/acorn:3302:34",
    "codes": [
      4745,
      4882
    ]
  },
  {
    "name": "prototypeAccessors.inGenerator.get node:internal/deps/acorn/acorn/dist/acorn:583:49",
    "codes": [
      4746,
      4854
    ]
  },
  {
    "name": "pp$6.currentVarScope node:internal/deps/acorn/acorn/dist/acorn:3507:34",
    "codes": [
      4747,
      4817
    ]
  },
  {
    "name": "prototypeAccessors.inAsync.get node:internal/deps/acorn/acorn/dist/acorn:584:45",
    "codes": [
      4748,
      4858
    ]
  },
  {
    "name": "pp$6.currentThisScope node:internal/deps/acorn/acorn/dist/acorn:3515:35",
    "codes": [
      4749,
      4846
    ]
  },
  {
    "name": "prototypeAccessors.inClassStaticBlock.get node:internal/deps/acorn/acorn/dist/acorn:607:56",
    "codes": [
      4750,
      4845
    ]
  },
  {
    "name": "pp$2.checkLValSimple node:internal/deps/acorn/acorn/dist/acorn:2085:34",
    "codes": [
      4751
    ]
  },
  {
    "name": "pp$6.declareName node:internal/deps/acorn/acorn/dist/acorn:3460:30",
    "codes": [
      4752
    ]
  },
  {
    "name": "pp$6.currentScope node:internal/deps/acorn/acorn/dist/acorn:3503:31",
    "codes": [
      4753,
      4869
    ]
  },
  {
    "name": "pp.eat node:internal/deps/acorn/acorn/dist/acorn:669:20",
    "codes": [
      4754,
      4820
    ]
  },
  {
    "name": "pp.expectContextual node:internal/deps/acorn/acorn/dist/acorn:694:33",
    "codes": [
      4755
    ]
  },
  {
    "name": "pp.eatContextual node:internal/deps/acorn/acorn/dist/acorn:686:30",
    "codes": [
      4756
    ]
  },
  {
    "name": "pp$9.getTokenFromCode node:internal/deps/acorn/acorn/dist/acorn:5005:35",
    "codes": [
      4757,
      4879
    ]
  },
  {
    "name": "pp$9.readString node:internal/deps/acorn/acorn/dist/acorn:5253:29",
    "codes": [
      4758,
      4903
    ]
  },
  {
    "name": "isNewLine node:internal/deps/acorn/acorn/dist/acorn:255:21",
    "codes": [
      4759,
      4779
    ]
  },
  {
    "name": "pp$4.parseExprAtom node:internal/deps/acorn/acorn/dist/acorn:2684:32",
    "codes": [
      4760,
      4913
    ]
  },
  {
    "name": "pp$4.parseLiteral node:internal/deps/acorn/acorn/dist/acorn:2849:31",
    "codes": [
      4761,
      4861
    ]
  },
  {
    "name": "pp.semicolon node:internal/deps/acorn/acorn/dist/acorn:717:26",
    "codes": [
      4762,
      4885
    ]
  },
  {
    "name": "pp.insertSemicolon node:internal/deps/acorn/acorn/dist/acorn:706:32",
    "codes": [
      4763,
      4911
    ]
  },
  {
    "name": "pp.canInsertSemicolon node:internal/deps/acorn/acorn/dist/acorn:700:35",
    "codes": [
      4764,
      4847
    ]
  },
  {
    "name": "types.braceL.updateContext node:internal/deps/acorn/acorn/dist/acorn:2264:40",
    "codes": [
      4774,
      4915
    ]
  },
  {
    "name": "pp$3.braceIsBlock node:internal/deps/acorn/acorn/dist/acorn:2203:31",
    "codes": [
      4775
    ]
  },
  {
    "name": "pp.expect node:internal/deps/acorn/acorn/dist/acorn:734:23",
    "codes": [
      4776,
      4872
    ]
  },
  {
    "name": "types.parenR.updateContext.types.braceR.updateContext node:internal/deps/acorn/acorn/dist/acorn:2252:69",
    "codes": [
      4777,
      4884
    ]
  },
  {
    "name": "pp$1.parseVarStatement node:internal/deps/acorn/acorn/dist/acorn:1146:36",
    "codes": [
      4785
    ]
  },
  {
    "name": "pp$1.parseVar node:internal/deps/acorn/acorn/dist/acorn:1277:27",
    "codes": [
      4786
    ]
  },
  {
    "name": "pp$1.parseVarId node:internal/deps/acorn/acorn/dist/acorn:1298:29",
    "codes": [
      4787,
      4909
    ]
  },
  {
    "name": "pp$2.parseBindingAtom node:internal/deps/acorn/acorn/dist/acorn:1965:35",
    "codes": [
      4788
    ]
  },
  {
    "name": "pp$9.readToken_eq_excl node:internal/deps/acorn/acorn/dist/acorn:4962:36",
    "codes": [
      4789
    ]
  },
  {
    "name": "pp$9.finishOp node:internal/deps/acorn/acorn/dist/acorn:5084:27",
    "codes": [
      4790,
      4870
    ]
  },
  {
    "name": "pp$2.checkLValPattern node:internal/deps/acorn/acorn/dist/acorn:2123:35",
    "codes": [
      4795
    ]
  },
  {
    "name": "pp$4.parseMaybeAssign node:internal/deps/acorn/acorn/dist/acorn:2410:35",
    "codes": [
      4796,
      4878
    ]
  },
  {
    "name": "DestructuringErrors node:internal/deps/acorn/acorn/dist/acorn:744:31",
    "codes": [
      4797,
      4856
    ]
  },
  {
    "name": "pp$4.parseMaybeConditional node:internal/deps/acorn/acorn/dist/acorn:2463:40",
    "codes": [
      4798,
      4868
    ]
  },
  {
    "name": "pp$4.parseExprOps node:internal/deps/acorn/acorn/dist/acorn:2480:31",
    "codes": [
      4799,
      4855
    ]
  },
  {
    "name": "pp$4.parseMaybeUnary node:internal/deps/acorn/acorn/dist/acorn:2528:34",
    "codes": [
      4800,
      4894
    ]
  },
  {
    "name": "pp$4.parseExprSubscripts node:internal/deps/acorn/acorn/dist/acorn:2581:38",
    "codes": [
      4801,
      4862
    ]
  },
  {
    "name": "types.parenL.updateContext node:internal/deps/acorn/acorn/dist/acorn:2274:40",
    "codes": [
      4802,
      4896
    ]
  },
  {
    "name": "pp$4.parseSubscripts node:internal/deps/acorn/acorn/dist/acorn:2595:34",
    "codes": [
      4803,
      4857
    ]
  },
  {
    "name": "pp$4.parseSubscript node:internal/deps/acorn/acorn/dist/acorn:2618:33",
    "codes": [
      4804,
      4876
    ]
  },
  {
    "name": "pp$4.parseExprList node:internal/deps/acorn/acorn/dist/acorn:3279:32",
    "codes": [
      4805,
      4910
    ]
  },
  {
    "name": "pp$9.readToken_dot node:internal/deps/acorn/acorn/dist/acorn:4872:32",
    "codes": [
      4806,
      4902
    ]
  },
  {
    "name": "pp$7.startNodeAt node:internal/deps/acorn/acorn/dist/acorn:3542:30",
    "codes": [
      4807,
      4842
    ]
  },
  {
    "name": "pp$9.readNumber node:internal/deps/acorn/acorn/dist/acorn:5200:29",
    "codes": [
      4808
    ]
  },
  {
    "name": "pp$9.readInt node:internal/deps/acorn/acorn/dist/acorn:5132:26",
    "codes": [
      4809,
      4860
    ]
  },
  {
    "name": "stringToNumber node:internal/deps/acorn/acorn/dist/acorn:5168:26",
    "codes": [
      4810,
      4877
    ]
  },
  {
    "name": "pp$4.parseExpression node:internal/deps/acorn/acorn/dist/acorn:2395:34",
    "codes": [
      4811,
      4916
    ]
  },
  {
    "name": "pp.checkExpressionErrors node:internal/deps/acorn/acorn/dist/acorn:761:38",
    "codes": [
      4812,
      4844
    ]
  },
  {
    "name": "pp$4.parseExprOp node:internal/deps/acorn/acorn/dist/acorn:2493:30",
    "codes": [
      4813,
      4895
    ]
  },
  {
    "name": "pp$9.readToken_pipe_amp node:internal/deps/acorn/acorn/dist/acorn:4908:37",
    "codes": [
      4814
    ]
  },
  {
    "name": "pp$4.buildBinary node:internal/deps/acorn/acorn/dist/acorn:2518:30",
    "codes": [
      4815,
      4883
    ]
  },
  {
    "name": "types._function.updateContext.types._class.updateContext node:internal/deps/acorn/acorn/dist/acorn:2284:72",
    "codes": [
      4822
    ]
  },
  {
    "name": "pp$1.parseFunctionStatement node:internal/deps/acorn/acorn/dist/acorn:1037:41",
    "codes": [
      4823
    ]
  },
  {
    "name": "pp$1.parseFunction node:internal/deps/acorn/acorn/dist/acorn:1309:32",
    "codes": [
      4824
    ]
  },
  {
    "name": "pp$4.initFunction node:internal/deps/acorn/acorn/dist/acorn:3156:31",
    "codes": [
      4825
    ]
  },
  {
    "name": "prototypeAccessors.treatFunctionsAsVar.get node:internal/deps/acorn/acorn/dist/acorn:600:57",
    "codes": [
      4826
    ]
  },
  {
    "name": "pp$6.treatFunctionsAsVarInScope node:internal/deps/acorn/acorn/dist/acorn:3456:45",
    "codes": [
      4827
    ]
  },
  {
    "name": "functionFlags node:internal/deps/acorn/acorn/dist/acorn:476:25",
    "codes": [
      4828
    ]
  },
  {
    "name": "pp$1.parseFunctionParams node:internal/deps/acorn/acorn/dist/acorn:1347:38",
    "codes": [
      4829
    ]
  },
  {
    "name": "pp$2.parseBindingList node:internal/deps/acorn/acorn/dist/acorn:1981:35",
    "codes": [
      4830
    ]
  },
  {
    "name": "pp.afterTrailingComma node:internal/deps/acorn/acorn/dist/acorn:721:35",
    "codes": [
      4831
    ]
  },
  {
    "name": "pp$2.parseMaybeDefault node:internal/deps/acorn/acorn/dist/acorn:2012:36",
    "codes": [
      4832
    ]
  },
  {
    "name": "pp$2.parseBindingListItem node:internal/deps/acorn/acorn/dist/acorn:2006:39",
    "codes": [
      4833
    ]
  },
  {
    "name": "pp.checkYieldAwaitInDefaultParams node:internal/deps/acorn/acorn/dist/acorn:772:47",
    "codes": [
      4834
    ]
  },
  {
    "name": "pp$4.parseFunctionBody node:internal/deps/acorn/acorn/dist/acorn:3213:36",
    "codes": [
      4835
    ]
  },
  {
    "name": "pp$4.isSimpleParamList node:internal/deps/acorn/acorn/dist/acorn:3250:36",
    "codes": [
      4836
    ]
  },
  {
    "name": "pp$4.checkParams node:internal/deps/acorn/acorn/dist/acorn:3263:30",
    "codes": [
      4837
    ]
  },
  {
    "name": "pp$2.checkLValInnerPattern node:internal/deps/acorn/acorn/dist/acorn:2148:40",
    "codes": [
      4838
    ]
  },
  {
    "name": "pp$1.parseBlock node:internal/deps/acorn/acorn/dist/acorn:1209:29",
    "codes": [
      4839,
      4912
    ]
  },
  {
    "name": "pp$1.parseIfStatement node:internal/deps/acorn/acorn/dist/acorn:1042:35",
    "codes": [
      4840
    ]
  },
  {
    "name": "pp$4.parseParenExpression node:internal/deps/acorn/acorn/dist/acorn:2858:39",
    "codes": [
      4841
    ]
  },
  {
    "name": "pp$1.parseReturnStatement node:internal/deps/acorn/acorn/dist/acorn:1051:39",
    "codes": [
      4848
    ]
  },
  {
    "name": "prototypeAccessors.inFunction.get node:internal/deps/acorn/acorn/dist/acorn:582:48",
    "codes": [
      4849
    ]
  },
  {
    "name": "pp$4.parseArrowExpression node:internal/deps/acorn/acorn/dist/acorn:3191:39",
    "codes": [
      4850
    ]
  },
  {
    "name": "pp$2.toAssignableList node:internal/deps/acorn/acorn/dist/acorn:1927:35",
    "codes": [
      4851
    ]
  },
  {
    "name": "pp$2.toAssignable node:internal/deps/acorn/acorn/dist/acorn:1846:31",
    "codes": [
      4852
    ]
  },
  {
    "name": "pp$9.readToken_mult_modulo_exp node:internal/deps/acorn/acorn/dist/acorn:4892:44",
    "codes": [
      4853
    ]
  },
  {
    "name": "pp$6.exitScope node:internal/deps/acorn/acorn/dist/acorn:3449:28",
    "codes": [
      4859,
      4918
    ]
  },
  {
    "name": "pp$1.parseWhileStatement node:internal/deps/acorn/acorn/dist/acorn:1153:38",
    "codes": [
      4863
    ]
  },
  {
    "name": "pp$4.parseParenAndDistinguishExpression node:internal/deps/acorn/acorn/dist/acorn:2865:53",
    "codes": [
      4864
    ]
  },
  {
    "name": "pp$4.parseParenItem node:internal/deps/acorn/acorn/dist/acorn:2927:33",
    "codes": [
      4865
    ]
  },
  {
    "name": "pp$9.readToken_lt_gt node:internal/deps/acorn/acorn/dist/acorn:4943:34",
    "codes": [
      4866
    ]
  },
  {
    "name": "pp.isSimpleAssignTarget node:internal/deps/acorn/acorn/dist/acorn:779:37",
    "codes": [
      4867
    ]
  },
  {
    "name": "pp$1.isAsyncFunction node:internal/deps/acorn/acorn/dist/acorn:842:34",
    "codes": [
      4873
    ]
  },
  {
    "name": "pp$9.readToken_plus_min node:internal/deps/acorn/acorn/dist/acorn:4927:37",
    "codes": [
      4874
    ]
  },
  {
    "name": "pp$1.parseExpressionStatement node:internal/deps/acorn/acorn/dist/acorn:1199:43",
    "codes": [
      4875,
      4917
    ]
  },
  {
    "name": "pp$1.adaptDirectivePrologue node:internal/deps/acorn/acorn/dist/acorn:1826:41",
    "codes": [
      4880
    ]
  },
  {
    "name": "pp$1.isDirectiveCandidate node:internal/deps/acorn/acorn/dist/acorn:1831:39",
    "codes": [
      4881
    ]
  },
  {
    "name": "types.backQuote.updateContext node:internal/deps/acorn/acorn/dist/acorn:2295:43",
    "codes": [
      4886
    ]
  },
  {
    "name": "pp$4.parseTemplate node:internal/deps/acorn/acorn/dist/acorn:2994:32",
    "codes": [
      4887
    ]
  },
  {
    "name": "types$1.q_tmpl node:internal/deps/acorn/acorn/dist/acorn:2186:54",
    "codes": [
      4888,
      4919
    ]
  },
  {
    "name": "pp$9.tryReadTemplateToken node:internal/deps/acorn/acorn/dist/acorn:5283:39",
    "codes": [
      4889
    ]
  },
  {
    "name": "pp$9.readTmplToken node:internal/deps/acorn/acorn/dist/acorn:5306:32",
    "codes": [
      4890,
      4920
    ]
  },
  {
    "name": "pp$4.parseTemplateElement node:internal/deps/acorn/acorn/dist/acorn:2971:39",
    "codes": [
      4891
    ]
  },
  {
    "name": "types.dollarBraceL.updateContext node:internal/deps/acorn/acorn/dist/acorn:2269:46",
    "codes": [
      4892
    ]
  },
  {
    "name": "pp$1.parseForStatement node:internal/deps/acorn/acorn/dist/acorn:990:36",
    "codes": [
      4897
    ]
  },
  {
    "name": "prototypeAccessors.canAwait.get node:internal/deps/acorn/acorn/dist/acorn:585:46",
    "codes": [
      4898
    ]
  },
  {
    "name": "pp$1.parseFor node:internal/deps/acorn/acorn/dist/acorn:1230:27",
    "codes": [
      4900
    ]
  },
  {
    "name": "types.incDec.updateContext node:internal/deps/acorn/acorn/dist/acorn:2280:40",
    "codes": [
      4901
    ]
  },
  {
    "name": "pp$4.parseNew node:internal/deps/acorn/acorn/dist/acorn:2943:27",
    "codes": [
      4906
    ]
  },
  {
    "name": "pp.checkPatternErrors node:internal/deps/acorn/acorn/dist/acorn:753:35",
    "codes": [
      4907
    ]
  },
  {
    "name": "pp$4.parseParenArrowList node:internal/deps/acorn/acorn/dist/acorn:2931:38",
    "codes": [
      4908
    ]
  },
  {
    "name": " node:internal/modules/cjs/helpers:214:40",
    "codes": [
      4921
    ]
  },
  {
    "name": "emitWarningSync node:internal/process/warning:156:25",
    "codes": [
      4922
    ]
  },
  {
    "name": "createWarningObject node:internal/process/warning:160:29",
    "codes": [
      4923
    ]
  },
  {
    "name": "isErrorStackTraceLimitWritable node:internal/errors:198:40",
    "codes": [
      4924
    ]
  },
  {
    "name": "onWarning node:internal/process/warning:79:19",
    "codes": [
      4925
    ]
  },
  {
    "name": "lazyOption node:internal/process/warning:26:20",
    "codes": [
      4926
    ]
  },
  {
    "name": "writeOut node:internal/process/warning:46:18",
    "codes": [
      4927
    ]
  },
  {
    "name": "warn node:internal/console/constructor:364:7",
    "codes": [
      4928
    ]
  },
  {
    "name": "value node:internal/console/constructor:329:20",
    "codes": [
      4929
    ]
  },
  {
    "name": "get node:internal/console/constructor:212:14",
    "codes": [
      4930
    ]
  },
  {
    "name": "getStderr node:internal/bootstrap/switches/is_main_thread:133:19",
    "codes": [
      4931
    ]
  },
  {
    "name": "createWritableStdioStream node:internal/bootstrap/switches/is_main_thread:41:35",
    "codes": [
      4932
    ]
  },
  {
    "name": " node:tty:1:1",
    "codes": [
      4933
    ]
  },
  {
    "name": " node:tty:1:1",
    "codes": [
      4934
    ]
  },
  {
    "name": " node:internal/tty:1:1",
    "codes": [
      4935
    ]
  },
  {
    "name": " node:internal/tty:1:1",
    "codes": [
      4936
    ]
  },
  {
    "name": "WriteStream node:tty:85:21",
    "codes": [
      4937
    ]
  },
  {
    "name": "value node:internal/console/constructor:300:20",
    "codes": [
      4938
    ]
  },
  {
    "name": "getColorDepth node:internal/tty:106:23",
    "codes": [
      4939
    ]
  },
  {
    "name": "formatWithOptions node:internal/util/inspect:1883:27",
    "codes": [
      4940
    ]
  },
  {
    "name": "formatWithOptionsInternal node:internal/util/inspect:1891:35",
    "codes": [
      4941
    ]
  },
  {
    "name": "value node:internal/console/constructor:258:20",
    "codes": [
      4942
    ]
  },
  {
    "name": "listenerCount node:events:722:23",
    "codes": [
      4943
    ]
  },
  {
    "name": "once node:events:528:44",
    "codes": [
      4944
    ]
  },
  {
    "name": "_onceWrap node:events:514:19",
    "codes": [
      4945
    ]
  },
  {
    "name": "Writable.write node:internal/streams/writable:333:36",
    "codes": [
      4946
    ]
  },
  {
    "name": "_write node:internal/streams/writable:283:16",
    "codes": [
      4947
    ]
  },
  {
    "name": "writeOrBuffer node:internal/streams/writable:365:23",
    "codes": [
      4948
    ]
  },
  {
    "name": "Socket._write node:net:806:35",
    "codes": [
      4949
    ]
  },
  {
    "name": "Socket._writeGeneric node:net:769:42",
    "codes": [
      4950
    ]
  },
  {
    "name": "_unrefTimer node:net:417:52",
    "codes": [
      4951
    ]
  },
  {
    "name": "writeGeneric node:internal/stream_base_commons:151:22",
    "codes": [
      4952
    ]
  },
  {
    "name": "createWriteWrap node:internal/stream_base_commons:113:25",
    "codes": [
      4953
    ]
  },
  {
    "name": "handleWriteReq node:internal/stream_base_commons:45:24",
    "codes": [
      4954
    ]
  },
  {
    "name": "afterWriteDispatched node:internal/stream_base_commons:159:30",
    "codes": [
      4955
    ]
  },
  {
    "name": "onwrite node:internal/streams/writable:425:17",
    "codes": [
      4956
    ]
  },
  {
    "name": "nextTick node:internal/process/task_queues:104:18",
    "codes": [
      4957
    ]
  },
  {
    "name": " node:internal/validators:221:42",
    "codes": [
      4958
    ]
  },
  {
    "name": "isEmpty node:internal/fixed_queue:95:10",
    "codes": [
      4959
    ]
  },
  {
    "name": "isEmpty node:internal/fixed_queue:67:10",
    "codes": [
      4960
    ]
  },
  {
    "name": "setHasTickScheduled node:internal/process/task_queues:52:29",
    "codes": [
      4961
    ]
  },
  {
    "name": "newAsyncId node:internal/async_hooks:415:20",
    "codes": [
      4962
    ]
  },
  {
    "name": "getDefaultTriggerAsyncId node:internal/async_hooks:431:34",
    "codes": [
      4963
    ]
  },
  {
    "name": "initHooksExist node:internal/async_hooks:468:24",
    "codes": [
      4964
    ]
  },
  {
    "name": "hasHooks node:internal/async_hooks:460:18",
    "codes": [
      4965
    ]
  },
  {
    "name": "push node:internal/fixed_queue:99:7",
    "codes": [
      4966
    ]
  },
  {
    "name": "isFull node:internal/fixed_queue:71:9",
    "codes": [
      4967
    ]
  },
  {
    "name": "push node:internal/fixed_queue:75:7",
    "codes": [
      4968
    ]
  },
  {
    "name": "Readable.removeListener node:internal/streams/readable:905:45",
    "codes": [
      4969
    ]
  },
  {
    "name": "removeListener node:events:557:28",
    "codes": [
      4970
    ]
  },
  {
    "name": " node:internal/process/execution:136:10",
    "codes": [
      4971
    ]
  },
  {
    "name": "clearDefaultTriggerAsyncId node:internal/async_hooks:440:36",
    "codes": [
      4972
    ]
  },
  {
    "name": "beforeInspector node:internal/errors:738:18",
    "codes": [
      4973
    ]
  },
  {
    "name": "afterInspector node:internal/errors:752:17",
    "codes": [
      4974
    ]
  },
  {
    "name": "lazyInternalUtilInspect node:internal/errors:184:33",
    "codes": [
      4975
    ]
  },
  {
    "name": "hasColors node:internal/tty:222:19",
    "codes": [
      4976
    ]
  },
  {
    "name": "get node:internal/util/inspect:345:6",
    "codes": [
      4977
    ]
  },
  {
    "name": "inspect node:internal/util/inspect:286:17",
    "codes": [
      4978
    ]
  },
  {
    "name": "formatValue node:internal/util/inspect:726:21",
    "codes": [
      4979
    ]
  },
  {
    "name": "formatRaw node:internal/util/inspect:796:19",
    "codes": [
      4980
    ]
  },
  {
    "name": "getConstructorName node:internal/util/inspect:548:28",
    "codes": [
      4981
    ]
  },
  {
    "name": "isInstanceof node:internal/util/inspect:540:22",
    "codes": [
      4982
    ]
  },
  {
    "name": "getKeys node:internal/util/inspect:669:17",
    "codes": [
      4983
    ]
  },
  {
    "name": "isError node:internal/util:80:17",
    "codes": [
      4984
    ]
  },
  {
    "name": "formatError node:internal/util/inspect:1165:21",
    "codes": [
      4985
    ]
  },
  {
    "name": "exists node:internal/bootstrap/loaders:236:16",
    "codes": [
      4986
    ]
  },
  {
    "name": "stylizeWithColor node:internal/util/inspect:521:26",
    "codes": [
      4987
    ]
  },
  {
    "name": "get node:internal/util/inspect:409:8",
    "codes": [
      4988
    ]
  }
],
  "ticks": [
    {
  "tm": 970,
  "vm": 6,
  "s": [
    2611,
    822
  ]
},
    {
  "tm": 2217,
  "vm": 6,
  "s": [
    2572,
    6790254
  ]
},
    {
  "tm": 3450,
  "vm": 1,
  "s": [
    3929,
    1620
  ]
},
    {
  "tm": 4544,
  "vm": 6,
  "s": [
    -1,
    4384042036
  ]
},
    {
  "tm": 5823,
  "vm": 6,
  "s": [
    2572,
    6794736
  ]
},
    {
  "tm": 10488,
  "vm": 6,
  "s": [
    2759,
    75
  ]
},
    {
  "tm": 10513,
  "vm": 6,
  "s": [
    4144,
    3190
  ]
},
    {
  "tm": 10525,
  "vm": 6,
  "s": [
    4144,
    3708
  ]
},
    {
  "tm": 10536,
  "vm": 6,
  "s": [
    2706,
    203
  ]
},
    {
  "tm": 19795,
  "vm": 6,
  "s": [
    3929,
    554
  ]
},
    {
  "tm": 19823,
  "vm": 6,
  "s": [
    2759,
    75
  ]
},
    {
  "tm": 19832,
  "vm": 6,
  "s": [
    2759,
    75
  ]
},
    {
  "tm": 19840,
  "vm": 6,
  "s": [
    4144,
    3736
  ]
},
    {
  "tm": 19847,
  "vm": 6,
  "s": [
    4144,
    3736
  ]
},
    {
  "tm": 19854,
  "vm": 6,
  "s": [
    2759,
    75
  ]
},
    {
  "tm": 19863,
  "vm": 6,
  "s": [
    4144,
    3797
  ]
},
    {
  "tm": 19873,
  "vm": 6,
  "s": [
    2595,
    10746
  ]
},
    {
  "tm": 21218,
  "vm": 6,
  "s": [
    2759,
    75
  ]
},
    {
  "tm": 22853,
  "vm": 6,
  "s": [
    2572,
    4081488
  ]
},
    {
  "tm": 23995,
  "vm": 6,
  "s": [
    2759,
    75
  ]
},
    {
  "tm": 24923,
  "vm": 6,
  "s": [
    4144,
    3190
  ]
},
    {
  "tm": 26592,
  "vm": 6,
  "s": [
    2759,
    75
  ]
},
    {
  "tm": 27916,
  "vm": 6,
  "s": [
    2759,
    75
  ]
},
    {
  "tm": 28345,
  "vm": 6,
  "s": [
    2581,
    208386
  ]
},
    {
  "tm": 30930,
  "vm": 5,
  "s": [
    2572,
    16691301
  ]
},
    {
  "tm": 32073,
  "vm": 5,
  "s": [
    2572,
    6795130
  ]
},
    {
  "tm": 33340,
  "vm": 5,
  "s": [
    2572,
    6790176
  ]
},
    {
  "tm": 34680,
  "vm": 5,
  "s": [
    2572,
    5361577
  ]
},
    {
  "tm": 35907,
  "vm": 2,
  "s": [
    2572,
    6939792
  ]
},
    {
  "tm": 37657,
  "vm": 3,
  "s": [
    2595,
    158705,
    2572,
    6581872,
    4370,
    3
  ]
},
    {
  "tm": 38214,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4370,
    3
  ]
},
    {
  "tm": 39933,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4370,
    3
  ]
},
    {
  "tm": 40599,
  "vm": 3,
  "s": [
    2581,
    34283,
    2572,
    6581872,
    4376,
    57,
    4372,
    103,
    4371,
    71,
    4374,
    232,
    4372,
    103,
    4371,
    71,
    4370,
    3
  ]
},
    {
  "tm": 44068,
  "vm": 3,
  "s": [
    4144,
    3190,
    2572,
    6581872,
    4378,
    15,
    4370,
    15
  ]
},
    {
  "tm": 44097,
  "vm": 3,
  "s": [
    4144,
    3045,
    2572,
    6581872,
    4378,
    15,
    4370,
    15
  ]
},
    {
  "tm": 44187,
  "vm": 3,
  "s": [
    2572,
    2469136,
    2572,
    6581872,
    4378,
    21,
    4370,
    15
  ]
},
    {
  "tm": 45781,
  "vm": 3,
  "s": [
    4144,
    2383,
    2572,
    6581872,
    4380,
    40,
    4378,
    21,
    4370,
    15
  ]
},
    {
  "tm": 50518,
  "vm": 3,
  "s": [
    2572,
    4082392,
    2572,
    6581872,
    4380,
    229,
    4378,
    21,
    4370,
    15
  ]
},
    {
  "tm": 50550,
  "vm": 3,
  "s": [
    2595,
    21590,
    2572,
    6581872,
    4380,
    229,
    4378,
    21,
    4370,
    15
  ]
},
    {
  "tm": 50561,
  "vm": 3,
  "s": [
    4144,
    3092,
    2572,
    6581872,
    4380,
    229,
    4378,
    21,
    4370,
    15
  ]
},
    {
  "tm": 50569,
  "vm": 3,
  "s": [
    4144,
    2158,
    2572,
    6581872,
    4380,
    229,
    4378,
    21,
    4370,
    15
  ]
},
    {
  "tm": 51850,
  "vm": 3,
  "s": [
    4144,
    3764,
    2572,
    6581872,
    4384,
    8,
    4382,
    45,
    4380,
    229,
    4378,
    21,
    4370,
    15
  ]
},
    {
  "tm": 52972,
  "vm": 3,
  "s": [
    2759,
    75,
    2572,
    6581872,
    4391,
    40,
    4378,
    28,
    4370,
    15
  ]
},
    {
  "tm": 54267,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4396,
    23,
    4378,
    40,
    4370,
    15
  ]
},
    {
  "tm": 57410,
  "vm": 3,
  "s": [
    2581,
    85889,
    2572,
    6581872,
    4399,
    61,
    4378,
    46,
    4370,
    15
  ]
},
    {
  "tm": 57433,
  "vm": 3,
  "s": [
    4144,
    3816,
    2572,
    6581872,
    4399,
    61,
    4378,
    46,
    4370,
    15
  ]
},
    {
  "tm": 57720,
  "vm": 3,
  "s": [
    2759,
    75,
    2572,
    6581872,
    4402,
    8,
    4401,
    9,
    4400,
    14,
    4399,
    61,
    4378,
    46,
    4370,
    15
  ]
},
    {
  "tm": 58970,
  "vm": 0,
  "s": [
    2572,
    8998624,
    2572,
    6616144,
    4389,
    81,
    4407,
    42,
    4378,
    98,
    4370,
    15
  ]
},
    {
  "tm": 60088,
  "vm": 3,
  "s": [
    2759,
    75,
    2572,
    6581872,
    4416,
    16,
    4378,
    116,
    4370,
    15
  ]
},
    {
  "tm": 61699,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4422,
    6,
    4378,
    146,
    4370,
    15
  ]
},
    {
  "tm": 62404,
  "vm": 0,
  "s": [
    2572,
    10989273,
    4427,
    0,
    4372,
    103,
    4371,
    71,
    4424,
    295,
    4372,
    103,
    4371,
    71,
    4422,
    6,
    4378,
    146,
    4370,
    15
  ]
},
    {
  "tm": 64753,
  "vm": 3,
  "s": [
    4144,
    3185,
    2572,
    6581872,
    4430,
    465,
    4372,
    103,
    4371,
    71,
    4424,
    311,
    4372,
    103,
    4371,
    71,
    4422,
    6,
    4378,
    146,
    4370,
    15
  ]
},
    {
  "tm": 64990,
  "vm": 0,
  "s": [
    2572,
    5323137,
    2572,
    6652144,
    4424,
    341,
    4372,
    103,
    4371,
    71,
    4422,
    6,
    4378,
    146,
    4370,
    15
  ]
},
    {
  "tm": 66111,
  "vm": 2,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 70504,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 70529,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 70541,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 71143,
  "vm": 2,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 73218,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4444,
    78,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 73249,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4444,
    78,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 74898,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4449,
    20,
    4372,
    103,
    4371,
    71,
    4446,
    295,
    4372,
    103,
    4371,
    71,
    4444,
    78,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 75742,
  "vm": 2,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4446,
    319,
    4372,
    103,
    4371,
    71,
    4444,
    78,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 79768,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4446,
    319,
    4372,
    103,
    4371,
    71,
    4444,
    78,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 79801,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4446,
    319,
    4372,
    103,
    4371,
    71,
    4444,
    78,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 79818,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4446,
    319,
    4372,
    103,
    4371,
    71,
    4444,
    78,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 80460,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4453,
    1073,
    4372,
    103,
    4371,
    71,
    4446,
    319,
    4372,
    103,
    4371,
    71,
    4444,
    78,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 81614,
  "vm": 2,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4459,
    100,
    4372,
    103,
    4371,
    71,
    4457,
    36,
    4372,
    103,
    4371,
    71,
    4446,
    342,
    4372,
    103,
    4371,
    71,
    4444,
    78,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 84824,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4459,
    100,
    4372,
    103,
    4371,
    71,
    4457,
    36,
    4372,
    103,
    4371,
    71,
    4446,
    342,
    4372,
    103,
    4371,
    71,
    4444,
    78,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 84854,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4459,
    100,
    4372,
    103,
    4371,
    71,
    4457,
    36,
    4372,
    103,
    4371,
    71,
    4446,
    342,
    4372,
    103,
    4371,
    71,
    4444,
    78,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 85060,
  "vm": 6,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4461,
    709,
    4372,
    103,
    4371,
    71,
    4459,
    100,
    4372,
    103,
    4371,
    71,
    4457,
    36,
    4372,
    103,
    4371,
    71,
    4446,
    342,
    4372,
    103,
    4371,
    71,
    4444,
    78,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 89819,
  "vm": 3,
  "s": [
    2572,
    5689397,
    2572,
    6581872,
    4464,
    371,
    4372,
    103,
    4371,
    71,
    4461,
    709,
    4372,
    103,
    4371,
    71,
    4459,
    100,
    4372,
    103,
    4371,
    71,
    4457,
    36,
    4372,
    103,
    4371,
    71,
    4446,
    342,
    4372,
    103,
    4371,
    71,
    4444,
    78,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 89872,
  "vm": 3,
  "s": [
    4144,
    3736,
    2572,
    6581872,
    4464,
    371,
    4372,
    103,
    4371,
    71,
    4461,
    709,
    4372,
    103,
    4371,
    71,
    4459,
    100,
    4372,
    103,
    4371,
    71,
    4457,
    36,
    4372,
    103,
    4371,
    71,
    4446,
    342,
    4372,
    103,
    4371,
    71,
    4444,
    78,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 89894,
  "vm": 3,
  "s": [
    589,
    17,
    2572,
    6581872,
    4464,
    371,
    4372,
    103,
    4371,
    71,
    4461,
    709,
    4372,
    103,
    4371,
    71,
    4459,
    100,
    4372,
    103,
    4371,
    71,
    4457,
    36,
    4372,
    103,
    4371,
    71,
    4446,
    342,
    4372,
    103,
    4371,
    71,
    4444,
    78,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 90196,
  "vm": 3,
  "s": [
    2572,
    2697281,
    2572,
    6581872,
    4467,
    85,
    4466,
    104,
    4465,
    12,
    4464,
    371,
    4372,
    103,
    4371,
    71,
    4461,
    709,
    4372,
    103,
    4371,
    71,
    4459,
    100,
    4372,
    103,
    4371,
    71,
    4457,
    36,
    4372,
    103,
    4371,
    71,
    4446,
    342,
    4372,
    103,
    4371,
    71,
    4444,
    78,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 91925,
  "vm": 3,
  "s": [
    2759,
    75,
    2572,
    6581872,
    4461,
    1199,
    4372,
    103,
    4371,
    71,
    4459,
    100,
    4372,
    103,
    4371,
    71,
    4457,
    36,
    4372,
    103,
    4371,
    71,
    4446,
    342,
    4372,
    103,
    4371,
    71,
    4444,
    78,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 94427,
  "vm": 3,
  "s": [
    2572,
    4082220,
    2572,
    6581872,
    4461,
    1217,
    4372,
    103,
    4371,
    71,
    4459,
    100,
    4372,
    103,
    4371,
    71,
    4457,
    36,
    4372,
    103,
    4371,
    71,
    4446,
    342,
    4372,
    103,
    4371,
    71,
    4444,
    78,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 94455,
  "vm": 3,
  "s": [
    589,
    4,
    2572,
    6581872,
    4461,
    1217,
    4372,
    103,
    4371,
    71,
    4459,
    100,
    4372,
    103,
    4371,
    71,
    4457,
    36,
    4372,
    103,
    4371,
    71,
    4446,
    342,
    4372,
    103,
    4371,
    71,
    4444,
    78,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 94910,
  "vm": 2,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4457,
    50,
    4372,
    103,
    4371,
    71,
    4446,
    342,
    4372,
    103,
    4371,
    71,
    4444,
    78,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 96268,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4457,
    50,
    4372,
    103,
    4371,
    71,
    4446,
    342,
    4372,
    103,
    4371,
    71,
    4444,
    78,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 98495,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4372,
    70,
    4371,
    71,
    4444,
    129,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 98678,
  "vm": 0,
  "s": [
    2572,
    4890959,
    2572,
    3625264,
    4478,
    840,
    4372,
    103,
    4371,
    71,
    4444,
    129,
    4372,
    103,
    4371,
    71,
    4440,
    1195,
    4372,
    103,
    4371,
    71,
    4438,
    6,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 100076,
  "vm": 0,
  "s": [
    2605,
    10610,
    2572,
    6616144,
    4382,
    156,
    4487,
    221,
    4438,
    36,
    4378,
    164,
    4370,
    15
  ]
},
    {
  "tm": 101319,
  "vm": 2,
  "s": [
    3929,
    3104,
    2572,
    6581872,
    4501,
    71,
    4500,
    33,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 102666,
  "vm": 3,
  "s": [
    2572,
    4110278,
    2572,
    6581872,
    4506,
    138,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 103787,
  "vm": 3,
  "s": [
    3929,
    1879,
    2572,
    6581872,
    4515,
    657,
    4506,
    138,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 112174,
  "vm": 3,
  "s": [
    4144,
    3687,
    2572,
    6581872,
    4529,
    35,
    4528,
    45,
    4527,
    23,
    4524,
    342,
    4515,
    657,
    4506,
    138,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 112200,
  "vm": 3,
  "s": [
    2581,
    85866,
    2572,
    6581872,
    4529,
    35,
    4528,
    45,
    4527,
    23,
    4524,
    342,
    4515,
    657,
    4506,
    138,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 112229,
  "vm": 3,
  "s": [
    4144,
    3736,
    2572,
    6581872,
    4529,
    35,
    4528,
    45,
    4527,
    23,
    4524,
    342,
    4515,
    657,
    4506,
    138,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 112247,
  "vm": 3,
  "s": [
    4144,
    3806,
    2572,
    6581872,
    4529,
    35,
    4528,
    45,
    4527,
    23,
    4524,
    342,
    4515,
    657,
    4506,
    138,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 112261,
  "vm": 3,
  "s": [
    4144,
    3190,
    2572,
    6581872,
    4529,
    35,
    4528,
    45,
    4527,
    23,
    4524,
    342,
    4515,
    657,
    4506,
    138,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 112276,
  "vm": 3,
  "s": [
    -1,
    140703193437346,
    2572,
    6581872,
    4529,
    35,
    4528,
    45,
    4527,
    23,
    4524,
    342,
    4515,
    657,
    4506,
    138,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 114688,
  "vm": 3,
  "s": [
    2595,
    72646,
    2572,
    6581872,
    4530,
    12,
    4529,
    35,
    4528,
    45,
    4527,
    23,
    4524,
    342,
    4515,
    657,
    4506,
    138,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 114714,
  "vm": 3,
  "s": [
    589,
    93,
    2572,
    6581872,
    4530,
    12,
    4529,
    35,
    4528,
    45,
    4527,
    23,
    4524,
    342,
    4515,
    657,
    4506,
    138,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 118915,
  "vm": 3,
  "s": [
    4144,
    3764,
    2572,
    6581872,
    4530,
    25,
    4529,
    35,
    4528,
    45,
    4527,
    23,
    4524,
    342,
    4515,
    657,
    4506,
    138,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 118944,
  "vm": 3,
  "s": [
    2581,
    85817,
    2572,
    6581872,
    4530,
    25,
    4529,
    35,
    4528,
    45,
    4527,
    23,
    4524,
    342,
    4515,
    657,
    4506,
    138,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 118960,
  "vm": 3,
  "s": [
    2759,
    75,
    2572,
    6581872,
    4530,
    25,
    4529,
    35,
    4528,
    45,
    4527,
    23,
    4524,
    342,
    4515,
    657,
    4506,
    138,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 118975,
  "vm": 3,
  "s": [
    589,
    64,
    2572,
    6581872,
    4530,
    25,
    4529,
    35,
    4528,
    45,
    4527,
    23,
    4524,
    342,
    4515,
    657,
    4506,
    138,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 119828,
  "vm": 6,
  "s": [
    1812,
    0,
    2572,
    1606256,
    4530,
    559,
    4529,
    35,
    4528,
    45,
    4527,
    23,
    4524,
    342,
    4515,
    657,
    4506,
    138,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 121088,
  "vm": 3,
  "s": [
    2595,
    158716,
    2572,
    6581872,
    4532,
    14,
    4531,
    92,
    4553,
    10,
    4552,
    60,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 122352,
  "vm": 3,
  "s": [
    2759,
    75,
    2572,
    6581872,
    4570,
    7,
    4569,
    29,
    4553,
    159,
    4552,
    60,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 123380,
  "vm": 2,
  "s": [
    2572,
    5903357,
    2572,
    6581872,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 125440,
  "vm": 3,
  "s": [
    589,
    42,
    2572,
    6581872,
    4585,
    113,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 125907,
  "vm": 2,
  "s": [
    2572,
    5926484,
    2572,
    6581872,
    4586,
    422,
    4585,
    113,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 128203,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4598,
    29,
    4490,
    771,
    4596,
    44,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4591,
    3,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 128262,
  "vm": 6,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4598,
    29,
    4490,
    771,
    4596,
    44,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4591,
    3,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 131399,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4600,
    219,
    4490,
    771,
    4489,
    645,
    4598,
    29,
    4490,
    771,
    4596,
    44,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4591,
    3,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 131429,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4600,
    219,
    4490,
    771,
    4489,
    645,
    4598,
    29,
    4490,
    771,
    4596,
    44,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4591,
    3,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 131907,
  "vm": 2,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4602,
    580,
    4490,
    771,
    4489,
    645,
    4600,
    219,
    4490,
    771,
    4489,
    645,
    4598,
    29,
    4490,
    771,
    4596,
    44,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4591,
    3,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 135745,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4602,
    580,
    4490,
    771,
    4489,
    645,
    4600,
    219,
    4490,
    771,
    4489,
    645,
    4598,
    29,
    4490,
    771,
    4596,
    44,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4591,
    3,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 135777,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4602,
    580,
    4490,
    771,
    4489,
    645,
    4600,
    219,
    4490,
    771,
    4489,
    645,
    4598,
    29,
    4490,
    771,
    4596,
    44,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4591,
    3,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 135811,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4602,
    580,
    4490,
    771,
    4489,
    645,
    4600,
    219,
    4490,
    771,
    4489,
    645,
    4598,
    29,
    4490,
    771,
    4596,
    44,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4591,
    3,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 136626,
  "vm": 2,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4604,
    491,
    4490,
    771,
    4489,
    645,
    4602,
    580,
    4490,
    771,
    4489,
    645,
    4600,
    219,
    4490,
    771,
    4489,
    645,
    4598,
    29,
    4490,
    771,
    4596,
    44,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4591,
    3,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 141925,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4604,
    491,
    4490,
    771,
    4489,
    645,
    4602,
    580,
    4490,
    771,
    4489,
    645,
    4600,
    219,
    4490,
    771,
    4489,
    645,
    4598,
    29,
    4490,
    771,
    4596,
    44,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4591,
    3,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 141957,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4604,
    491,
    4490,
    771,
    4489,
    645,
    4602,
    580,
    4490,
    771,
    4489,
    645,
    4600,
    219,
    4490,
    771,
    4489,
    645,
    4598,
    29,
    4490,
    771,
    4596,
    44,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4591,
    3,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 141977,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4604,
    491,
    4490,
    771,
    4489,
    645,
    4602,
    580,
    4490,
    771,
    4489,
    645,
    4600,
    219,
    4490,
    771,
    4489,
    645,
    4598,
    29,
    4490,
    771,
    4596,
    44,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4591,
    3,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 142011,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4604,
    491,
    4490,
    771,
    4489,
    645,
    4602,
    580,
    4490,
    771,
    4489,
    645,
    4600,
    219,
    4490,
    771,
    4489,
    645,
    4598,
    29,
    4490,
    771,
    4596,
    44,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4591,
    3,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 142604,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4607,
    532,
    4490,
    771,
    4489,
    645,
    4604,
    491,
    4490,
    771,
    4489,
    645,
    4602,
    580,
    4490,
    771,
    4489,
    645,
    4600,
    219,
    4490,
    771,
    4489,
    645,
    4598,
    29,
    4490,
    771,
    4596,
    44,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4591,
    3,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 143828,
  "vm": 2,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4604,
    503,
    4490,
    771,
    4489,
    645,
    4602,
    580,
    4490,
    771,
    4489,
    645,
    4600,
    219,
    4490,
    771,
    4489,
    645,
    4598,
    29,
    4490,
    771,
    4596,
    44,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4591,
    3,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 146775,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4604,
    503,
    4490,
    771,
    4489,
    645,
    4602,
    580,
    4490,
    771,
    4489,
    645,
    4600,
    219,
    4490,
    771,
    4489,
    645,
    4598,
    29,
    4490,
    771,
    4596,
    44,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4591,
    3,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 146804,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4604,
    503,
    4490,
    771,
    4489,
    645,
    4602,
    580,
    4490,
    771,
    4489,
    645,
    4600,
    219,
    4490,
    771,
    4489,
    645,
    4598,
    29,
    4490,
    771,
    4596,
    44,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4591,
    3,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 147868,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4604,
    658,
    4490,
    771,
    4489,
    645,
    4602,
    580,
    4490,
    771,
    4489,
    645,
    4600,
    219,
    4490,
    771,
    4489,
    645,
    4598,
    29,
    4490,
    771,
    4596,
    44,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4591,
    3,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 148941,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4600,
    259,
    4490,
    771,
    4489,
    645,
    4598,
    29,
    4490,
    771,
    4596,
    44,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4591,
    3,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 150191,
  "vm": 0,
  "s": [
    2572,
    11047714,
    4632,
    30,
    4631,
    10,
    1129,
    0,
    4630,
    140,
    4596,
    111,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4591,
    3,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 151489,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4642,
    14,
    2572,
    10773919,
    4638,
    263,
    4634,
    513,
    4631,
    10,
    1129,
    0,
    4630,
    140,
    4596,
    111,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4641,
    3,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 152671,
  "vm": 2,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4649,
    3,
    4490,
    771,
    4596,
    44,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4641,
    16,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 154003,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4649,
    3,
    4490,
    771,
    4596,
    44,
    4543,
    53,
    4506,
    304,
    4505,
    76,
    4594,
    8,
    4641,
    16,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 155402,
  "vm": 3,
  "s": [
    2595,
    158750,
    2572,
    6652144,
    4641,
    65,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 158390,
  "vm": 3,
  "s": [
    589,
    59,
    2572,
    6652144,
    4641,
    65,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 158413,
  "vm": 3,
  "s": [
    589,
    236,
    2572,
    6652144,
    4641,
    65,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 158867,
  "vm": 2,
  "s": [
    2572,
    6127133,
    2572,
    6652144,
    4656,
    71,
    4655,
    28,
    4654,
    316,
    4641,
    65,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 160181,
  "vm": 3,
  "s": [
    4144,
    3736,
    2572,
    6581872,
    4656,
    212,
    4655,
    28,
    4654,
    316,
    4641,
    65,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 161984,
  "vm": 3,
  "s": [
    4144,
    3309,
    2572,
    6581872,
    4655,
    44,
    4654,
    316,
    4641,
    65,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 162490,
  "vm": 2,
  "s": [
    2572,
    1463172,
    2572,
    6581872,
    4654,
    386,
    4641,
    65,
    4580,
    459,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 163771,
  "vm": 3,
  "s": [
    1501,
    0,
    2572,
    1606256,
    4586,
    312,
    4585,
    113,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4505,
    76,
    4500,
    141,
    4499,
    47,
    4378,
    202,
    4370,
    15
  ]
},
    {
  "tm": 165006,
  "vm": 6,
  "s": [
    1501,
    0,
    2572,
    1606256,
    4586,
    312,
    4585,
    113,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 169743,
  "vm": 3,
  "s": [
    2595,
    21597,
    2572,
    6581872,
    1501,
    0,
    4586,
    312,
    4585,
    113,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 169763,
  "vm": 3,
  "s": [
    2595,
    21597,
    2572,
    6581872,
    1501,
    0,
    4586,
    312,
    4585,
    113,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 169772,
  "vm": 3,
  "s": [
    4144,
    3185,
    2572,
    6581872,
    1501,
    0,
    4586,
    312,
    4585,
    113,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 170117,
  "vm": 3,
  "s": [
    2605,
    5086,
    2572,
    6581872,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 171173,
  "vm": 2,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 172410,
  "vm": 2,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 173662,
  "vm": 2,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 174975,
  "vm": 2,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 176231,
  "vm": 2,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 177316,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 196175,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 196199,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 196212,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 196223,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 196233,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 196241,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 196252,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 196263,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 196274,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 196283,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 196293,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 196315,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 196324,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 196333,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 196343,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 196789,
  "vm": 6,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 198117,
  "vm": 0,
  "s": [
    2581,
    41010,
    2572,
    6616144,
    4699,
    39,
    4694,
    1390,
    4696,
    15,
    4693,
    23,
    4490,
    771,
    4489,
    645,
    4691,
    18,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 199377,
  "vm": 2,
  "s": [
    2572,
    6129962,
    2572,
    6652144,
    4710,
    8,
    4691,
    43,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 200623,
  "vm": 2,
  "s": [
    2572,
    5674616,
    2572,
    6581872,
    4727,
    5,
    4725,
    38,
    4721,
    129,
    4718,
    26,
    4710,
    19,
    4691,
    43,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 201980,
  "vm": 2,
  "s": [
    2572,
    5874054,
    2572,
    6581872,
    4731,
    42,
    4730,
    54,
    4727,
    49,
    4725,
    38,
    4721,
    129,
    4738,
    127,
    4737,
    5,
    4733,
    781,
    4732,
    61,
    4718,
    35,
    4710,
    19,
    4691,
    43,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 203196,
  "vm": 3,
  "s": [
    2595,
    72240,
    2572,
    6581872,
    4755,
    5,
    4737,
    68,
    4733,
    781,
    4732,
    61,
    4718,
    35,
    4710,
    19,
    4691,
    43,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 204293,
  "vm": 0,
  "s": [
    2572,
    10043606,
    4747,
    0,
    4746,
    5,
    4745,
    15,
    4742,
    193,
    4741,
    37,
    4737,
    52,
    4733,
    781,
    4732,
    61,
    4718,
    35,
    4710,
    19,
    4691,
    43,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 205389,
  "vm": 3,
  "s": [
    2595,
    210643,
    2572,
    6581872,
    4787,
    5,
    4786,
    27,
    4785,
    25,
    4733,
    522,
    4732,
    61,
    4718,
    35,
    4710,
    19,
    4691,
    43,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 206472,
  "vm": 2,
  "s": [
    2572,
    5674663,
    2572,
    6581872,
    4798,
    15,
    4796,
    152,
    4786,
    58,
    4785,
    25,
    4733,
    522,
    4732,
    61,
    4718,
    35,
    4710,
    19,
    4691,
    43,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 207529,
  "vm": 3,
  "s": [
    2759,
    75,
    2572,
    6581872,
    4804,
    148,
    4803,
    131,
    4801,
    93,
    4800,
    309,
    4799,
    28,
    4798,
    15,
    4796,
    152,
    4805,
    165,
    4804,
    409,
    4803,
    131,
    4801,
    93,
    4800,
    309,
    4799,
    28,
    4798,
    15,
    4796,
    152,
    4786,
    58,
    4785,
    25,
    4733,
    522,
    4732,
    61,
    4718,
    35,
    4710,
    19,
    4691,
    43,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 208795,
  "vm": 0,
  "s": [
    2572,
    10043524,
    4733,
    80,
    4732,
    61,
    4718,
    35,
    4710,
    19,
    4691,
    43,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 210058,
  "vm": 2,
  "s": [
    2572,
    6116314,
    2572,
    6581872,
    4840,
    14,
    4733,
    438,
    4839,
    86,
    4835,
    276,
    4824,
    376,
    4823,
    41,
    4733,
    400,
    4732,
    61,
    4718,
    35,
    4710,
    19,
    4691,
    43,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 211317,
  "vm": 0,
  "s": [
    2572,
    2731970,
    2572,
    6616144,
    4761,
    150,
    4760,
    910,
    4801,
    15,
    4800,
    309,
    4813,
    151,
    4813,
    315,
    4799,
    100,
    4798,
    15,
    4796,
    152,
    4835,
    37,
    4850,
    127,
    4760,
    666,
    4801,
    15,
    4800,
    309,
    4799,
    28,
    4798,
    15,
    4796,
    152,
    4805,
    165,
    4804,
    409,
    4803,
    131,
    4801,
    93,
    4800,
    309,
    4799,
    28,
    4798,
    15,
    4796,
    152,
    4811,
    15,
    4841,
    23,
    4840,
    14,
    4733,
    438,
    4840,
    70,
    4733,
    438,
    4839,
    86,
    4835,
    276,
    4824,
    376,
    4823,
    41,
    4733,
    400,
    4732,
    61,
    4718,
    35,
    4710,
    19,
    4691,
    43,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 212673,
  "vm": 2,
  "s": [
    2572,
    5833726,
    2572,
    6581872,
    4733,
    805,
    4839,
    86,
    4733,
    558,
    4863,
    48,
    4733,
    534,
    4839,
    86,
    4733,
    558,
    4840,
    70,
    4733,
    438,
    4840,
    70,
    4733,
    438,
    4839,
    86,
    4835,
    276,
    4824,
    376,
    4823,
    41,
    4733,
    400,
    4732,
    61,
    4718,
    35,
    4710,
    19,
    4691,
    43,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 213872,
  "vm": 3,
  "s": [
    2611,
    1970,
    2572,
    6581872,
    4888,
    5,
    4784,
    768,
    4791,
    854,
    4887,
    31,
    4760,
    1430,
    4862,
    145,
    4800,
    309,
    4855,
    190,
    4868,
    142,
    4878,
    984,
    4805,
    165,
    4876,
    2805,
    4857,
    849,
    4862,
    563,
    4800,
    309,
    4855,
    190,
    4868,
    142,
    4878,
    984,
    4811,
    15,
    4733,
    866,
    4839,
    86,
    4733,
    558,
    4840,
    30,
    4733,
    438,
    4732,
    61,
    4718,
    35,
    4710,
    19,
    4691,
    43,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 215143,
  "vm": 3,
  "s": [
    2572,
    3811892,
    2572,
    6581872,
    4897,
    429,
    4733,
    327,
    4839,
    86,
    4733,
    558,
    4840,
    30,
    4733,
    438,
    4732,
    61,
    4718,
    35,
    4710,
    19,
    4691,
    43,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 216486,
  "vm": 0,
  "s": [
    2572,
    10266821,
    4782,
    295,
    4870,
    328,
    4789,
    188,
    4879,
    4471,
    4783,
    350,
    4784,
    889,
    4791,
    854,
    4871,
    1114,
    4788,
    129,
    4909,
    73,
    4786,
    27,
    4897,
    248,
    4733,
    327,
    4912,
    541,
    4835,
    276,
    4850,
    127,
    4908,
    26,
    4864,
    460,
    4760,
    1041,
    4862,
    145,
    4894,
    1923,
    4855,
    190,
    4868,
    142,
    4878,
    984,
    4805,
    165,
    4876,
    2805,
    4857,
    849,
    4862,
    563,
    4894,
    1923,
    4855,
    190,
    4868,
    142,
    4878,
    984,
    4811,
    15,
    4733,
    866,
    4839,
    86,
    4733,
    558,
    4840,
    70,
    4733,
    438,
    4732,
    61,
    4718,
    35,
    4710,
    19,
    4691,
    43,
    4690,
    47,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 217863,
  "vm": 3,
  "s": [
    4144,
    3647,
    2572,
    6581872,
    4690,
    67,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 220035,
  "vm": 3,
  "s": [
    2595,
    21147,
    2572,
    6581872,
    2572,
    544736,
    4927,
    35,
    4925,
    346,
    4404,
    268,
    4922,
    19,
    4690,
    67,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 220054,
  "vm": 3,
  "s": [
    2706,
    203,
    2572,
    6581872,
    2572,
    544736,
    4927,
    35,
    4925,
    346,
    4404,
    268,
    4922,
    19,
    4690,
    67,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 221600,
  "vm": 3,
  "s": [
    2475,
    0,
    2572,
    1606256,
    4490,
    571,
    4489,
    645,
    4932,
    59,
    4931,
    17,
    4930,
    9,
    4929,
    8,
    4928,
    24,
    2572,
    544736,
    4927,
    35,
    4925,
    346,
    4404,
    268,
    4922,
    19,
    4690,
    67,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 222508,
  "vm": 0,
  "s": [
    2572,
    6432640,
    2572,
    6625248,
    4936,
    274,
    4490,
    771,
    4489,
    645,
    4934,
    140,
    4490,
    771,
    4489,
    645,
    4932,
    59,
    4931,
    17,
    4930,
    9,
    4929,
    8,
    4928,
    24,
    2572,
    544736,
    4927,
    35,
    4925,
    346,
    4404,
    268,
    4922,
    19,
    4690,
    67,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 223811,
  "vm": 6,
  "s": [
    2572,
    471728,
    2572,
    1606256,
    4937,
    67,
    4932,
    73,
    4931,
    17,
    4930,
    9,
    4929,
    8,
    4928,
    24,
    2572,
    544736,
    4927,
    35,
    4925,
    346,
    4404,
    268,
    4922,
    19,
    4690,
    67,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 229735,
  "vm": 3,
  "s": [
    4144,
    3257,
    2572,
    6581872,
    4929,
    44,
    4928,
    24,
    2572,
    544736,
    4927,
    35,
    4925,
    346,
    4404,
    268,
    4922,
    19,
    4690,
    67,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 229771,
  "vm": 3,
  "s": [
    590,
    26,
    2572,
    6581872,
    4929,
    44,
    4928,
    24,
    2572,
    544736,
    4927,
    35,
    4925,
    346,
    4404,
    268,
    4922,
    19,
    4690,
    67,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 229783,
  "vm": 3,
  "s": [
    2595,
    21032,
    2572,
    6581872,
    4929,
    44,
    4928,
    24,
    2572,
    544736,
    4927,
    35,
    4925,
    346,
    4404,
    268,
    4922,
    19,
    4690,
    67,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 229793,
  "vm": 3,
  "s": [
    4144,
    3764,
    2572,
    6581872,
    4929,
    44,
    4928,
    24,
    2572,
    544736,
    4927,
    35,
    4925,
    346,
    4404,
    268,
    4922,
    19,
    4690,
    67,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 229915,
  "vm": 3,
  "s": [
    2572,
    3944100,
    2572,
    6581872,
    4940,
    43,
    4929,
    44,
    4928,
    24,
    2572,
    544736,
    4927,
    35,
    4925,
    346,
    4404,
    268,
    4922,
    19,
    4690,
    67,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 231453,
  "vm": 3,
  "s": [
    2595,
    72677,
    2572,
    6581872,
    4950,
    157,
    4949,
    19,
    4948,
    190,
    4947,
    332,
    4946,
    15,
    4942,
    187,
    4928,
    30,
    2572,
    544736,
    4927,
    35,
    4925,
    346,
    4404,
    268,
    4922,
    19,
    4690,
    67,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 232729,
  "vm": 3,
  "s": [
    4144,
    3736,
    2572,
    6581872,
    4957,
    232,
    4956,
    293,
    4955,
    86,
    4952,
    47,
    4950,
    157,
    4949,
    19,
    4948,
    190,
    4947,
    332,
    4946,
    15,
    4942,
    187,
    4928,
    30,
    2572,
    544736,
    4927,
    35,
    4925,
    346,
    4404,
    268,
    4922,
    19,
    4690,
    67,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 234408,
  "vm": 3,
  "s": [
    4144,
    3190,
    2572,
    6581872,
    4957,
    252,
    4956,
    293,
    4955,
    86,
    4952,
    47,
    4950,
    157,
    4949,
    19,
    4948,
    190,
    4947,
    332,
    4946,
    15,
    4942,
    187,
    4928,
    30,
    2572,
    544736,
    4927,
    35,
    4925,
    346,
    4404,
    268,
    4922,
    19,
    4690,
    67,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 234795,
  "vm": 2,
  "s": [
    2572,
    6102656,
    2572,
    6581872,
    4969,
    29,
    4942,
    250,
    4928,
    30,
    2572,
    544736,
    4927,
    35,
    4925,
    346,
    4404,
    268,
    4922,
    19,
    4690,
    67,
    4585,
    157,
    4580,
    103,
    4552,
    477,
    4544,
    144,
    4506,
    409,
    4685,
    73,
    4370,
    51
  ]
},
    {
  "tm": 236085,
  "vm": 2,
  "s": [
    2572,
    5990096,
    2572,
    6581872,
    4978,
    376,
    4974,
    232
  ]
},
    {
  "tm": 237416,
  "vm": 3,
  "s": [
    2572,
    3897402,
    2572,
    6581872,
    4980,
    1568,
    4979,
    454,
    4978,
    376,
    4974,
    232
  ]
},
    {
  "tm": 238553,
  "vm": 0,
  "s": [
    2572,
    22478
  ]
}
  ],
  "scripts": [
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "node:internal/assert",
    "source": "'use strict';\n\nlet error;\nfunction lazyError() {\n  if (!error) {\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\n  }\n  return error;\n}\n\nfunction assert(value, message) {\n  if (!value) {\n    const ERR_INTERNAL_ASSERTION = lazyError();\n    throw new ERR_INTERNAL_ASSERTION(message);\n  }\n}\n\nfunction fail(message) {\n  const ERR_INTERNAL_ASSERTION = lazyError();\n  throw new ERR_INTERNAL_ASSERTION(message);\n}\n\nassert.fail = fail;\n\nmodule.exports = assert;\n",
    "name": "assert",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 16,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "node:internal/perf/utils",
    "source": "'use strict';\n\nconst binding = internalBinding('performance');\nconst {\n  milestones,\n  getTimeOrigin,\n} = binding;\n\n// TODO(joyeecheung): we may want to warn about access to\n// this during snapshot building.\nlet timeOrigin = getTimeOrigin();\n\nfunction now() {\n  const hr = process.hrtime();\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\n}\n\nfunction getMilestoneTimestamp(milestoneIdx) {\n  const ns = milestones[milestoneIdx];\n  if (ns === -1)\n    return ns;\n  return ns / 1e6 - timeOrigin;\n}\n\nfunction refreshTimeOrigin() {\n  timeOrigin = getTimeOrigin();\n}\n\nmodule.exports = {\n  now,\n  getMilestoneTimestamp,\n  refreshTimeOrigin\n};\n",
    "name": "utils",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 41,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "node:internal/streams/state",
    "source": "'use strict';\n\nconst {\n  MathFloor,\n  NumberIsInteger,\n} = primordials;\n\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark :\n    isDuplex ? options[duplexKey] : null;\n}\n\nfunction getDefaultHighWaterMark(objectMode) {\n  return objectMode ? 16 : 16 * 1024;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  const hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!NumberIsInteger(hwm) || hwm < 0) {\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\n      throw new ERR_INVALID_ARG_VALUE(name, hwm);\n    }\n    return MathFloor(hwm);\n  }\n\n  // Default value\n  return getDefaultHighWaterMark(state.objectMode);\n}\n\nmodule.exports = {\n  getHighWaterMark,\n  getDefaultHighWaterMark\n};\n",
    "name": "state",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 53,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "node:internal/main/run_main_module",
    "source": "'use strict';\n\nconst {\n  prepareMainThreadExecution\n} = require('internal/bootstrap/pre_execution');\n\nprepareMainThreadExecution(true);\n\nmarkBootstrapComplete();\n\n// Note: this loads the module through the ESM loader if the module is\n// determined to be an ES module. This hangs from the CJS module loader\n// because we currently allow monkey-patching of the module loaders\n// in the preloaded scripts through require('module').\n// runMain here might be monkey-patched by users in --require.\n// XXX: the monkey-patchability here should probably be deprecated.\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\n",
    "name": "run_main_module",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 91,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "node:internal/modules/esm/load",
    "source": "'use strict';\n\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\nconst { defaultGetSource } = require('internal/modules/esm/get_source');\nconst { translators } = require('internal/modules/esm/translators');\n\nasync function defaultLoad(url, context) {\n  let {\n    format,\n    source,\n  } = context;\n\n  if (!translators.has(format)) format = defaultGetFormat(url);\n\n  if (\n    format === 'builtin' ||\n    format === 'commonjs'\n  ) {\n    source = null;\n  } else if (source == null) {\n    source = await defaultGetSource(url, { format });\n  }\n\n  return {\n    format,\n    source,\n  };\n}\n\nmodule.exports = {\n  defaultLoad,\n};\n",
    "name": "load",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 107,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "/Users/iramgutierrez/.nvm/versions/node/v16.13.2/lib/node_modules/0x/lib/preload/no-cluster.js",
    "source": "const cluster = require('cluster')\n\ncluster.on('fork', () => {\n  throw new Error('0x does not support clustering.')\n})\n",
    "name": "no-cluster.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 115,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "node:internal/dtrace",
    "source": "'use strict';\n\nconst config = internalBinding('config');\n\nconst {\n  DTRACE_HTTP_CLIENT_REQUEST = () => {},\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {},\n  DTRACE_HTTP_SERVER_REQUEST = () => {},\n  DTRACE_HTTP_SERVER_RESPONSE = () => {},\n  DTRACE_NET_SERVER_CONNECTION = () => {},\n  DTRACE_NET_STREAM_END = () => {}\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\n\nmodule.exports = {\n  DTRACE_HTTP_CLIENT_REQUEST,\n  DTRACE_HTTP_CLIENT_RESPONSE,\n  DTRACE_HTTP_SERVER_REQUEST,\n  DTRACE_HTTP_SERVER_RESPONSE,\n  DTRACE_NET_SERVER_CONNECTION,\n  DTRACE_NET_STREAM_END\n};\n",
    "name": "dtrace",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 122,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "/Users/iramgutierrez/.nvm/versions/node/v16.13.2/lib/node_modules/0x/lib/preload/redir-stdout.js",
    "source": "'use strict'\nconst net = require('net')\n\nlet isWorker = false\ntry {\n  // Skip redirecting stdout in Worker threads.\n  isWorker = !require('worker_threads').isMainThread\n} catch (e) {}\n\nif (!isWorker) {\n  const socket = new net.Socket({\n    fd: 3,\n    readable: false,\n    writable: true\n  })\n  Object.defineProperty(process, 'stdout', {\n    configurable: true,\n    enumerable: true,\n    get: () => socket\n  })\n  Object.defineProperty(process.stdout, 'fd', {\n    value: socket._handle.fd\n  })\n}\n",
    "name": "redir-stdout.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 130,
    "sourcePositions": []
  },
  null,
  null,
  {
    "url": "node:worker_threads",
    "source": "'use strict';\n\nconst {\n  isMainThread,\n  SHARE_ENV,\n  resourceLimits,\n  setEnvironmentData,\n  getEnvironmentData,\n  threadId,\n  Worker\n} = require('internal/worker');\n\nconst {\n  MessagePort,\n  MessageChannel,\n  moveMessagePortToContext,\n  receiveMessageOnPort,\n  BroadcastChannel,\n} = require('internal/worker/io');\n\nconst {\n  markAsUntransferable,\n} = require('internal/buffer');\n\nmodule.exports = {\n  isMainThread,\n  MessagePort,\n  MessageChannel,\n  markAsUntransferable,\n  moveMessagePortToContext,\n  receiveMessageOnPort,\n  resourceLimits,\n  threadId,\n  SHARE_ENV,\n  Worker,\n  parentPort: null,\n  workerData: null,\n  BroadcastChannel,\n  setEnvironmentData,\n  getEnvironmentData,\n};\n",
    "name": "node:worker_threads",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 133,
    "sourcePositions": []
  },
  null,
  null,
  {
    "url": "/Users/iramgutierrez/.nvm/versions/node/v16.13.2/lib/node_modules/0x/lib/preload/soft-exit.js",
    "source": "'use strict'\n\nprocess.on('SIGINT', process.exit)\nprocess.on('SIGTERM', process.exit)\n",
    "name": "soft-exit.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 136,
    "sourcePositions": []
  }
]}
